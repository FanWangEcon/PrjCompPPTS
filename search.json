[{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_dev_child_teacher_ratio.html","id":"three-core-files","dir":"Articles","previous_headings":"Algorithm outline","what":"Three core files","title":"Develop level ratio change elasticity functions","text":"follow steps , produces three separable files, merge together. file’s unit observation ultimately locType x loc Step 1 file, levels ratios, flr: Start long file, keep locations location types, select subst years, select teachers, schools, students, youthpop different ratios can constructed, levels want kept unit obs: locType x loc x time Teacher student: var_rat_t2s Teacher youthpop: var_rat_t2y School student: var_rat_s2s School youthpop: var_rat_sty Step 2 file, percentage change, fpc, also contains levels: unit obs: locType x loc x time x var(level/change) Generate ranks, grouped locType x loc x time x var(level/change) unit obs: locType x loc x var(level/change) 1980 2020 change 80 00, 00 20 Step 3 file, elasticity, fel: fpc, keep percentage changes stats vars, drop level rank vars unit obs: locType x loc x vars(level/change) x changeSpan unit obs: locType x loc x changeSpan ELASTICITY: ratio percentage changes across vars unit obs: locType x loc x vars, year spans columns","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_dev_child_teacher_ratio.html","id":"output-file","dir":"Articles","previous_headings":"Algorithm outline","what":"Output file","title":"Develop level ratio change elasticity functions","text":"now proceed outline development tables relevant different components paper, corresponding paper section. Global changes youth population table: file flr, keep levels 1960, 80, 00, 20, country + 7 regions fpc, changes 60t80, 80t20, 00t20, country + 7 regions file flr, keep ranks 1960, 20, country + 7 regions Group region type region, sort country, 9 variable/column table Global children teachers file, two versions, pupil- children-based separately: Unit observation: country selected years var country var (3) children teacher ratio 1980, 2000, 2020: fpc, select level col ratio rows var (3) children teacher ranking 1980 vs 2020: fpc, select level col ranks row var (1) children teacher ratio change time 1980 2020: fpc, select change col ratio row var (1) percentage change children 1980 2020: fpc, select change col level row var (1) percentage change teachers 1980 2020: fpc, select change col level row var (1) teacher-children elasticity time: fel, select changeSpan row Teachers Schools vs children pupil sub-regions.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_dev_child_teacher_ratio.html","id":"load-data-inputs-and-review","dir":"Articles","previous_headings":"","what":"Load data inputs and review","title":"Develop level ratio change elasticity functions","text":"load key file load global population data. review unique values variables. get unique “variable” values, drop enroll_ratio Conduct basic sorting common operations file.","code":"ppts_code_wrk <- ppts_country_code ppts_wrk <- ppts_easia_weuro_world_pchg colnames(ppts_wrk) #> [1] \"location_code\"  \"location_level\" \"variable\"       \"year_bins_type\" #> [5] \"year_bins\"      \"pchg\"           \"pchg_interp1\"   \"value\"          #> [9] \"value_interp1\" print(ppts_wrk %>% distinct(variable)) #> # A tibble: 5 × 1 #>   variable #>   <fct>    #> 1 gdp      #> 2 student  #> 3 teacher  #> 4 youthpop #> 5 school print(ppts_wrk %>% distinct(location_level)) #> # A tibble: 4 × 1 #>   location_level #>   <fct>          #> 1 country        #> 2 multicountry   #> 3 multiprovince  #> 4 province print(ppts_wrk %>% distinct(year_bins_type)) #> # A tibble: 5 × 1 #>   year_bins_type #>   <fct>          #> 1 1920t2020i05   #> 2 1920t2020i10   #> 3 1920t2020i20   #> 4 1925t2015i15   #> 5 1940t2020i01 print(ppts_wrk %>% distinct(year_bins, year_bins_type) %>%   arrange(year_bins_type, year_bins), n = 200) #> # A tibble: 142 × 2 #>     year_bins year_bins_type #>     <chr>     <fct>          #>   1 1921-1925 1920t2020i05   #>   2 1926-1930 1920t2020i05   #>   3 1931-1935 1920t2020i05   #>   4 1936-1940 1920t2020i05   #>   5 1941-1945 1920t2020i05   #>   6 1946-1950 1920t2020i05   #>   7 1951-1955 1920t2020i05   #>   8 1956-1960 1920t2020i05   #>   9 1961-1965 1920t2020i05   #>  10 1966-1970 1920t2020i05   #>  11 1971-1975 1920t2020i05   #>  12 1976-1980 1920t2020i05   #>  13 1981-1985 1920t2020i05   #>  14 1986-1990 1920t2020i05   #>  15 1991-1995 1920t2020i05   #>  16 1996-2000 1920t2020i05   #>  17 2001-2005 1920t2020i05   #>  18 2006-2010 1920t2020i05   #>  19 2011-2015 1920t2020i05   #>  20 2016-2020 1920t2020i05   #>  21 1921-1930 1920t2020i10   #>  22 1931-1940 1920t2020i10   #>  23 1941-1950 1920t2020i10   #>  24 1951-1960 1920t2020i10   #>  25 1961-1970 1920t2020i10   #>  26 1971-1980 1920t2020i10   #>  27 1981-1990 1920t2020i10   #>  28 1991-2000 1920t2020i10   #>  29 2001-2010 1920t2020i10   #>  30 2011-2020 1920t2020i10   #>  31 1921-1940 1920t2020i20   #>  32 1941-1960 1920t2020i20   #>  33 1961-1980 1920t2020i20   #>  34 1981-2000 1920t2020i20   #>  35 2001-2020 1920t2020i20   #>  36 1926-1940 1925t2015i15   #>  37 1941-1955 1925t2015i15   #>  38 1956-1970 1925t2015i15   #>  39 1971-1985 1925t2015i15   #>  40 1986-2000 1925t2015i15   #>  41 2001-2015 1925t2015i15   #>  42 1920      1940t2020i01   #>  43 1921      1940t2020i01   #>  44 1922      1940t2020i01   #>  45 1923      1940t2020i01   #>  46 1924      1940t2020i01   #>  47 1925      1940t2020i01   #>  48 1926      1940t2020i01   #>  49 1927      1940t2020i01   #>  50 1928      1940t2020i01   #>  51 1929      1940t2020i01   #>  52 1930      1940t2020i01   #>  53 1931      1940t2020i01   #>  54 1932      1940t2020i01   #>  55 1933      1940t2020i01   #>  56 1934      1940t2020i01   #>  57 1935      1940t2020i01   #>  58 1936      1940t2020i01   #>  59 1937      1940t2020i01   #>  60 1938      1940t2020i01   #>  61 1939      1940t2020i01   #>  62 1940      1940t2020i01   #>  63 1941      1940t2020i01   #>  64 1942      1940t2020i01   #>  65 1943      1940t2020i01   #>  66 1944      1940t2020i01   #>  67 1945      1940t2020i01   #>  68 1946      1940t2020i01   #>  69 1947      1940t2020i01   #>  70 1948      1940t2020i01   #>  71 1949      1940t2020i01   #>  72 1950      1940t2020i01   #>  73 1951      1940t2020i01   #>  74 1952      1940t2020i01   #>  75 1953      1940t2020i01   #>  76 1954      1940t2020i01   #>  77 1955      1940t2020i01   #>  78 1956      1940t2020i01   #>  79 1957      1940t2020i01   #>  80 1958      1940t2020i01   #>  81 1959      1940t2020i01   #>  82 1960      1940t2020i01   #>  83 1961      1940t2020i01   #>  84 1962      1940t2020i01   #>  85 1963      1940t2020i01   #>  86 1964      1940t2020i01   #>  87 1965      1940t2020i01   #>  88 1966      1940t2020i01   #>  89 1967      1940t2020i01   #>  90 1968      1940t2020i01   #>  91 1969      1940t2020i01   #>  92 1970      1940t2020i01   #>  93 1971      1940t2020i01   #>  94 1972      1940t2020i01   #>  95 1973      1940t2020i01   #>  96 1974      1940t2020i01   #>  97 1975      1940t2020i01   #>  98 1976      1940t2020i01   #>  99 1977      1940t2020i01   #> 100 1978      1940t2020i01   #> 101 1979      1940t2020i01   #> 102 1980      1940t2020i01   #> 103 1981      1940t2020i01   #> 104 1982      1940t2020i01   #> 105 1983      1940t2020i01   #> 106 1984      1940t2020i01   #> 107 1985      1940t2020i01   #> 108 1986      1940t2020i01   #> 109 1987      1940t2020i01   #> 110 1988      1940t2020i01   #> 111 1989      1940t2020i01   #> 112 1990      1940t2020i01   #> 113 1991      1940t2020i01   #> 114 1992      1940t2020i01   #> 115 1993      1940t2020i01   #> 116 1994      1940t2020i01   #> 117 1995      1940t2020i01   #> 118 1996      1940t2020i01   #> 119 1997      1940t2020i01   #> 120 1998      1940t2020i01   #> 121 1999      1940t2020i01   #> 122 2000      1940t2020i01   #> 123 2001      1940t2020i01   #> 124 2002      1940t2020i01   #> 125 2003      1940t2020i01   #> 126 2004      1940t2020i01   #> 127 2005      1940t2020i01   #> 128 2006      1940t2020i01   #> 129 2007      1940t2020i01   #> 130 2008      1940t2020i01   #> 131 2009      1940t2020i01   #> 132 2010      1940t2020i01   #> 133 2011      1940t2020i01   #> 134 2012      1940t2020i01   #> 135 2013      1940t2020i01   #> 136 2014      1940t2020i01   #> 137 2015      1940t2020i01   #> 138 2016      1940t2020i01   #> 139 2017      1940t2020i01   #> 140 2018      1940t2020i01   #> 141 2019      1940t2020i01   #> 142 2020      1940t2020i01 ar_st_vars <- unique(ppts_wrk %>% pull(variable)) ar_year_bins_type <- unique(ppts_wrk %>% pull(year_bins_type)) print(ar_st_vars) #> [1] gdp      student  teacher  youthpop school   #> Levels: gdp school student teacher youthpop print(ar_year_bins_type) #> [1] 1920t2020i05 1920t2020i10 1920t2020i20 1925t2015i15 1940t2020i01 #> Levels: 1920t2020i05 1920t2020i10 1920t2020i20 1925t2015i15 1940t2020i01 ppts_wrk <- ppts_wrk %>%   arrange(location_level, location_code, year_bins) # %>% # filter(!(location_level %in% c(\"province\", \"multiprovince\")))"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_dev_child_teacher_ratio.html","id":"implement-flr-file","dir":"Articles","previous_headings":"","what":"Implement FLR file","title":"Develop level ratio change elasticity functions","text":"FLR file, proceed beolow. functionalized [PrjCompPPTS::ff_ppts_lrce_flr()]. First, start long file, keep locations location types, select subst years, select teachers, schools, students, youthpop different ratios can constructed, levels want kept Second, vars kept long wide: unit obs: locType x loc x time Third, RATIO/LEVELS: Compute key ratios within time periods, year level/ratio stats done: Teacher student: var_rat_t2s Teacher youthpop: var_rat_t2y School student: var_rat_s2s School youthpop: var_rat_sty Review output. FLR","code":"df_ysts <- ppts_wrk %>%   filter(variable %in% c(     \"youthpop\", \"student\",     \"teacher\", \"school\"   )) %>%   filter(year_bins_type == \"1940t2020i01\") %>%   mutate(year_bins = as.numeric(year_bins)) %>%   filter(year_bins %in% c(1960, 1980, 1990, 2000, 2010, 2020)) # review years print(unique(df_ysts %>% pull(year_bins))) #> [1] 1960 1980 1990 2000 2010 2020 df_ysts_wide <- df_ysts %>%   pivot_wider(     id_cols = c(\"location_code\", \"location_level\", \"year_bins\"),     names_from = variable,     names_prefix = \"var_lvl_\",     names_sep = \"_\",     values_from = c(value_interp1)   ) print(glue::glue(\"dim of youth wide file: {dim(df_ysts_wide)}\")) #> dim of youth wide file: 1616 #> dim of youth wide file: 7 df_flr <- df_ysts_wide %>%   mutate(     var_rat_y2t = var_lvl_youthpop / var_lvl_teacher,     var_rat_s2t = var_lvl_student / var_lvl_teacher,     var_rat_y2s = var_lvl_youthpop / var_lvl_school,     var_rat_s2s = var_lvl_student / var_lvl_school   ) print(colnames(df_flr)) #>  [1] \"location_code\"    \"location_level\"   \"year_bins\"        \"var_lvl_youthpop\" #>  [5] \"var_lvl_student\"  \"var_lvl_teacher\"  \"var_lvl_school\"   \"var_rat_y2t\"      #>  [9] \"var_rat_s2t\"      \"var_rat_y2s\"      \"var_rat_s2s\" print(glue::glue(\"dim of youth wide ratio file: {dim(df_flr)}\")) #> dim of youth wide ratio file: 1616 #> dim of youth wide ratio file: 11 kable(df_flr[1:300,], caption=\"FLR\")"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_dev_child_teacher_ratio.html","id":"implement-fpc-file","dir":"Articles","previous_headings":"","what":"Implement FPC file","title":"Develop level ratio change elasticity functions","text":"Step 2, generate FPC file. functionalized [PrjCompPPTS::ff_ppts_lrce_fpc()]. First, levels/ratios file (keep ranks), variables levels ratios, convert vars long. unit obs: locType x loc x time x var(level/change). Second, generate ranks, grouped locType x time x var(level/change). Ranking across locations. Third, select subperiods interest, time long wide: unit obs: locType x loc x var(level/change). Fourth, compute stats ratios time level change vars. 1980 2020 change, 80 00, 00 20. Review output. FPC","code":"df_ysts_longer <- df_flr %>%   pivot_longer(     cols = matches(\"var\"),     names_to = c(\"vartype\", \"variable\"),     names_pattern = paste0(\"var_(.*)_(.*)\"),     values_to = \"stat\"   ) %>%   drop_na(stat) print(glue::glue(\"dim of youth wide ratio file: {dim(df_ysts_longer)}\")) #> dim of youth wide ratio file: 6644 #> dim of youth wide ratio file: 6 df_ysts_longer_rank <- df_ysts_longer %>%   group_by(location_level, variable, year_bins) %>%   arrange(stat, ..by_group = TRUE) %>%   mutate(rank = row_number()) %>%   arrange(location_level, variable, year_bins, location_code) %>%   select(-stat, -vartype) %>%   mutate(vartype = \"rank\") %>%   rename(stat = rank) print(glue::glue(\"dim of youth wide ratio file: {dim(df_ysts_longer_rank)}\")) #> dim of youth wide ratio file: 6644 #> dim of youth wide ratio file: 6 ar_it_years_chg <- c(1960, 1980, 2000, 2020) df_ysts_longer_wide <- bind_rows(df_ysts_longer, df_ysts_longer_rank) %>%   filter(year_bins %in% ar_it_years_chg) %>%   pivot_wider(     id_cols = c(\"location_code\", \"location_level\", \"vartype\", \"variable\"),     names_from = year_bins,     names_prefix = \"year\",     names_sep = \"_\",     values_from = c(stat)   ) print(glue::glue(\"dim of youth wide ratio file: {dim(df_ysts_longer_wide)}\")) #> dim of youth wide ratio file: 2728 #> dim of youth wide ratio file: 8 df_fpc <- df_ysts_longer_wide %>%   mutate(     chg_80v60 = (year1980 - year1960) / year1960,     chg_00v80 = (year2000 - year1980) / year1980,     chg_20v00 = (year2020 - year2000) / year2000,     chg_20v80 = (year2020 - year1980) / year1980   ) print(glue::glue(\"dim FPC: {dim(df_fpc)}\")) #> dim FPC: 2728 #> dim FPC: 12 kable(df_fpc[1:300,], caption=\"FPC\")"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_dev_child_teacher_ratio.html","id":"implement-fel-file","dir":"Articles","previous_headings":"","what":"Implement FEL file","title":"Develop level ratio change elasticity functions","text":"functionalized [PrjCompPPTS::ff_ppts_lrce_fel()]. Note also generate elasticity information Compute Elasticities School Resources Changes Populations. done automatically , across possible combinations variables, , generate selected subset elasticities, note manual specify numerator denominator elasticity . First, fpc, keep percentage changes stats vars, drop level rank vars. Second, percentage change file, variables changes time, convert change spans long. unit obs: locType x loc x vars(change) x changeSpan. Third, convert vars(change) wide. unit obs: locType x loc x changeSpan. Fourth, following prior notations, compute percentage changes education resources percentage changes population. changes teachers denominator, call population-teacher elasticity. number schools denominator, call population-school elasticity. labor economics, labor supply elasticity refers change labor supply given change wages, also referred wage-labor-supply elasticity. follow form terminology . use following variable names following elasticities: Teacher student : var_elsa_t2s Teacher youthpop: var_elas_t2y School student: var_elas_s2s School youthpop: var_elas_sty Fifth, clean file convert standard format unit obs locType x loc x vars, year spans columns. Review output. FEL","code":"print(df_fpc %>% distinct(vartype)) #> # A tibble: 3 × 1 #>   vartype #>   <chr>   #> 1 lvl     #> 2 rat     #> 3 rank df_fpc_base <- df_fpc %>%   filter(vartype == \"lvl\") %>%   select(-contains(\"year\"), -vartype) print(glue::glue(\"dim df_fpc_base: {dim(df_fpc_base)}\")) #> dim df_fpc_base: 818 #> dim df_fpc_base: 7 df_fel_long <- df_fpc_base %>%   pivot_longer(     cols = matches(\"chg\"),     names_to = c(\"yearcomp\"),     names_pattern = paste0(\"chg_(.*)\"),     values_to = \"change\"   ) %>%   drop_na(change) print(glue::glue(\"dim df_fel_long: {dim(df_fel_long)}\")) #> dim df_fel_long: 2456 #> dim df_fel_long: 5 df_fel_wide <- df_fel_long %>%   pivot_wider(     id_cols = c(\"location_code\", \"location_level\", \"yearcomp\"),     names_from = variable,     names_prefix = \"var_chg_\",     names_sep = \"_\",     values_from = c(change)   ) print(glue::glue(\"dim df_fel_wide: {dim(df_fel_wide)}\")) #> dim df_fel_wide: 1055 #> dim df_fel_wide: 7 df_fel_elas <- df_fel_wide %>%   mutate(     var_elas_y2t = var_chg_teacher / var_chg_youthpop,     var_elas_s2t = var_chg_teacher / var_chg_student,     var_elas_y2s = var_chg_school / var_chg_youthpop,     var_elas_s2s = var_chg_school / var_chg_student   ) print(glue::glue(\"dim df_fel_elas: {dim(df_fel_elas)}\")) #> dim df_fel_elas: 1055 #> dim df_fel_elas: 11 df_fel <- df_fel_elas %>%   select(-contains(\"var_chg\")) %>%   pivot_longer(     cols = matches(\"var_elas\"),     names_to = c(\"variable\"),     names_pattern = paste0(\"var_elas_(.*)\"),     values_to = \"elasticity\"   ) %>%   drop_na(elasticity) %>%   pivot_wider(     id_cols = c(\"location_code\", \"location_level\", \"variable\"),     names_from = yearcomp,     names_prefix = \"elas_\",     names_sep = \"_\",     values_from = c(elasticity)   ) print(glue::glue(\"dim FEL: {dim(df_fel)}\")) #> dim FEL: 517 #> dim FEL: 7 kable(df_fel[1:300,], caption=\"FEL\")"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_elasticities.html","id":"load-data-inputs-and-review","dir":"Articles","previous_headings":"","what":"Load data inputs and review","title":"Compute Elasticities of School Resources to Changes in Populations","text":"load global population data. review unique values variables. get unique “variable” values, drop enroll_ratio","code":"# File use bl_interp <- FALSE ppts_wrk <- ppts_easia_weuro_world_pchg %>%    filter(!str_detect(year_bins_type, \"1940t2020i01\"))  str(ppts_wrk) #> tibble [25,765 × 9] (S3: tbl_df/tbl/data.frame) #>  $ location_code : Factor w/ 286 levels \"ABW\",\"AFE\",\"AFG\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ location_level: Factor w/ 4 levels \"country\",\"multicountry\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ variable      : Factor w/ 5 levels \"gdp\",\"school\",..: 1 1 1 1 1 1 1 1 3 3 ... #>  $ year_bins_type: Factor w/ 5 levels \"1920t2020i05\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ year_bins     : chr [1:25765] \"1981-1985\" \"1986-1990\" \"1991-1995\" \"1996-2000\" ... #>  $ pchg          : num [1:25765] NA NA 0.0532 0.064 -0.0504 ... #>  $ pchg_interp1  : num [1:25765] 1.2489 0.903 0.0532 0.064 -0.0504 ... #>  $ value         : num [1:25765] NA 27884 29367 31246 29670 ... #>  $ value_interp1 : num [1:25765] 14653 27884 29367 31246 29670 ... ar_st_vars <- unique(ppts_wrk %>% pull(variable)) ar_year_bins_type <- unique(ppts_wrk %>% pull(year_bins_type)) print(ar_st_vars) #> [1] gdp      student  teacher  youthpop school   #> Levels: gdp school student teacher youthpop print(ar_year_bins_type) #> [1] 1920t2020i05 1920t2020i10 1920t2020i20 1925t2015i15 #> Levels: 1920t2020i05 1920t2020i10 1920t2020i20 1925t2015i15 1940t2020i01"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_elasticities.html","id":"numerator-and-denominator-percentage-changes-and-elasticity","dir":"Articles","previous_headings":"","what":"Numerator and denominator percentage changes and Elasticity","title":"Compute Elasticities of School Resources to Changes in Populations","text":"generate separate columns “variables”, containing percentage change value variable. columns numerators, original column denominator. , reshape file just created, “numerators” column. compute elasticities ","code":"it_avg_type <- 1 for (it_avg_type in c(1, 2)) {      if (it_avg_type == 1) {     svr_var_val_exclude <- c(\"value_interp1\", \"pchg_interp1\")     svr_var_val <- \"value\"     svr_chg_var <- \"pchg\"     svr_chg_var_num <- \"pchg_numerator\"     svr_elas_var <- \"elasticity\"   } else if (it_avg_type == 2) {     svr_var_val_exclude <- c(\"value\", \"pchg\")     svr_var_val <- \"value_interp1\"     svr_chg_var <- \"pchg_interp1\"     svr_chg_var_num <- \"pchg_interp1_numerator\"     svr_elas_var <- \"elasticity_interp1\"   }        ppts_wrk_jnt <- ppts_wrk %>%      select(-one_of(svr_var_val_exclude))   ar_st_cur_col_var <- ar_st_vars   for (st_cur_col_var in ar_st_cur_col_var) {     #   st_cur_col_var <- \"school\"     st_new_col_var <- paste0(\"pchgnum_\", st_cur_col_var)     # 20. Generate \"variable\"-specific dataframes     ppts_one_var <- ppts_wrk %>%       select(-one_of(svr_var_val_exclude)) %>%       filter(variable == st_cur_col_var) %>%       select(-!!sym(svr_var_val), - variable) %>%       rename(!!sym(st_new_col_var) := !!sym(svr_chg_var))          # 30. Merge \"variable\"-specific dataframe to main     ppts_wrk_jnt <- ppts_wrk_jnt %>%       left_join(ppts_one_var,                 by = (c(                   \"location_code\" = \"location_code\",                   \"location_level\" = \"location_level\",                   \"year_bins_type\" = \"year_bins_type\",                   \"year_bins\" = \"year_bins\"                 )))   }      # Show variable names   print(colnames(ppts_wrk_jnt))   print(dim(ppts_wrk_jnt))      # 60. Reshape from wide to long, rename variable numerator, variable denominator   ppts_wrk_jnt_long <- ppts_wrk_jnt %>%      pivot_longer(cols = starts_with('pchgnum'),                  names_to = c('variable_numerator'),                  names_pattern = paste0(\"pchgnum_(.*)\"),                  values_to = svr_chg_var_num)      # 70. Compute elasticity   # Now, we simply divide the numerator from the variable \"pchg_yrspan_interp1_numerator\" by the values in \"pchg_yrspan_interp1\", which is the denominator.    # Compute elasticities   ppts_wrk_jnt_long <- ppts_wrk_jnt_long %>%     mutate(!!sym(svr_elas_var) :=                 !!sym(svr_chg_var_num)/!!sym(svr_chg_var))   # Keep the elasticity column    # ppts_wrk_jnt_long <- ppts_wrk_jnt_long %>%    #   select(-contains(\"value\"))      # 61. save files    if (it_avg_type == 1) {     ppts_wrk_jnt_long_val <- ppts_wrk_jnt_long   } else if (it_avg_type == 2) {     ppts_wrk_jnt_long_interp1 <- ppts_wrk_jnt_long   }   } #>  [1] \"location_code\"    \"location_level\"   \"variable\"         \"year_bins_type\"   #>  [5] \"year_bins\"        \"pchg\"             \"value\"            \"pchgnum_gdp\"      #>  [9] \"pchgnum_student\"  \"pchgnum_teacher\"  \"pchgnum_youthpop\" \"pchgnum_school\"   #> [1] 25765    12 #>  [1] \"location_code\"    \"location_level\"   \"variable\"         \"year_bins_type\"   #>  [5] \"year_bins\"        \"pchg_interp1\"     \"value_interp1\"    \"pchgnum_gdp\"      #>  [9] \"pchgnum_student\"  \"pchgnum_teacher\"  \"pchgnum_youthpop\" \"pchgnum_school\"   #> [1] 25765    12"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_elasticities.html","id":"examine-elasticities","dir":"Articles","previous_headings":"","what":"Examine elasticities","title":"Compute Elasticities of School Resources to Changes in Populations","text":"now examine elasticity results. show percentage changes schools teachers, divided percentage change students, elasticity measures.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_elasticities.html","id":"elasticities-in-afghanistan","dir":"Articles","previous_headings":"Examine elasticities","what":"Elasticities in Afghanistan","title":"Compute Elasticities of School Resources to Changes in Populations","text":"data schools. show elasticity teachers respect students, per decade. Afghanistan:Elastiicty percentage change students denominator percentage change teacher numerator, using bin-type=1920t2020i10","code":"# Display st_year_bin_type <- \"1920t2020i10\" st_cur_col_var <- c(\"teacher\") # print(ppts_wrk_jnt_long[1:50,]) st_caption <- paste0(   \"Afghanistan:\",   \"Elastiicty with percentage change in students in the denominator \",    \"and percentage change in \", st_cur_col_var, \" in the numerator, \",    \"using as bin-type=\", st_year_bin_type) kable(ppts_wrk_jnt_long_interp1 %>%          filter(location_code == 'AFG' &                   variable == 'student' &                   year_bins_type == st_year_bin_type &                  variable_numerator == st_cur_col_var) %>%         select(-location_level, -year_bins_type,                 -value_interp1),       caption = st_caption)"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_elasticities.html","id":"elasticities-in-germany","dir":"Articles","previous_headings":"Examine elasticities","what":"Elasticities in Germany","title":"Compute Elasticities of School Resources to Changes in Populations","text":"Germany:Elastiicty percentage change students denominator percentage change school numerator, using bin-type=1920t2020i10","code":"# Display st_year_bin_type <- \"1920t2020i10\" st_cur_col_var <- \"school\" # print(ppts_wrk_jnt_long[1:50,]) st_caption <- paste0(   \"Germany:\",   \"Elastiicty with percentage change in students in the denominator \",    \"and percentage change in \", st_cur_col_var, \" in the numerator, \",    \"using as bin-type=\", st_year_bin_type) kable(ppts_wrk_jnt_long_interp1 %>%          filter(location_code == 'DEU' &                   variable == 'student' &                   year_bins_type == st_year_bin_type &                  variable_numerator == st_cur_col_var) %>%         select(-location_level, -year_bins_type,                 -value_interp1),       caption = st_caption)"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_elasticities.html","id":"elasticities-in-switzerland","dir":"Articles","previous_headings":"Examine elasticities","what":"Elasticities in Switzerland","title":"Compute Elasticities of School Resources to Changes in Populations","text":"Switerland, elasticity teachers students, schools students, every 10 years Switerland:Elastiicty percentage change students denominator percentage change teacher numerator, using bin-type=1920t2020i10","code":"# Display st_year_bin_type <- \"1920t2020i10\" st_cur_col_var <- \"teacher\" # print(ppts_wrk_jnt_long[1:50,]) st_caption <- paste0(   \"Switerland:\",   \"Elastiicty with percentage change in students in the denominator \",    \"and percentage change in \", st_cur_col_var, \" in the numerator, \",    \"using as bin-type=\", st_year_bin_type) kable(ppts_wrk_jnt_long_interp1 %>%          filter(location_code == 'CHE' &                   variable == 'student' &                   year_bins_type == st_year_bin_type &                  variable_numerator == st_cur_col_var) %>%         select(-location_level, -year_bins_type,                 -value_interp1),       caption = st_caption)"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_elasticities.html","id":"elasticities-in-austria","dir":"Articles","previous_headings":"Examine elasticities","what":"Elasticities in Austria","title":"Compute Elasticities of School Resources to Changes in Populations","text":"Austria, elasticity schools students, every 20 years Austria:Elastiicty percentage change students denominator percentage change school numerator, using bin-type=1920t2020i20","code":"# Display st_year_bin_type <- \"1920t2020i20\" st_cur_col_var <- \"school\" # print(ppts_wrk_jnt_long[1:50,]) st_caption <- paste0(   \"Austria:\",   \"Elastiicty with percentage change in students in the denominator \",    \"and percentage change in \", st_cur_col_var, \" in the numerator, \",    \"using as bin-type=\", st_year_bin_type) kable(ppts_wrk_jnt_long_interp1 %>%          filter(location_code == 'AUT' &                   variable == 'student' &                   year_bins_type == st_year_bin_type &                  variable_numerator == st_cur_col_var) %>%         select(-location_level, -year_bins_type,                 -value_interp1),       caption = st_caption)"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_elasticities.html","id":"elasticities-in-busan-korea","dir":"Articles","previous_headings":"Examine elasticities","what":"Elasticities in Busan, Korea","title":"Compute Elasticities of School Resources to Changes in Populations","text":"Busan, Korea, elasticity teachers students, schools students, every 10 years Busan Korea Elastiicty teachers respect students","code":"# Display st_year_bin_type <- \"1920t2020i10\" st_cur_col_var <- \"teacher\" # print(ppts_wrk_jnt_long[1:50,]) kable(ppts_wrk_jnt_long_interp1 %>%          filter(location_code == 'KOR_Busan' &                   variable == 'student' &                   year_bins_type == st_year_bin_type &                  variable_numerator == st_cur_col_var) %>%         select(-location_level, -year_bins_type,                 -value_interp1),       caption = \"Busan Korea Elastiicty of teachers with respect to students\")"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_elasticities.html","id":"save-elasticity-file","dir":"Articles","previous_headings":"","what":"Save elasticity file","title":"Compute Elasticities of School Resources to Changes in Populations","text":"","code":"# Review file variable names print(colnames(ppts_wrk_jnt_long)) #>  [1] \"location_code\"          \"location_level\"         \"variable\"               #>  [4] \"year_bins_type\"         \"year_bins\"              \"pchg_interp1\"           #>  [7] \"value_interp1\"          \"variable_numerator\"     \"pchg_interp1_numerator\" #> [10] \"elasticity_interp1\" print(str(ppts_wrk_jnt_long)) #> tibble [128,825 × 10] (S3: tbl_df/tbl/data.frame) #>  $ location_code         : Factor w/ 286 levels \"ABW\",\"AFE\",\"AFG\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ location_level        : Factor w/ 4 levels \"country\",\"multicountry\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ variable              : Factor w/ 5 levels \"gdp\",\"school\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ year_bins_type        : Factor w/ 5 levels \"1920t2020i05\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ year_bins             : chr [1:128825] \"1981-1985\" \"1981-1985\" \"1981-1985\" \"1981-1985\" ... #>  $ pchg_interp1          : num [1:128825] 1.25 1.25 1.25 1.25 1.25 ... #>  $ value_interp1         : num [1:128825] 14653 14653 14653 14653 14653 ... #>  $ variable_numerator    : chr [1:128825] \"gdp\" \"student\" \"teacher\" \"youthpop\" ... #>  $ pchg_interp1_numerator: num [1:128825] 1.2489 NA NA -0.0298 NA ... #>  $ elasticity_interp1    : num [1:128825] 1 NA NA -0.0239 NA ... #> NULL # Save file if (bl_resave_to_data) {   ppts_easia_weuro_world_elas_interp1 <- ppts_wrk_jnt_long_interp1   write_csv(ppts_easia_weuro_world_elas_interp1, \"../data/ppts_easia_weuro_world_elas_interp1.csv\")   usethis::use_data(ppts_easia_weuro_world_elas_interp1, overwrite = TRUE)      ppts_easia_weuro_world_elas_raw <- ppts_wrk_jnt_long_val   write_csv(ppts_easia_weuro_world_elas_raw, \"../data/ppts_easia_weuro_world_elas_raw.csv\")   usethis::use_data(ppts_easia_weuro_world_elas_raw, overwrite = TRUE) }"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"load-and-select","dir":"Articles","previous_headings":"","what":"Load and select","title":"Compute Percentage Changes of School Resources and Population","text":"","code":"# A. Load and select ---- ppts_easia_weuro_sel <- ppts_easia_weuro_world %>%   select(location_code, location_level, year,          contains(\"stats\"), -stats_enroll_ratio)"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"transform-data","dir":"Articles","previous_headings":"","what":"Transform data","title":"Compute Percentage Changes of School Resources and Population","text":"","code":"# B. Long to wide ---- ppts_easia_weuro_long <- ppts_easia_weuro_sel %>%   pivot_longer(cols = starts_with('stats'),                names_to = c('variable'),                names_pattern = paste0(\"stats_(.*)\"),                values_to = \"value\") str(ppts_easia_weuro_long) #> tibble [88,560 × 5] (S3: tbl_df/tbl/data.frame) #>  $ location_code : Factor w/ 286 levels \"ABW\",\"AFE\",\"AFG\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ location_level: Factor w/ 4 levels \"country\",\"multicountry\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ year          : num [1:88560] 1960 1960 1960 1960 1960 ... #>  $ variable      : chr [1:88560] \"youthpop\" \"student\" \"teacher\" \"school\" ... #>  $ value         : num [1:88560] 23769 NA NA NA NA ... # View(ppts_easia_weuro_long)  # C sort and group ---- ppts_easia_weuro_long <- ppts_easia_weuro_long %>%   arrange(location_code, location_level, variable, year) %>%   group_by(location_code, location_level, variable) # kable(ppts_easia_weuro_long %>%  #   filter(location_code == 'AFG' & variable == 'student'))"},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"raw-percentage-changes","dir":"Articles","previous_headings":"Annual percentage changes, Interpolate and Extrapolate","what":"Raw percentage changes","title":"Compute Percentage Changes of School Resources and Population","text":"compute annual percentage changes . Note ","code":"# D. Annual percentage changes ---- # Compute these # - annual: for all possible consecutive years # - annual_interp1: annual based on consecutive year if possible,  # when that is not possible, find closest years of available data,  # and derive annual (considering compounding) growth rates  # D.1 annual ppts_easia_weuro_long <- ppts_easia_weuro_long %>%   mutate(pchg_yr1 = (value - lag(value)) / lag(value))  # View(ppts_easia_weuro_long) kable(ppts_easia_weuro_long %>%          filter(location_code == 'AFG' & variable == 'student')) kable(ppts_easia_weuro_long %>%         filter(location_code == 'KOR_Busan' & variable == 'school'))"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"interpolating","dir":"Articles","previous_headings":"Annual percentage changes, Interpolate and Extrapolate","what":"Interpolating","title":"Compute Percentage Changes of School Resources and Population","text":"drop NA values, keeping rows observed levels. take difference levels consecutive rows divide prior level get percentage changes. potential percentage changes across multiple years gaps NA values. assume constant growth rate -years, compute percentage annualized percentage changes. Given , annual percentage change formula shown : annualPercentChange(t′ t′+1)=((schoolTeacherOrStudentt+τschoolTeacherOrStudentt)1τ−1), \\text{annualPercentChange}_{\\left(\\text{} t' \\text{ } t'+1\\right)} =  \\left(\\left( \\frac{\\text{schoolTeacherOrStudent}_{t+\\tau}}{\\text{schoolTeacherOrStudent}_{t}} \\right)^{\\frac{1}{\\tau}} - 1\\right),   , percentage change t≤t′≤t+τ−1t \\le t' \\le t+\\tau-1. annual percentage change exact know level schools, teachers, students current year year immediately . based growth trend “linear” interpolation years missing data . use interpolated annual percentage changes fill gaps levels. interpolate function: ff_ppts_interp_linear. test contents function via scripts , confirm script function produce result. first proceed script, function. Construct script-based results: Functionalizing script, function output : Year selection:","code":"# D.2 annual_interp1 # D.2.1 compute linearly interpolated annual change # create new sorting var, to take difference across years even if not # consecutive ppts_easia_weuro_interp1 <- ppts_easia_weuro_long %>%   drop_na(value) %>%   # New sorting variable, +1 regardless of year gap   mutate(year_with_gap_ctr = row_number()) %>%   arrange(location_code, location_level, variable, year_with_gap_ctr) %>%   group_by(location_code, location_level, variable) %>%   # compute percentage change over span and years gap over span   mutate(pchg_span_interp1 = (value - lag(value)) / lag(value),          span_yr = (year - lag(year))) %>%   # linear-interpolated annualized (with compounding) percentage change   mutate(pchg_yr1_interp1 = abs(1 + pchg_span_interp1) ^ (1 / span_yr) - 1) %>%   # adjust values given percentages interpolated   select(location_code, location_level,          year, variable, span_yr, value, pchg_yr1_interp1)  # D.2.2 expand to all interpolating years # the pchg_yr1_interp1 variable is only shown at start year,  # due to drop_na(value) earlier # need to expand to all years ppts_easia_weuro_interp1 <- ppts_easia_weuro_interp1 %>%   ungroup() %>% mutate(span_yr_dup = span_yr) %>%   drop_na(span_yr) %>%   tidyr::uncount(span_yr) %>%   group_by(location_code, location_level, variable, year) %>%   mutate(year_adj = row_number() + year - span_yr_dup,           gap_ctr = row_number()) %>%   ungroup() %>%   select(location_code, location_level,          year_adj, variable, value, pchg_yr1_interp1, gap_ctr, span_yr_dup) %>%   rename(year = year_adj)  # D.2.3, Fill in missing values ppts_easia_weuro_interp1 <- ppts_easia_weuro_interp1 %>%   arrange(location_code, location_level, variable, year) %>%   group_by(location_code, location_level, variable) %>%   mutate(value_interp1 = case_when(     # Conditions A and B are both gap_ctr == span_yr_dup     # A. value is correct, originally not NA     gap_ctr == 1 & span_yr_dup == 1 ~ value,     # B. value is also correct, next available year with non NA     gap_ctr == span_yr_dup & span_yr_dup > 1 ~ value,     # C. in-between years, where values were NA     gap_ctr < span_yr_dup ~ (value/((1+pchg_yr1_interp1)^(span_yr_dup-gap_ctr)))     )) %>%   ungroup() %>%   select(-gap_ctr, -span_yr_dup, -value)  # D.3 merge together ppts_easia_weuro_interp1_script <- ppts_easia_weuro_long %>%   left_join(ppts_easia_weuro_interp1,             by = (c('location_code' = 'location_code',                     'location_level' = 'location_level',                     'year' = 'year',                     'variable' = 'variable'))) %>%   # add in data from the first year of raw data availability   mutate(value_interp1 = case_when(     !is.na(value) & is.na(value_interp1) ~ value,     TRUE ~ value_interp1     ))  # Print interpolated results str(ppts_easia_weuro_interp1) #> tibble [52,118 × 6] (S3: tbl_df/tbl/data.frame) #>  $ location_code   : Factor w/ 286 levels \"ABW\",\"AFE\",\"AFG\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ location_level  : Factor w/ 4 levels \"country\",\"multicountry\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ year            : num [1:52118] 1987 1988 1989 1990 1991 ... #>  $ variable        : chr [1:52118] \"gdp\" \"gdp\" \"gdp\" \"gdp\" ... #>  $ pchg_yr1_interp1: num [1:52118] 0.176 0.2014 0.122 0.0209 0.0384 ... #>  $ value_interp1   : num [1:52118] 20263 24343 27313 27884 28954 ... kable(ppts_easia_weuro_interp1 %>% select(-location_level) %>%         filter(location_code == 'AFG' & variable == 'student')) # Function parameters df_data <- ppts_easia_weuro_long ar_svr_group <- c(\"location_code\", \"location_level\", \"variable\") svr_data <- c(\"value\") svr_date <- c(\"year\") svr_interp <- c(\"value_interp1_func\") # Run function ppts_easia_weuro_interp1_func <- PrjCompPPTS::ff_ppts_interp_linear(   df_data,   ar_svr_group = ar_svr_group,   svr_data = svr_data,   svr_date = svr_date,   svr_interp = svr_interp,   verbose = FALSE ) %>% rename(value_interp1 = value_interp1_func) # Test if identical bl_func_script_consistency <- identical(   ppts_easia_weuro_interp1_func, ppts_easia_weuro_interp1_script) print(glue::glue(\"bl_func_script_consistency = {bl_func_script_consistency}\")) #> bl_func_script_consistency = TRUE # Only consider years in this range it_min_year <- 1920 it_max_year <- 2020 ppts_easia_weuro_long <- ppts_easia_weuro_interp1_func ppts_easia_weuro_long <- ppts_easia_weuro_long %>%     filter(year <= it_max_year & year >= it_min_year)"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"extrapolating","dir":"Articles","previous_headings":"Annual percentage changes, Interpolate and Extrapolate","what":"Extrapolating","title":"Compute Percentage Changes of School Resources and Population","text":"extrapolate several years start end data timeframes. Extrapolation exceed going 5 years forward going 5 years backwards. extrapolation happen within years least one variable, among variables country, non-NA values. cases country’s data available starting 1980, allow extrapolation back 1980 5 years. Specifically, generally population data 1960 2020 countries, extrapolating prior 1960 2020. data Korea starts 1965, extrapolate years 1965, one Korean variables data starting 1970, extrapolate 1965 1970. variable data starting 1980, extrapolate five years, back 1975. Germany, unification happened 1992. data 1990, preventing us computing change 1990 2000. extrapolate 1992 back 5 years 1987, generating value 1990. Extrapolation meant help situations data 2019, consistency comparison, useful extend data 2020 extrapolating 1 year forward. Compute start end year variable country. interpolated value column, NaN values start end available data. First go forward, value = lag(value) x lag(1+change), fill value NaN current year less 5 terimal data availability time. going backwards, , value = lead(value, n=1) / lead(1 + change, n=2) First, generate end start years interpolating percentages, etc. Second extrapolate.","code":"# Generate start and end times ppts_easia_weuro_extrapolate <- ppts_easia_weuro_long %>%   drop_na(value) %>%   arrange(location_code, location_level, variable, year) %>%   group_by(location_code, location_level, variable) %>%   mutate(year_start = first(year, na_rm=TRUE), year_end = last(year, na_rm=TRUE),          value_start = first(value, na_rm=TRUE), value_end = last(value, na_rm=TRUE),          pchg_yr1_interp1_start = first(pchg_yr1_interp1, na_rm=TRUE),          pchg_yr1_interp1_end = last(pchg_yr1_interp1, na_rm=TRUE)) %>%    slice(1) %>%   select(location_code, location_level, variable,           contains(\"_start\"), contains(\"_end\")) # How many years to extrapolate back it_year_extrplt_backmost <- 5 it_year_extrplt_fordmost <- 5  # Merge with full skeleton for expansion ppts_easia_weuro_extrapolate <- ppts_easia_weuro_long %>%   select(location_code, location_level, variable, year, value) %>%   left_join(ppts_easia_weuro_extrapolate,             by = (c('location_code' = 'location_code',                     'location_level' = 'location_level',                     'variable' = 'variable')))   # Extrapolate forward ppts_easia_weuro_extrapolate <- ppts_easia_weuro_extrapolate %>%   mutate(value_extrapolate =     case_when(         is.na(value) & (year_end + it_year_extrplt_fordmost >= year) & (year > year_end) ~           (value_end*((1+pchg_yr1_interp1_end)^(year-year_end))),         is.na(value) & (year_start - it_year_extrplt_backmost <= year) & (year < year_start) ~           (value_start/((1+pchg_yr1_interp1_start)^(year_start - year))),         TRUE ~ NA       )) %>%   mutate(pchg_yr1_interp1_extrapolate =     case_when(         (year_end + it_year_extrplt_fordmost >= year) & (year >= year_end) ~           pchg_yr1_interp1_end,         (year_start - it_year_extrplt_backmost <= year) & (year <= year_start) ~           pchg_yr1_interp1_start,         TRUE ~ NA       ))      # Get extrapolated values ppts_easia_weuro_extrapolate <- ppts_easia_weuro_extrapolate %>%   drop_na(pchg_yr1_interp1_extrapolate) %>%    select(location_code, location_level, variable, year,           value_extrapolate, pchg_yr1_interp1_extrapolate) %>%   rename(value_interp1 = value_extrapolate,           pchg_yr1_interp1 = pchg_yr1_interp1_extrapolate)  # Print kable(ppts_easia_weuro_extrapolate %>% select(-location_level) %>%         filter(location_code == 'AFG' & variable == 'student')) #> Adding missing grouping variables: `location_level` # kable(ppts_easia_weuro_extrapolate %>% select(-location_level) %>% #         filter(location_code == 'KOR_Busan' & variable == 'school'))"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"merge-raw-and-interpolated-results-together-with-extrapolated-results","dir":"Articles","previous_headings":"Annual percentage changes, Interpolate and Extrapolate","what":"Merge raw and interpolated results together with extrapolated results","title":"Compute Percentage Changes of School Resources and Population","text":"Merge extrpolated results back main dataframe.","code":"# Merge ppts_easia_weuro_long <- ppts_easia_weuro_long %>%   left_join(ppts_easia_weuro_extrapolate,             by = (c('location_code' = 'location_code',                     'location_level' = 'location_level',                     'year' = 'year',                     'variable' = 'variable')))   # Combine columns ppts_easia_weuro_long <- ppts_easia_weuro_long %>%               mutate(value_interp1 = coalesce(value_interp1.x, value_interp1.y)) %>%   select(-value_interp1.x, -value_interp1.y) %>%   mutate(pchg_yr1_interp1 = coalesce(pchg_yr1_interp1.x, pchg_yr1_interp1.y)) %>%   select(-pchg_yr1_interp1.x, -pchg_yr1_interp1.y) %>%   drop_na(value_interp1)"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"interpolation-and-extrapolation-results-overview","dir":"Articles","previous_headings":"","what":"Interpolation and Extrapolation Results Overview","title":"Compute Percentage Changes of School Resources and Population","text":"results value_interp1 column contains interpolation extrapolation results.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"afghanistan-interpolate-and-extrapolate-results","dir":"Articles","previous_headings":"Interpolation and Extrapolation Results Overview","what":"Afghanistan Interpolate and Extrapolate Results","title":"Compute Percentage Changes of School Resources and Population","text":"illustrate interpolation results showing outputs Afghanistan student counts. , extrapolating several years back 1965, forward 1 year 2020. fill several years missing data. extrapolating data 2020, able generate percentage change 2000 2020, 2010 2020, etc. also able see levels 2020. percentages levels available without interpolation/extrapolation. can see data Afghanistan much complete interpolating/extrapolating. Raw interpolated Afghanistan students results","code":"# str(ppts_easia_weuro_long) # print kable(ppts_easia_weuro_long %>%          filter(location_code == 'AFG' & variable == 'student') %>%         ungroup() %>%         select(location_code, year, variable,            value, value_interp1, pchg_yr1, pchg_yr1_interp1),        caption=\"Raw and interpolated Afghanistan students results\")"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"austria-interpolate-and-extrapolate-results","dir":"Articles","previous_headings":"Interpolation and Extrapolation Results Overview","what":"Austria Interpolate and Extrapolate Results","title":"Compute Percentage Changes of School Resources and Population","text":"Austrian data starts 1923, school count available year. Hence, extrapolate prior . data starts 1923 (meaning measures information available 1923), school count data starts 1925, extrapolate back 2 years 1923. Austrian data initial decades spotty, hence interpolate fill gaps. Raw interpolated Austria schools results","code":"# str(ppts_easia_weuro_long) # print kable(ppts_easia_weuro_long %>%          filter(location_code == 'AUT' & variable == 'school') %>%         ungroup() %>%         select(location_code, year, variable,            value, value_interp1, pchg_yr1, pchg_yr1_interp1),        caption=\"Raw and interpolated Austria schools results\")"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"switzerland-example","dir":"Articles","previous_headings":"Interpolation and Extrapolation Results Overview","what":"Switzerland Example","title":"Compute Percentage Changes of School Resources and Population","text":"historical data Switzerland, also recent data. Raw interpolated Switzerland schools results","code":"# str(ppts_easia_weuro_long) # print kable(ppts_easia_weuro_long %>%          filter(location_code == 'CHE' & variable == 'teacher') %>%         ungroup() %>%         select(location_code, year, variable,            value, value_interp1, pchg_yr1, pchg_yr1_interp1),        caption=\"Raw and interpolated Switzerland schools results\")"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"germany-example","dir":"Articles","previous_headings":"Interpolation and Extrapolation Results Overview","what":"Germany Example","title":"Compute Percentage Changes of School Resources and Population","text":"Germany reunified 1992, extrapolate obtain data predictions 1990 facilitate computing percentage changes. Raw interpolated Germany schools results","code":"# str(ppts_easia_weuro_long) # print kable(ppts_easia_weuro_long %>%          filter(location_code == 'DEU' & variable == 'school') %>%         ungroup() %>%         select(location_code, year, variable,            value, value_interp1, pchg_yr1, pchg_yr1_interp1),        caption=\"Raw and interpolated Germany schools results\")"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"korean-busan-interpolate-and-extrapolate-results","dir":"Articles","previous_headings":"Interpolation and Extrapolation Results Overview","what":"Korean Busan Interpolate and Extrapolate Results","title":"Compute Percentage Changes of School Resources and Population","text":"extrapolation interpolation Busan Korea, data available school counts 1965 2020, min max years Korean data, data available every single year. Raw interpolated Korean Busan province schools results","code":"# str(ppts_easia_weuro_long) # print kable(ppts_easia_weuro_long %>%          filter(location_code == 'KOR_Busan' & variable == 'school') %>%         ungroup() %>%         select(location_code, year, variable,            value, value_interp1, pchg_yr1, pchg_yr1_interp1),        caption=\"Raw and interpolated Korean Busan province schools results\")"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"generate-percentage-changes-every-5-10-15-20-years","dir":"Articles","previous_headings":"","what":"Generate percentage changes every 5, 10, 15, 20 years","title":"Compute Percentage Changes of School Resources and Population","text":"now consider several different cuts, end-points compute percentage changes. put cuts associated string names two lists. Generate percentage changes across start end end points bin, bins varying length. raw interpolated data.","code":"# Every five years from 1940 until 2020 ar_it_cuts_1940t2020_i05 <- seq(1920, 2020, length.out = 21) st_cuts_1940t2020_i05 <- \"1920t2020i05\" # Every ten years from 1940 until 2020 ar_it_cuts_1940t2020_i10 <- seq(1920, 2020, length.out = 11) st_cuts_1940t2020_i10 <- \"1920t2020i10\" # Every 15 years from 1940 until 2020 ar_it_cuts_1940t2020_i15 <- seq(1925, 2015, length.out = 7) st_cuts_1940t2020_i15 <- \"1925t2015i15\" # Every 20 years from 1940 until 2020 ar_it_cuts_1940t2020_i20 <- seq(1920, 2020, length.out = 6) st_cuts_1940t2020_i20 <- \"1920t2020i20\" # List of cuts ls_ar_it_cuts <- list(   ar_it_cuts_1940t2020_i05,   ar_it_cuts_1940t2020_i10,   ar_it_cuts_1940t2020_i15,   ar_it_cuts_1940t2020_i20 ) # Add names names(ls_ar_it_cuts) <- c(   st_cuts_1940t2020_i05,   st_cuts_1940t2020_i10,   st_cuts_1940t2020_i15,   st_cuts_1940t2020_i20 ) # Display for (st_cuts_name in names(ls_ar_it_cuts)) {   print(glue::glue(     \"cutTypeName={st_cuts_name}:\\n\",     \"bins={ls_ar_it_cuts[st_cuts_name]}\")) } #> cutTypeName=1920t2020i05: #> bins=c(1920, 1925, 1930, 1935, 1940, 1945, 1950, 1955, 1960, 1965, 1970, 1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015, 2020) #> cutTypeName=1920t2020i10: #> bins=c(1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990, 2000, 2010, 2020) #> cutTypeName=1925t2015i15: #> bins=c(1925, 1940, 1955, 1970, 1985, 2000, 2015) #> cutTypeName=1920t2020i20: #> bins=c(1920, 1940, 1960, 1980, 2000, 2020) # E. Generate cuts ----- it_avg_type <- 1 it_cut_type <- 1 for (it_avg_type in c(1, 2)) {      if (it_avg_type == 1) {     svr_chg_var <- \"pchg_yr1\"     # common var across all spans     svr_chg_var_new <- \"pchg\"     svr_var_val <- \"value\"   } else if (it_avg_type == 2) {     svr_chg_var <- \"pchg_yr1_interp1\"     # common var across all spans     svr_chg_var_new <- \"pchg_interp1\"     svr_var_val <- \"value_interp1\"   }      # Add to stack the annual results   ppts_easia_weuro_pchg <- ppts_easia_weuro_long %>%     select(location_code, location_level,            variable, year, one_of(svr_chg_var, svr_var_val)) %>%     filter(!is.na(!!sym(svr_chg_var)) | !is.na(!!sym(svr_var_val))) %>%     rename(!!sym(svr_chg_var_new) := !!sym(svr_chg_var),            year_bins = year) %>%     mutate(year_bins = as.factor(year_bins)) %>%     mutate(year_bins_type = \"1940t2020i01\") %>%     ungroup()      # Loop over cut types       for (st_cuts_name in names(ls_ar_it_cuts)) {     print(glue::glue(       \"cutTypeName={st_cuts_name}:\\n\",       \"bins={ls_ar_it_cuts[st_cuts_name]}\"))          # temp dataframe     ppts_easia_weuro_long_cut <- ppts_easia_weuro_long %>%       select(location_code, location_level,              variable, year,              one_of(svr_chg_var, svr_var_val))          # E.1 Cut types     ar_it_cuts <- ls_ar_it_cuts[[st_cuts_name]]     it_gap <- ar_it_cuts[2] - ar_it_cuts[1]     ar_it_end_seg <- ar_it_cuts[2:length(ar_it_cuts)]     ar_it_start_seg <- ar_it_end_seg - it_gap + 1     ar_st_lab <- paste0(ar_it_start_seg, \"-\", ar_it_end_seg)          # E.2 Generate new year groupings, consider only full-segments     # consider only sub-segments with observations in all years     ppts_easia_weuro_long_cut <- ppts_easia_weuro_long_cut %>%       mutate(year_bins = cut(year,                              breaks = ar_it_cuts,                              labels = ar_st_lab,                              right = TRUE)) %>%       group_by(location_code, location_level,                variable, year_bins) %>%       mutate(val_n_in_bin = sum(!is.na(!!sym(svr_chg_var))))     # filter(val_n_in_bin == it_gap)          # E.3 cumulative product     ppts_easia_weuro_long_cut <- ppts_easia_weuro_long_cut %>%       arrange(location_code, location_level, variable, year_bins, year) %>%       group_by(location_code, location_level, variable, year_bins) %>%       mutate(!!sym(svr_chg_var_new) := cumprod(1 + !!sym(svr_chg_var)) - 1) %>%        mutate(!!sym(svr_chg_var_new) :=          case_when(val_n_in_bin == it_gap ~ !!sym(svr_chg_var_new),                   TRUE ~ NA))      # View(ppts_easia_weuro_long_cut)          # E.4, slices last row     ppts_easia_weuro_long_cut <- ppts_easia_weuro_long_cut %>%       slice(n()) %>%       select(location_code, location_level,              variable, year_bins, one_of(svr_chg_var_new, svr_var_val)) %>%       ungroup() %>%       mutate(year_bins_type = st_cuts_name) %>%       filter(!is.na(!!sym(svr_chg_var_new)) | !is.na(!!sym(svr_var_val))) %>%        drop_na(year_bins)          # E.5 Stack     ppts_easia_weuro_pchg <- bind_rows(       ppts_easia_weuro_pchg, ppts_easia_weuro_long_cut)   }      # export   if (it_avg_type == 1) {     ppts_easia_weuro_pchg_raw <- ppts_easia_weuro_pchg   } else if (it_avg_type == 2) {     ppts_easia_weuro_pchg_interp1 <- ppts_easia_weuro_pchg   }      # # Print results   # print(kable(ppts_easia_weuro_long %>%    #         filter(location_code == 'AFG' & variable == 'student'),    #        caption= paste0(\"breaks=\", st_cuts_name, \", variable=\", svr_chg_var_new))) } #> cutTypeName=1920t2020i05: #> bins=c(1920, 1925, 1930, 1935, 1940, 1945, 1950, 1955, 1960, 1965, 1970, 1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015, 2020) #> cutTypeName=1920t2020i10: #> bins=c(1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990, 2000, 2010, 2020) #> cutTypeName=1925t2015i15: #> bins=c(1925, 1940, 1955, 1970, 1985, 2000, 2015) #> cutTypeName=1920t2020i20: #> bins=c(1920, 1940, 1960, 1980, 2000, 2020) #> cutTypeName=1920t2020i05: #> bins=c(1920, 1925, 1930, 1935, 1940, 1945, 1950, 1955, 1960, 1965, 1970, 1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015, 2020) #> cutTypeName=1920t2020i10: #> bins=c(1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990, 2000, 2010, 2020) #> cutTypeName=1925t2015i15: #> bins=c(1925, 1940, 1955, 1970, 1985, 2000, 2015) #> cutTypeName=1920t2020i20: #> bins=c(1920, 1940, 1960, 1980, 2000, 2020)"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"merge-raw-and-interpolated-results-together-again","dir":"Articles","previous_headings":"Generate percentage changes every 5, 10, 15, 20 years","what":"Merge raw and interpolated results together, again","title":"Compute Percentage Changes of School Resources and Population","text":"generating percentage changes different spans, merge .","code":"# D.3 merge together # full_join same as left_join,  ppts_easia_weuro_world_pchg <- ppts_easia_weuro_pchg_interp1 %>%   full_join(ppts_easia_weuro_pchg_raw,             by = (c('location_code' = 'location_code',                     'location_level' = 'location_level',                     'variable' = 'variable',                      'year_bins_type' = 'year_bins_type',                     'year_bins' = 'year_bins'             ))) %>%    mutate(variable = as.factor(variable),           year_bins_type = as.factor(year_bins_type),           # year_bins as string to allow for correct sorting          year_bins = as.character(year_bins)) %>%   select(location_code, location_level,           variable,           year_bins_type, year_bins,           pchg, pchg_interp1,           value, value_interp1)  # %>%    # value has missing data at the start year of each perentage calculation   # value_interp1 is just raw data but complete   # select(-value) %>% rename(value = value_interp1)  str(ppts_easia_weuro_world_pchg) #> tibble [82,685 × 9] (S3: tbl_df/tbl/data.frame) #>  $ location_code : Factor w/ 286 levels \"ABW\",\"AFE\",\"AFG\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ location_level: Factor w/ 4 levels \"country\",\"multicountry\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ variable      : Factor w/ 5 levels \"gdp\",\"school\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ year_bins_type: Factor w/ 5 levels \"1920t2020i05\",..: 5 5 5 5 5 5 5 5 5 5 ... #>  $ year_bins     : chr [1:82685] \"1981\" \"1982\" \"1983\" \"1984\" ... #>  $ pchg          : num [1:82685] NA NA NA NA NA ... #>  $ pchg_interp1  : num [1:82685] 0.176 0.176 0.176 0.176 0.176 ... #>  $ value         : num [1:82685] NA NA NA NA NA ... #>  $ value_interp1 : num [1:82685] 7662 9010 10596 12460 14653 ... # print(ppts_easia_weuro_world_pchg[1:50,])"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"sort-and-display","dir":"Articles","previous_headings":"","what":"Sort and Display","title":"Compute Percentage Changes of School Resources and Population","text":"sort variables clearly organized output file.","code":"# Arrange results  ppts_easia_weuro_world_pchg <- ppts_easia_weuro_world_pchg %>%   arrange(year_bins_type,            location_level, location_code,            variable, year_bins)"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"afghanistan-as-example","dir":"Articles","previous_headings":"Sort and Display","what":"Afghanistan as Example","title":"Compute Percentage Changes of School Resources and Population","text":"print results year year group aggregation. Afghanistan example demonstrates able compute interval-percentage changes interpolation, given filled values key years. use student count example. Note “value” column shows value last year interval, observed. Afghanistan example, aggregate=1920t2020i05 Afghanistan example, aggregate=1920t2020i10 Afghanistan example, aggregate=1925t2015i15 Afghanistan example, aggregate=1920t2020i20","code":"# print for (st_cuts_name in names(ls_ar_it_cuts)) {   print(     kable(ppts_easia_weuro_world_pchg %>%              filter(location_code == 'AFG' &                       variable == 'student' &                      year_bins_type == st_cuts_name) %>%              select(-location_level, -year_bins_type),           caption = paste0(\"Afghanistan example, aggregate=\", st_cuts_name))) }"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"austria-as-example","dir":"Articles","previous_headings":"Sort and Display","what":"Austria as Example","title":"Compute Percentage Changes of School Resources and Population","text":"illustrate Austria example, showing data school count. able fill initial decades/years little bit interpolation. Austria example, aggregate=1920t2020i05 Austria example, aggregate=1920t2020i10 Austria example, aggregate=1925t2015i15 Austria example, aggregate=1920t2020i20","code":"# print for (st_cuts_name in names(ls_ar_it_cuts)) {   print(     kable(ppts_easia_weuro_world_pchg %>%              filter(location_code == 'AUT' &                       variable == 'school' &                      year_bins_type == st_cuts_name) %>%             select(-location_level, -year_bins_type),            caption = paste0(\"Austria example, aggregate=\", st_cuts_name))) }"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"switerland-as-example","dir":"Articles","previous_headings":"Sort and Display","what":"Switerland as Example","title":"Compute Percentage Changes of School Resources and Population","text":"illustrate Germany example, filled values. Germany example, aggregate=1920t2020i05 Germany example, aggregate=1920t2020i10 Germany example, aggregate=1925t2015i15 Germany example, aggregate=1920t2020i20","code":"# print for (st_cuts_name in names(ls_ar_it_cuts)) {   print(     kable(ppts_easia_weuro_world_pchg %>%              filter(location_code == 'CHE' &                       variable == 'teacher' &                      year_bins_type == st_cuts_name) %>%             select(-location_level, -year_bins_type),            caption = paste0(\"Germany example, aggregate=\", st_cuts_name))) }"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"germany-as-example","dir":"Articles","previous_headings":"Sort and Display","what":"Germany as Example","title":"Compute Percentage Changes of School Resources and Population","text":"illustrate Germany example, filled values. Germany example, aggregate=1920t2020i05 Germany example, aggregate=1920t2020i10 Germany example, aggregate=1925t2015i15 Germany example, aggregate=1920t2020i20","code":"# print for (st_cuts_name in names(ls_ar_it_cuts)) {   print(     kable(ppts_easia_weuro_world_pchg %>%              filter(location_code == 'DEU' &                       variable == 'school' &                      year_bins_type == st_cuts_name) %>%             select(-location_level, -year_bins_type),            caption = paste0(\"Germany example, aggregate=\", st_cuts_name))) }"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes.html","id":"store-to-file","dir":"Articles","previous_headings":"","what":"Store to file","title":"Compute Percentage Changes of School Resources and Population","text":"Finally, save results file data folder.","code":"# Write to CSV and write to rda if (bl_resave_to_data) {   write_csv(ppts_easia_weuro_world_pchg, \"../data/ppts_easia_weuro_world_pchg.csv\", na=\"\")   usethis::use_data(ppts_easia_weuro_world_pchg, overwrite = TRUE) }"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes_summ.html","id":"load-and-select","dir":"Articles","previous_headings":"","what":"Load and select","title":"Compare Raw and Interpolated Global Panel","text":"Load country code. Load dataset generated articles/ffv_gen_percent_changes. Annual year variable numeric sort.","code":"ppts_country_code <- PrjCompPPTS::ppts_country_code ppts_country_code_sel <- ppts_country_code %>%    filter(!is.na(location_region_group)) %>%   arrange(       location_region_group_code,        location_name     ) print(   ppts_country_code_sel,    n = 300 ) #> # A tibble: 218 × 7 #>     location_name      location_code location_region_group location_income_group #>     <chr>              <chr>         <fct>                 <chr>                 #>   1 Angola             AGO           Sub-Saharan Africa (… Lower middle income   #>   2 Benin              BEN           Sub-Saharan Africa (… Lower middle income   #>   3 Botswana           BWA           Sub-Saharan Africa (… Upper middle income   #>   4 Burkina Faso       BFA           Sub-Saharan Africa (… Low income            #>   5 Burundi            BDI           Sub-Saharan Africa (… Low income            #>   6 Cabo Verde         CPV           Sub-Saharan Africa (… Lower middle income   #>   7 Cameroon           CMR           Sub-Saharan Africa (… Lower middle income   #>   8 Central African R… CAF           Sub-Saharan Africa (… Low income            #>   9 Chad               TCD           Sub-Saharan Africa (… Low income            #>  10 Comoros            COM           Sub-Saharan Africa (… Lower middle income   #>  11 Congo, Dem. Rep.   COD           Sub-Saharan Africa (… Low income            #>  12 Congo, Rep.        COG           Sub-Saharan Africa (… Lower middle income   #>  13 Côte d'Ivoire      CIV           Sub-Saharan Africa (… Lower middle income   #>  14 Equatorial Guinea  GNQ           Sub-Saharan Africa (… Upper middle income   #>  15 Eritrea            ERI           Sub-Saharan Africa (… Low income            #>  16 Eswatini           SWZ           Sub-Saharan Africa (… Lower middle income   #>  17 Ethiopia           ETH           Sub-Saharan Africa (… Low income            #>  18 Gabon              GAB           Sub-Saharan Africa (… Upper middle income   #>  19 Gambia             GMB           Sub-Saharan Africa (… Low income            #>  20 Ghana              GHA           Sub-Saharan Africa (… Lower middle income   #>  21 Guinea             GIN           Sub-Saharan Africa (… Lower middle income   #>  22 Guinea-Bissau      GNB           Sub-Saharan Africa (… Low income            #>  23 Kenya              KEN           Sub-Saharan Africa (… Lower middle income   #>  24 Lesotho            LSO           Sub-Saharan Africa (… Lower middle income   #>  25 Liberia            LBR           Sub-Saharan Africa (… Low income            #>  26 Madagascar         MDG           Sub-Saharan Africa (… Low income            #>  27 Malawi             MWI           Sub-Saharan Africa (… Low income            #>  28 Mali               MLI           Sub-Saharan Africa (… Low income            #>  29 Mauritania         MRT           Sub-Saharan Africa (… Lower middle income   #>  30 Mauritius          MUS           Sub-Saharan Africa (… Upper middle income   #>  31 Mozambique         MOZ           Sub-Saharan Africa (… Low income            #>  32 Namibia            NAM           Sub-Saharan Africa (… Upper middle income   #>  33 Niger              NER           Sub-Saharan Africa (… Low income            #>  34 Nigeria            NGA           Sub-Saharan Africa (… Lower middle income   #>  35 Rwanda             RWA           Sub-Saharan Africa (… Low income            #>  36 Senegal            SEN           Sub-Saharan Africa (… Lower middle income   #>  37 Seychelles         SYC           Sub-Saharan Africa (… High income           #>  38 Sierra Leone       SLE           Sub-Saharan Africa (… Low income            #>  39 Somalia            SOM           Sub-Saharan Africa (… Low income            #>  40 South Africa       ZAF           Sub-Saharan Africa (… Upper middle income   #>  41 South Sudan        SSD           Sub-Saharan Africa (… Low income            #>  42 Sudan              SDN           Sub-Saharan Africa (… Low income            #>  43 São Tomé and Prín… STP           Sub-Saharan Africa (… Lower middle income   #>  44 Tanzania           TZA           Sub-Saharan Africa (… Lower middle income   #>  45 Togo               TGO           Sub-Saharan Africa (… Low income            #>  46 Uganda             UGA           Sub-Saharan Africa (… Low income            #>  47 Zambia             ZMB           Sub-Saharan Africa (… Lower middle income   #>  48 Zimbabwe           ZWE           Sub-Saharan Africa (… Lower middle income   #>  49 Algeria            DZA           Middle East & North … Lower middle income   #>  50 Bahrain            BHR           Middle East & North … High income           #>  51 Djibouti           DJI           Middle East & North … Lower middle income   #>  52 Egypt              EGY           Middle East & North … Lower middle income   #>  53 Iran               IRN           Middle East & North … Lower middle income   #>  54 Iraq               IRQ           Middle East & North … Upper middle income   #>  55 Israel             ISR           Middle East & North … High income           #>  56 Jordan             JOR           Middle East & North … Lower middle income   #>  57 Kuwait             KWT           Middle East & North … High income           #>  58 Lebanon            LBN           Middle East & North … Lower middle income   #>  59 Libya              LBY           Middle East & North … Upper middle income   #>  60 Malta              MLT           Middle East & North … High income           #>  61 Morocco            MAR           Middle East & North … Lower middle income   #>  62 Oman               OMN           Middle East & North … High income           #>  63 Qatar              QAT           Middle East & North … High income           #>  64 Saudi Arabia       SAU           Middle East & North … High income           #>  65 Syrian Arab Repub… SYR           Middle East & North … Low income            #>  66 Tunisia            TUN           Middle East & North … Lower middle income   #>  67 United Arab Emira… ARE           Middle East & North … High income           #>  68 West Bank and Gaza PSE           Middle East & North … Upper middle income   #>  69 Yemen              YEM           Middle East & North … Low income            #>  70 Antigua and Barbu… ATG           Latin America & Cari… High income           #>  71 Argentina          ARG           Latin America & Cari… Upper middle income   #>  72 Aruba              ABW           Latin America & Cari… High income           #>  73 Bahamas, The       BHS           Latin America & Cari… High income           #>  74 Barbados           BRB           Latin America & Cari… High income           #>  75 Belize             BLZ           Latin America & Cari… Upper middle income   #>  76 Bolivia            BOL           Latin America & Cari… Lower middle income   #>  77 Brazil             BRA           Latin America & Cari… Upper middle income   #>  78 British Virgin Is… VGB           Latin America & Cari… High income           #>  79 Cayman Islands     CYM           Latin America & Cari… High income           #>  80 Chile              CHL           Latin America & Cari… High income           #>  81 Colombia           COL           Latin America & Cari… Upper middle income   #>  82 Costa Rica         CRI           Latin America & Cari… Upper middle income   #>  83 Cuba               CUB           Latin America & Cari… Upper middle income   #>  84 Curaçao            CUW           Latin America & Cari… High income           #>  85 Dominica           DMA           Latin America & Cari… Upper middle income   #>  86 Dominican Republic DOM           Latin America & Cari… Upper middle income   #>  87 Ecuador            ECU           Latin America & Cari… Upper middle income   #>  88 El Salvador        SLV           Latin America & Cari… Upper middle income   #>  89 Grenada            GRD           Latin America & Cari… Upper middle income   #>  90 Guatemala          GTM           Latin America & Cari… Upper middle income   #>  91 Guyana             GUY           Latin America & Cari… High income           #>  92 Haiti              HTI           Latin America & Cari… Lower middle income   #>  93 Honduras           HND           Latin America & Cari… Lower middle income   #>  94 Jamaica            JAM           Latin America & Cari… Upper middle income   #>  95 Mexico             MEX           Latin America & Cari… Upper middle income   #>  96 Nicaragua          NIC           Latin America & Cari… Lower middle income   #>  97 Panama             PAN           Latin America & Cari… High income           #>  98 Paraguay           PRY           Latin America & Cari… Upper middle income   #>  99 Peru               PER           Latin America & Cari… Upper middle income   #> 100 Puerto Rico        PRI           Latin America & Cari… High income           #> 101 Sint Maarten (Dut… SXM           Latin America & Cari… High income           #> 102 St. Kitts and Nev… KNA           Latin America & Cari… High income           #> 103 St. Lucia          LCA           Latin America & Cari… Upper middle income   #> 104 St. Martin (Frenc… MAF           Latin America & Cari… High income           #> 105 St. Vincent        VCT           Latin America & Cari… Upper middle income   #> 106 Suriname           SUR           Latin America & Cari… Upper middle income   #> 107 Trinidad and Toba… TTO           Latin America & Cari… High income           #> 108 Turks and Caicos … TCA           Latin America & Cari… High income           #> 109 Uruguay            URY           Latin America & Cari… High income           #> 110 Venezuela          VEN           Latin America & Cari… NA                    #> 111 Virgin Islands (U… VIR           Latin America & Cari… High income           #> 112 Bermuda            BMU           North America (NAC)   High income           #> 113 Canada             CAN           North America (NAC)   High income           #> 114 United States      USA           North America (NAC)   High income           #> 115 Afghanistan        AFG           South Asia (SAS)      Low income            #> 116 Bangladesh         BGD           South Asia (SAS)      Lower middle income   #> 117 Bhutan             BTN           South Asia (SAS)      Lower middle income   #> 118 India              IND           South Asia (SAS)      Lower middle income   #> 119 Maldives           MDV           South Asia (SAS)      Upper middle income   #> 120 Nepal              NPL           South Asia (SAS)      Lower middle income   #> 121 Pakistan           PAK           South Asia (SAS)      Lower middle income   #> 122 Sri Lanka          LKA           South Asia (SAS)      Lower middle income   #> 123 Albania            ALB           Europe & Central Asi… Upper middle income   #> 124 Andorra            AND           Europe & Central Asi… High income           #> 125 Armenia            ARM           Europe & Central Asi… Upper middle income   #> 126 Austria            AUT           Europe & Central Asi… High income           #> 127 Azerbaijan         AZE           Europe & Central Asi… Upper middle income   #> 128 Belarus            BLR           Europe & Central Asi… Upper middle income   #> 129 Belgium            BEL           Europe & Central Asi… High income           #> 130 Bosnia and Herzeg… BIH           Europe & Central Asi… Upper middle income   #> 131 Bulgaria           BGR           Europe & Central Asi… Upper middle income   #> 132 Channel Islands    CHI           Europe & Central Asi… High income           #> 133 Croatia            HRV           Europe & Central Asi… High income           #> 134 Cyprus             CYP           Europe & Central Asi… High income           #> 135 Czechia            CZE           Europe & Central Asi… High income           #> 136 Denmark            DNK           Europe & Central Asi… High income           #> 137 Estonia            EST           Europe & Central Asi… High income           #> 138 Faroe Islands      FRO           Europe & Central Asi… High income           #> 139 Finland            FIN           Europe & Central Asi… High income           #> 140 France             FRA           Europe & Central Asi… High income           #> 141 Georgia            GEO           Europe & Central Asi… Upper middle income   #> 142 Germany            DEU           Europe & Central Asi… High income           #> 143 Gibraltar          GIB           Europe & Central Asi… High income           #> 144 Greece             GRC           Europe & Central Asi… High income           #> 145 Greenland          GRL           Europe & Central Asi… High income           #> 146 Hungary            HUN           Europe & Central Asi… High income           #> 147 Iceland            ISL           Europe & Central Asi… High income           #> 148 Ireland            IRL           Europe & Central Asi… High income           #> 149 Isle of Man        IMN           Europe & Central Asi… High income           #> 150 Italy              ITA           Europe & Central Asi… High income           #> 151 Kazakhstan         KAZ           Europe & Central Asi… Upper middle income   #> 152 Kosovo             XKX           Europe & Central Asi… Upper middle income   #> 153 Kyrgyz Republic    KGZ           Europe & Central Asi… Lower middle income   #> 154 Latvia             LVA           Europe & Central Asi… High income           #> 155 Liechtenstein      LIE           Europe & Central Asi… High income           #> 156 Lithuania          LTU           Europe & Central Asi… High income           #> 157 Luxembourg         LUX           Europe & Central Asi… High income           #> 158 Moldova            MDA           Europe & Central Asi… Upper middle income   #> 159 Monaco             MCO           Europe & Central Asi… High income           #> 160 Montenegro         MNE           Europe & Central Asi… Upper middle income   #> 161 Netherlands        NLD           Europe & Central Asi… High income           #> 162 North Macedonia    MKD           Europe & Central Asi… Upper middle income   #> 163 Norway             NOR           Europe & Central Asi… High income           #> 164 Poland             POL           Europe & Central Asi… High income           #> 165 Portugal           PRT           Europe & Central Asi… High income           #> 166 Romania            ROU           Europe & Central Asi… High income           #> 167 Russian Federation RUS           Europe & Central Asi… Upper middle income   #> 168 San Marino         SMR           Europe & Central Asi… High income           #> 169 Serbia             SRB           Europe & Central Asi… Upper middle income   #> 170 Slovak Republic    SVK           Europe & Central Asi… High income           #> 171 Slovenia           SVN           Europe & Central Asi… High income           #> 172 Spain              ESP           Europe & Central Asi… High income           #> 173 Sweden             SWE           Europe & Central Asi… High income           #> 174 Switzerland        CHE           Europe & Central Asi… High income           #> 175 Tajikistan         TJK           Europe & Central Asi… Lower middle income   #> 176 Turkmenistan       TKM           Europe & Central Asi… Upper middle income   #> 177 Türkiye            TUR           Europe & Central Asi… Upper middle income   #> 178 Ukraine            UKR           Europe & Central Asi… Lower middle income   #> 179 United Kingdom     GBR           Europe & Central Asi… High income           #> 180 Uzbekistan         UZB           Europe & Central Asi… Lower middle income   #> 181 American Samoa     ASM           East Asia & Pacific … High income           #> 182 Australia          AUS           East Asia & Pacific … High income           #> 183 Brunei Darussalam  BRN           East Asia & Pacific … High income           #> 184 Cambodia           KHM           East Asia & Pacific … Lower middle income   #> 185 China              CHN           East Asia & Pacific … Upper middle income   #> 186 Fiji               FJI           East Asia & Pacific … Upper middle income   #> 187 French Polynesia   PYF           East Asia & Pacific … High income           #> 188 Guam               GUM           East Asia & Pacific … High income           #> 189 Hong Kong SAR, Ch… HKG           East Asia & Pacific … High income           #> 190 Indonesia          IDN           East Asia & Pacific … Upper middle income   #> 191 Japan              JPN           East Asia & Pacific … High income           #> 192 Kiribati           KIR           East Asia & Pacific … Lower middle income   #> 193 Korea, Dem. Peopl… PRK           East Asia & Pacific … Low income            #> 194 Korea, Rep.        KOR           East Asia & Pacific … High income           #> 195 Lao PDR            LAO           East Asia & Pacific … Lower middle income   #> 196 Macao SAR, China   MAC           East Asia & Pacific … High income           #> 197 Malaysia           MYS           East Asia & Pacific … Upper middle income   #> 198 Marshall Islands   MHL           East Asia & Pacific … Upper middle income   #> 199 Micronesia         FSM           East Asia & Pacific … Lower middle income   #> 200 Mongolia           MNG           East Asia & Pacific … Lower middle income   #> 201 Myanmar            MMR           East Asia & Pacific … Lower middle income   #> 202 Nauru              NRU           East Asia & Pacific … High income           #> 203 New Caledonia      NCL           East Asia & Pacific … High income           #> 204 New Zealand        NZL           East Asia & Pacific … High income           #> 205 Northern Mariana … MNP           East Asia & Pacific … High income           #> 206 Palau              PLW           East Asia & Pacific … Upper middle income   #> 207 Papua New Guinea   PNG           East Asia & Pacific … Lower middle income   #> 208 Philippines        PHL           East Asia & Pacific … Lower middle income   #> 209 Samoa              WSM           East Asia & Pacific … Lower middle income   #> 210 Singapore          SGP           East Asia & Pacific … High income           #> 211 Solomon Islands    SLB           East Asia & Pacific … Lower middle income   #> 212 Taiwan             TWN           East Asia & Pacific … High income           #> 213 Thailand           THA           East Asia & Pacific … Upper middle income   #> 214 Timor-Leste        TLS           East Asia & Pacific … Lower middle income   #> 215 Tonga              TON           East Asia & Pacific … Upper middle income   #> 216 Tuvalu             TUV           East Asia & Pacific … Upper middle income   #> 217 Vanuatu            VUT           East Asia & Pacific … Lower middle income   #> 218 Vietnam            VNM           East Asia & Pacific … Lower middle income   #> # ℹ 3 more variables: location_wblend_group <chr>, #> #   location_region_group_code <chr>, location_code_adj <chr> ppts_easia_weuro_world_pchg <- PrjCompPPTS::ppts_easia_weuro_world_pchg ppts_easia_weuro_world_pchg %>% distinct(year_bins_type) #> # A tibble: 5 × 1 #>   year_bins_type #>   <fct>          #> 1 1920t2020i05   #> 2 1920t2020i10   #> 3 1920t2020i20   #> 4 1925t2015i15   #> 5 1940t2020i01 ppts_easia_weuro_world_pchg %>% distinct(variable) #> # A tibble: 5 × 1 #>   variable #>   <fct>    #> 1 gdp      #> 2 student  #> 3 teacher  #> 4 youthpop #> 5 school ppts_pchg <- ppts_easia_weuro_world_pchg %>%    filter(     year_bins_type == \"1940t2020i01\",      variable %in% c(\"youthpop\", \"student\", \"teacher\", \"school\")     ) %>%    select(     location_code,      location_level,location_code, variable,      year_bins,      pchg, pchg_interp1, value, value_interp1   ) ppts_pchg <- ppts_pchg %>%    rename(year = year_bins) %>%    mutate(year = as.numeric(year)) %>%   arrange(     location_code, variable, year   )"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes_summ.html","id":"compare-interpolated-and-raw-data-by-countries-and-decades","dir":"Articles","previous_headings":"","what":"Compare interpolated and raw data by countries and decades","title":"Compare Raw and Interpolated Global Panel","text":"First, data/ppts_easia_weuro_world_pchg.rda, generate year groups. generate three year groupings, one based years, one based decade. Second, generate year groupings. Third, group country, variable, decade count data observations, interp . Fourth, reshape variables long wide four key variables. Fifth, use table-maker generate table, highlighting share data country interpolated/extrapolated.","code":"# Get all years ar_year <- ppts_pchg %>%    distinct(year) %>% pull(year)  # Min and max years fl_it_year_min <- min(ar_year) fl_it_year_max <- max(ar_year)  # collect ls_ar_years_cates <- vector(mode = \"list\", length = 3) ls_st_years_cates_labels <- vector(mode = \"list\", length = 3)  # Year groups for summarizing, all years jointly ar_it_year_cates <- c(1920, 2021) ar_st_year_cates_labels <- c(\"1920 to 2020\") ls_ar_years_cates[[1]] <- ar_it_year_cates ls_st_years_cates_labels[[1]] <- ar_st_year_cates_labels  # Year groups for summarizing, per two decade groupings it_year_groups <- 6 ar_it_year_cates <- seq(1920, 2020, length.out=it_year_groups) ar_it_year_cates[6] <- 2021 ar_st_year_cates_labels <- paste0(ar_it_year_cates[1:(it_year_groups-2)], \" to \", ar_it_year_cates[2:(it_year_groups-1)] - 1) ar_st_year_cates_labels <- c(ar_st_year_cates_labels, \"2000 to 2020\") ls_ar_years_cates[[2]] <- ar_it_year_cates ls_st_years_cates_labels[[2]] <- ar_st_year_cates_labels  # Year groups for summarizing, per decade groupings it_year_groups <- 11 ar_it_year_cates <- seq(1920, 2020, length.out=it_year_groups) ar_it_year_cates[11] <- 2021 ar_st_year_cates_labels <- paste0(ar_it_year_cates[1:(it_year_groups-2)], \" to \", ar_it_year_cates[2:(it_year_groups-1)] - 1) ar_st_year_cates_labels <- c(ar_st_year_cates_labels, \"2010 to 2020\") ls_ar_years_cates[[3]] <- ar_it_year_cates ls_st_years_cates_labels[[3]] <- ar_st_year_cates_labels # year groups for summarizing ppts_pchg_longer <- ppts_pchg %>%    mutate(     year_group_1 = base::cut(year,         breaks = ls_ar_years_cates[[1]],          labels = ls_st_years_cates_labels[[1]],         right = FALSE       ),     year_group_2 = base::cut(year,         breaks = ls_ar_years_cates[[2]],          labels = ls_st_years_cates_labels[[2]],         right = FALSE       ),     year_group_3 = base::cut(year,         breaks = ls_ar_years_cates[[3]],          labels = ls_st_years_cates_labels[[3]],         right = FALSE       )   ) %>%    pivot_longer(cols = starts_with('year_group'),               names_to = c('year_group_set'),               names_pattern = paste0(\"year_group_(.*)\"),               values_to = \"year_group\") # year groups for summarizing ppts_pchg_grp <- ppts_pchg_longer %>%    group_by(     location_code, variable, year_group_set, year_group,     ) %>%    summarize(     pchg_itp_cnt = sum(!is.na(value_interp1)),     pchg_raw_cnt = sum(!is.na(value)),     pchg_raw_shr = pchg_raw_cnt/pchg_itp_cnt,   ) #> `summarise()` has grouped output by 'location_code', 'variable', #> 'year_group_set'. You can override using the `.groups` argument. # ppts_pchg_grp %>% filter(location_code == \"TWN\", variable == \"school\", year_group_set == 1) # print(ppts_pchg_longer %>% filter(location_code == \"TWN\", variable == \"school\", year_group_set == 1), n = 100) # year groups for summarizing ppts_pchg_grp_wider <- ppts_pchg_grp %>%    pivot_wider(id_cols = c(       \"location_code\",        \"year_group_set\",        \"year_group\"     ),     names_from = \"variable\",     names_prefix = \"\",     values_from = c(       pchg_itp_cnt, pchg_raw_shr     )) ppts_pchg_grp_tab <- ppts_pchg_grp_wider %>%    left_join(ppts_country_code_sel, by = \"location_code\") %>%   arrange(    location_region_group_code, location_name,     ) %>%   filter(     !is.na(location_name)   ) %>%   filter(     year_group_set == 1     ) %>%    select(     location_region_group,     location_region_group_code,     location_code,     location_name,     year_group_set,     year_group,     pchg_itp_cnt_youthpop,     pchg_raw_shr_youthpop,     pchg_itp_cnt_student,     pchg_raw_shr_student,     pchg_itp_cnt_teacher,     pchg_raw_shr_teacher,     pchg_itp_cnt_school,     pchg_raw_shr_school   )"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes_summ.html","id":"generate-table-and-statistics","dir":"Articles","previous_headings":"","what":"Generate table and statistics","title":"Compare Raw and Interpolated Global Panel","text":"Sort generate group counts. Group counter Format columns, decimals, percentage signs, etc. Generate table. Also see res-tab/country_interpolate.tex. Share country-specific data generated interpolation extrapolation","code":"# Sorted file df_data_sorted <- ppts_pchg_grp_tab %>%   rename(     group_sorter_desc = location_region_group,     group_sorter = location_region_group_code,      country_name = location_name   ) %>%   arrange(     group_sorter, location_code,   ) %>%   group_by(group_sorter) %>%   ungroup() # Count by group df_group_counts <- df_data_sorted %>%   group_by(group_sorter_desc, group_sorter) %>%   summarize(group_count = n()) %>%   arrange(group_sorter) %>% ungroup() %>%   mutate(group_count_start = cumsum(group_count) - group_count + 1) %>%   mutate(group_count_end = cumsum(group_count)) %>%   select(group_count_start, group_count_end, everything()) #> `summarise()` has grouped output by 'group_sorter_desc'. You can override using #> the `.groups` argument. # display kable(df_group_counts, caption=\"Group counter\") # 4. Format columns, decimals, percentage signs, etc df_data_formatted <- df_data_sorted %>%   arrange(group_sorter, country_name) %>%   select(       country_name,        pchg_itp_cnt_youthpop, pchg_raw_shr_youthpop,       pchg_itp_cnt_student, pchg_raw_shr_student,       pchg_itp_cnt_teacher, pchg_raw_shr_teacher,       pchg_itp_cnt_school, pchg_raw_shr_school     ) %>%   mutate_at(     vars(contains(\"shr\")),     list(~ paste0(       format(round(., 2) * 100,         nsmall = 0,         big.mark = \",\"       ),       \"%\"     ))   ) %>%   mutate_at(     vars(contains(\"cnt\")),     list(~ paste0(.))   ) df_data_formatted <- df_data_formatted %>%   mutate_at(vars(contains(\"shr\")), ~ str_replace(., \"NA%\", \"\")) %>%   mutate_at(vars(contains(\"cnt\")), ~ str_replace(., \"NA\", \"\")) ar_st_kableformat <- c(\"html\", \"latex\") ar_st_kableformat <- c(\"html\") for (st_kableformat in ar_st_kableformat) {   # Column names   ar_st_col_names <- c(     \"Country name\",     \"Obs yrs\",     \"Perc. of yrs with admin data\",     \"Obs yrs\",     \"Perc. of yrs with admin data\",     \"Obs yrs\",     \"Perc. of yrs with admin data\",     \"Obs yrs\",     \"Perc. of yrs with admin data\"   )   # Define column groups, grouping the names above   # =1/3/2 are number of columns group title covers   ar_st_col_groups1 <- c(     \" \" = 1,     \"Youth population\" = 2,     \"Students\" = 2,     \"Teachers\" = 2,     \"Schools\" = 2   )   # Second, we construct main table, and add styling.   st_title <- paste(     \"Share of country-specific data generated through interpolation and extrapolation\"     )   bk_tab_a <- kbl(     df_data_formatted,     format = st_kableformat,     label = \"tab:lac:aod:temp:rank\",     # escape = F,     linesep = \"\",     booktabs = T,     longtable = T,     align = \"c\",     caption = st_title,     col.names = ar_st_col_names   ) %>%     # see https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html#Bootstrap_table_classes     kable_styling(       bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),       full_width = F, position = \"left\"     )   # Third, we add in column groups.   bk_tab_a <- bk_tab_a %>%     add_header_above(ar_st_col_groups1)   # Fourth, we add in row groups.   for (it_group in seq(1, dim(df_group_counts)[1])) {     # Reion full name info     st_loc <- as.character(df_group_counts[[it_group, \"group_sorter_desc\"]])     # groups start and end     it_group_count_start <- df_group_counts[[it_group, \"group_count_start\"]]     it_group_count_end <- df_group_counts[[it_group, \"group_count_end\"]]     # display text     st_panel_letter <- base::LETTERS[it_group]     # Heading group row, year     st_panel_text <- paste0(       \"Panel \", st_panel_letter, \": \", st_loc      )     # Add to table     bk_tab_a <- bk_tab_a %>%       pack_rows(         st_panel_text, it_group_count_start, it_group_count_end,         latex_gap_space = \"0.25em\",         latex_align = \"c\",         hline_after = TRUE       )   }   # Fifth, column formatting.   fl_width_country <- 6   st_width_country <- paste0(fl_width_country, \"cm\")   bk_tab_a <- bk_tab_a %>%     column_spec(1, width = st_width_country) %>%     column_spec(2:dim(df_data_formatted)[2], width = \"3cm\")   # Final adjustments   # Headings on all pages, note use `sub` to replace first midrule   st_headend <- paste0(     \"\\\\midrule\\\\endhead\\n\",     \"\\\\addlinespace[0.2em]\\\\hline\\\\addlinespace[0.2em]\\n\",     \"\\\\multicolumn{\", dim(df_data_formatted)[2], \"}{r}{\\\\emph{Continued on next page}}\\\\\\\\\\n\",     \"\\\\endfoot\\\\endlastfoot\"   )   bk_tab_a <- sub(bk_tab_a,     pattern = \"\\\\midrule\", replacement = st_headend,     fixed = TRUE   )    # country-names left-align   bk_tab_a <- gsub(bk_tab_a,     pattern = paste0(\"\\\\centering\\\\arraybackslash}p{\", st_width_country, \"}\"),     replacement = paste0(\"\\\\raggedright\\\\arraybackslash}p{\", st_width_country, \"}\"),     fixed = TRUE   )   bk_tab_a <- gsub(bk_tab_a,     pattern = paste0(\"\\\\$\\\\textasciicircum{}\\\\{\\\\textbackslash{}circ\\\\}C\\\\$\"),     replacement = paste0(\"$^{\\\\circ}C$\"),     fixed = TRUE   )   bk_tab_a <- gsub(bk_tab_a,     pattern = paste0(\"\\\\$\\\\textbackslash{}ge\\\\$\"),     replacement = paste0(\"$\\\\ge$\"),     fixed = TRUE   )   st_text <- \"\"   bk_tab_a <- gsub(bk_tab_a,     pattern = paste0(\"\\\\textbackslash{}\", st_text, \"\\\\\"),     replacement = paste0(\"\\\\\", st_text),     fixed = TRUE   )   # midrule replacing hline   bk_tab_a <- gsub(bk_tab_a,     pattern = \"hline\",     replacement = \"midrule\", fixed = TRUE   )    # 6. Finally, save table content to file   if (st_kableformat == \"latex\") {     if (bl_tex_save) {       fileConn <- file(spn_tex_out)       writeLines(bk_tab_a, fileConn)       close(fileConn)       if (verbose) {         print(glue::glue(\"F-815346, S3\"))         print(glue::glue(\"Latex saved: {spn_tex_out}\"))       }     }   } else if (st_kableformat == \"html\") {     bk_tab_a_html <- bk_tab_a   } } #> Warning in pack_rows(., st_panel_text, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_panel_text, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_panel_text, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_panel_text, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_panel_text, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_panel_text, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_panel_text, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. bk_tab_a_html"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes_summ.html","id":"selected-country-results","dir":"Articles","previous_headings":"","what":"Selected country results","title":"Compare Raw and Interpolated Global Panel","text":"two variables, variable interpolated results along original raw data, well variable just points interpolation took place. visualize presenting full results solid line, places interpolation extrapolation took place dots. Interpolated raw data variable easier graphing.","code":"ppts_pchg <- ppts_pchg %>%    select(     location_code,      variable, year,      value, value_interp1   ) %>%   mutate(     value_interponly = case_when(       is.na(value) & !is.na(value_interp1) ~ value_interp1,       TRUE ~ NA     )   ) ppts_pchg_longer <- ppts_pchg %>%    select(     location_code,      variable, year,      value, value_interp1, value_interponly   ) %>%   rename(     value_0raw = value,      value_1interp1 = value_interp1,      value_2interpoly = value_interponly     ) %>%   pivot_longer(cols = starts_with('value'),               names_to = c('value_type'),               names_pattern = paste0(\"value_(.*)\"),               values_to = \"value\") %>%    drop_na(value) print(   ppts_pchg_longer %>% group_by(value_type) %>% tally()   ) #> # A tibble: 3 × 2 #>   value_type     n #>   <chr>      <int> #> 1 0raw       37430 #> 2 1interp1   44052 #> 3 2interpoly  6622"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes_summ.html","id":"graph-generating-script","dir":"Articles","previous_headings":"Selected country results","what":"Graph-generating script","title":"Compare Raw and Interpolated Global Panel","text":"Build graph generating function show data points interpolated points.","code":"ffi_select_country_show_interpolate <- function(   st_country_name = \"France\" ) {   # Select   st_location_code <- ppts_country_code_sel %>%      filter(location_name == st_country_name) %>%      pull(location_code)   ppts_pchg_longer_country <- ppts_pchg_longer %>%      filter(location_code == st_location_code)   ppts_pchg_country <- ppts_pchg %>%      filter(location_code == st_location_code)    # Visualize.   # Color controls   ar_st_colors <- c(\"#33cc33\", \"#F8766D\")   ar_st_labels <- c(\"Admin data\", \"Interp.-extrap.\")   # Shape controls   ar_it_shapes <- c(1, 5)    pl_lines_pri <- ggplot() +      geom_point(       data = ppts_pchg_longer_country %>% filter(value_type != \"1interp1\"),       aes(         x=year, y=value,          color=value_type, shape=value_type,       ), size = 2) +      geom_line(       data= ppts_pchg_longer_country %>% filter(value_type == \"1interp1\"),       aes(         x=year, y=value         ), linewidth = 0.5, color=\"gray\") +      facet_wrap( ~        factor(variable, c(\"youthpop\", \"student\", \"teacher\", \"school\")),       scales = \"free_y\"     ) +      labs(x = paste0(\"Years\"),         y = paste0(\"Number people or schools\"),         title = paste(           st_country_name,           \": youth (age 0 to 15), primary students, teachers, and schools\",            sep=\" \"),         subtitle = paste(           \"Compare data points from administrative datasets\",           \"with interpolated and extrapolated data\", sep=\" \"),         caption = paste(           \"Hannum, Kim and Wang (2024)\", sep=\"\")) +      scale_color_manual(values = ar_st_colors, labels=ar_st_labels) +     scale_shape_manual(values = ar_it_shapes, labels=ar_st_labels) +      scale_y_continuous(labels = scales::comma_format(big.mark = ',')) +      theme(       text = element_text(size = 11),       legend.title = element_blank(),       legend.position = c(0.90, 0.90),       legend.key.width = unit(1.5, \"line\"),       legend.background =         element_rect(fill = \"transparent\", colour = \"black\", linetype='solid')     )   return(pl_lines_pri)         }"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes_summ.html","id":"administrative-data-and-interpolation-in-east-asia","dir":"Articles","previous_headings":"Selected country results","what":"Administrative data and interpolation in East Asia","title":"Compare Raw and Interpolated Global Panel","text":"","code":"ar_st_country_name <- c(   \"China\", \"Japan\", \"Korea, Rep.\", \"Taiwan\" ) for (st_country_name in ar_st_country_name) {   pl_country <- ffi_select_country_show_interpolate(st_country_name = st_country_name)   print(pl_country) } #> Warning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2 #> 3.5.0. #> ℹ Please use the `legend.position.inside` argument of `theme()` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_gen_percent_changes_summ.html","id":"administrative-data-and-interpolation-in-western-europe","dir":"Articles","previous_headings":"Selected country results","what":"Administrative data and interpolation in Western Europe","title":"Compare Raw and Interpolated Global Panel","text":"","code":"ar_st_country_name <- c(   \"Austria\", \"Germany\", \"France\", \"Netherlands\", \"Switzerland\" ) for (st_country_name in ar_st_country_name) {   pl_country <- ffi_select_country_show_interpolate(st_country_name = st_country_name)   print(pl_country) }"},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_pop.html","id":"load-prepped-all-location-level-files","dir":"Articles","previous_headings":"Generate input file","what":"Load prepped all location level files","title":"Table: Global youth population","text":"Load file interpolated data.","code":"# Locaiton codes ppts_code_wrk <- ppts_country_code # We load in the global population data. df_ppts <- ppts_easia_weuro_world_pchg"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_pop.html","id":"run-prjcompppts-functions","dir":"Articles","previous_headings":"Generate input file","what":"Run PrjCompPPTS functions","title":"Table: Global youth population","text":"Run functions generate FLR, FPC, FEL files. Run FLR. Run FPC. Run FEL.","code":"# Generate PLR df_flr <- PrjCompPPTS::ff_ppts_lrce_flr(   df_ppts,   st_year_bins_type = \"1940t2020i01\",   ar_it_years = c(1960, 1980, 1990, 2000, 2010, 2020),   verbose = TRUE ) #> F-713479, S1 #> [1] 2000 2010 1960 1980 1990 2020 #> F-713479, S2 #> dim of youth wide file: 1616 #> dim of youth wide file: 7 #> F-713479, S2 #> [1] \"var_rat_y2t\" #> [1] \"var_lvl_youthpop\" #> [1] \"var_lvl_teacher\" #> dim FLR: 1616 #> dim FLR: 8 #> F-713479, S2 #> [1] \"var_rat_s2t\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_teacher\" #> dim FLR: 1616 #> dim FLR: 9 #> F-713479, S2 #> [1] \"var_rat_y2s\" #> [1] \"var_lvl_youthpop\" #> [1] \"var_lvl_school\" #> dim FLR: 1616 #> dim FLR: 10 #> F-713479, S2 #> [1] \"var_rat_s2s\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_school\" #> dim FLR: 1616 #> dim FLR: 11 #> F-713479, S3 #>  [1] \"location_code\"    \"location_level\"   \"year_bins\"        \"var_lvl_student\"  #>  [5] \"var_lvl_teacher\"  \"var_lvl_youthpop\" \"var_lvl_school\"   \"var_rat_y2t\"      #>  [9] \"var_rat_s2t\"      \"var_rat_y2s\"      \"var_rat_s2s\"      #> dim of youth wide ratio file: 1616 #> dim of youth wide ratio file: 11 # Generate FPC df_fpc <- PrjCompPPTS::ff_ppts_lrce_fpc(   df_flr,   ar_it_years_chg = c(1960, 1980, 2000, 2020),   ls_chg_years = list(     \"chg_80v60\" = c(1960, 1980),     \"chg_00v80\" = c(1980, 2000),     \"chg_20v00\" = c(2000, 2020),     \"chg_20v80\" = c(1980, 2020)   ), verbose = TRUE ) #> F-376864, S1 #> dim of youth wide ratio file: 6644 #> dim of youth wide ratio file: 6 #> F-376864, S2 #> dim of youth wide ratio file: 6644 #> dim of youth wide ratio file: 6 #> F-376864, S3 #> dim of youth wide ratio file: 2728 #> dim of youth wide ratio file: 8 #> F-376864, SD3 #> [1] \"chg_80v60\" #> [1] \"year1960\" #> [1] \"year1980\" #> dim FPC: 2728 #> dim FPC: 9 #> F-376864, SD3 #> [1] \"chg_00v80\" #> [1] \"year1980\" #> [1] \"year2000\" #> dim FPC: 2728 #> dim FPC: 10 #> F-376864, SD3 #> [1] \"chg_20v00\" #> [1] \"year2000\" #> [1] \"year2020\" #> dim FPC: 2728 #> dim FPC: 11 #> F-376864, SD3 #> [1] \"chg_20v80\" #> [1] \"year1980\" #> [1] \"year2020\" #> dim FPC: 2728 #> dim FPC: 12 #> F-376864, S4 #> dim FPC: 2728 #> dim FPC: 12 # Generate FEL df_fel <- PrjCompPPTS::ff_ppts_lrce_fel(   df_fpc,   verbose = TRUE ) #> F-307302, S1 #> dim df_fpc_base: 818 #> dim df_fpc_base: 7 #> F-307302, S2 #> dim df_fel_long: 2456 #> dim df_fel_long: 5 #> F-307302, S3 #> dim df_fel_wide: 1055 #> dim df_fel_wide: 7 #> F-307302, S3 #> [1] \"var_elas_y2t\" #> [1] \"var_chg_youthpop\" #> [1] \"var_chg_teacher\" #> dim FEL: 1055 #> dim FEL: 8 #> F-307302, S3 #> [1] \"var_elas_s2t\" #> [1] \"var_chg_student\" #> [1] \"var_chg_teacher\" #> dim FEL: 1055 #> dim FEL: 9 #> F-307302, S3 #> [1] \"var_elas_y2s\" #> [1] \"var_chg_youthpop\" #> [1] \"var_chg_school\" #> dim FEL: 1055 #> dim FEL: 10 #> F-307302, S3 #> [1] \"var_elas_s2s\" #> [1] \"var_chg_student\" #> [1] \"var_chg_school\" #> dim FEL: 1055 #> dim FEL: 11 #> F-307302, S4 #> dim df_fel_elas: 1055 #> dim df_fel_elas: 11 #> F-307302, S4 #> dim FEL: 517 #> dim FEL: 7"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_pop.html","id":"merge-fpc-and-fel-country-and-region","dir":"Articles","previous_headings":"Generate input file","what":"Merge FPC and FEL, country and region","title":"Table: Global youth population","text":"Now combine level change information FPC elasticity results FEL. LRCE file, level, ratio, change, elasticity. Finally, merge country key info FPC, country-level information. FPC regional information, variables. Combine region country.","code":"df_lrce <- df_fpc %>% left_join(   df_fel %>% mutate(vartype = \"rat\"),   by = (c(     \"location_code\" = \"location_code\",     \"location_level\" = \"location_level\",     \"variable\" = \"variable\",     \"vartype\" = \"vartype\"   )) ) print(glue::glue(\"dim df_lrce: {dim(df_lrce)}\")) #> dim df_lrce: 2728 #> dim df_lrce: 16 df_lrce_country <- df_lrce %>%   filter(location_level != \"multicountry\") %>%   left_join(     ppts_code_wrk %>%       select(         location_name, location_code,         location_region_group, location_region_group_code       ),     by = c(\"location_code\" = \"location_code\")   ) %>%   # mutate(location_name_full = paste0(location_name, \" (\", location_code, \")\")) %>%   mutate(location_name_full = paste0(location_name)) %>%   select(-location_name) %>%   select(location_name_full, location_region_group, everything()) %>%   arrange(location_region_group_code, location_name_full) ar_st_wb7 <- c(\"SSF\", \"MEA\", \"LCN\", \"NAC\", \"SAS\", \"ECS\", \"EAS\") df_lrce_region <- df_lrce %>%   filter(location_level == \"multicountry\") %>%   filter(location_code %in% ar_st_wb7) %>%   left_join(     ppts_code_wrk %>%       select(         location_name, location_code, location_code_adj,         location_region_group, location_region_group_code       ),     by = c(\"location_code\" = \"location_code\")   ) %>%   select(-location_code) %>%   rename(location_code = location_code_adj) %>%   # mutate(location_name_full = paste0(location_name, \" (\", location_code, \")\")) %>%   mutate(location_name_full = paste0(location_name)) %>%   select(-location_name) %>%   select(location_name_full, location_region_group, everything()) %>%   mutate(     location_region_group_code = \"0WORLD\",     location_region_group = \"Global regions\"   ) %>%   arrange(location_region_group_code, location_code) df_lrce_region_country <- bind_rows(   df_lrce_region,   df_lrce_country %>% filter(location_level == \"country\"), )"},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_pop.html","id":"prep-table-inputs","dir":"Articles","previous_headings":"Global Population Table","what":"Prep Table inputs","title":"Table: Global youth population","text":"Select prep Table 1. Combine national regional data together. Second, count variables regional groups. Third, format variables.","code":"# Select variables tab1_global_pop <- df_lrce_region_country %>%   filter(     vartype == \"lvl\",     variable == \"youthpop\"   ) %>%   select(     -vartype, -variable, -location_level, -location_code,     -chg_80v60, -contains(\"elas_\")   ) df_region_counts <- tab1_global_pop %>%   group_by(     location_region_group_code, location_region_group   ) %>%   summarize(region_count = n()) %>%   ungroup() %>%   mutate(region_count_start = cumsum(region_count) - region_count + 1) %>%   mutate(region_count_end = cumsum(region_count)) %>%   select(region_count_start, region_count_end, everything()) #> `summarise()` has grouped output by 'location_region_group_code'. You can #> override using the `.groups` argument. # Format variables tab1_global_pop <- tab1_global_pop %>%   select(-location_region_group, -location_region_group_code) %>%   mutate_at(     vars(contains(\"year\")),     list(~ paste0(       format(round(. / 1000, 0), nsmall = 0, big.mark = \",\")     ))   ) %>%   mutate_at(     vars(contains(\"chg\")),     list(~ paste0(       format(round(., 2) * 100,         nsmall = 0,         big.mark = \",\"       ),       \"%\"     ))   )"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_pop.html","id":"generate-table","dir":"Articles","previous_headings":"Global Population Table","what":"Generate table","title":"Table: Global youth population","text":"Now generate table. Global youth population","code":"ar_st_kableformat <- c(\"latex\", \"html\") for (st_kableformat in ar_st_kableformat) {   # Column names   ar_st_col_names <- c(     \"Country by region\",     \"1960\",     \"1980\",     \"2000\",     \"2020\",     # \"1980/1960\",     \"2000/1980\",     \"2020/2000\",     \"2020/1980\"   )   # Define column groups, grouping the names above   # =1/3/2 are number of columns group title covers   ar_st_col_groups <- c(     \" \" = 1,     \"Age 0-14 population (1000s)\" = 4,     \"Age 0-14 pop. changes (%)\" = 3   )    # Second, we construct main table, and add styling.   bk_youthpop <- kbl(     tab1_global_pop %>%       select(         location_name_full,         year1960, year1980, year2000, year2020,         chg_00v80, chg_20v00, chg_20v80       ),     format = st_kableformat,     label = \"main:tab:global:pop\",     # escape = F,     linesep = \"\",     booktabs = T,     longtable = T,     align = \"c\",     caption = \"Global youth population\",     col.names = ar_st_col_names   ) %>%     # see https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html#Bootstrap_table_classes     kable_styling(       bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),       full_width = F, position = \"left\"     )    # Third, we add in column groups.   bk_youthpop <- bk_youthpop %>% add_header_above(ar_st_col_groups)    # Fourth, we add in row groups.   for (it_region in seq(1, dim(df_region_counts)[1])) {     # Reion full name info     st_loc <- as.character(df_region_counts[[it_region, \"location_region_group\"]])      # Regions start and end     it_region_count_start <- df_region_counts[[it_region, \"region_count_start\"]]     it_region_count_end <- df_region_counts[[it_region, \"region_count_end\"]]      # Add to table     bk_youthpop <- bk_youthpop %>%       pack_rows(         st_loc, it_region_count_start, it_region_count_end,         latex_gap_space = \"1em\",         latex_align = \"c\",         hline_after = TRUE       )   }    # Fifth, column formatting.   fl_width_country <- 3.4   st_width_country <- paste0(fl_width_country, \"cm\")   bk_youthpop <- bk_youthpop %>%     column_spec(1, width = st_width_country) %>%     column_spec(2:8, width = \"1.3cm\")    # Final adjustments   # Headings on all pages, note use `sub` to replace first midrule   st_headend <- paste0(     \"\\\\midrule\\\\endhead\\n\",     \"\\\\addlinespace[0.2em]\\\\hline\\\\addlinespace[0.2em]\\n\",     \"\\\\multicolumn{8}{r}{\\\\emph{Continued on next page}}\\\\\\\\\\n\",     \"\\\\endfoot\\\\endlastfoot\"   )   bk_youthpop <- sub(bk_youthpop,     pattern = \"\\\\midrule\", replacement = st_headend,     fixed = TRUE   )   # country-names left-align   bk_youthpop <- gsub(bk_youthpop,     pattern = paste0(\"\\\\centering\\\\arraybackslash}p{\", st_width_country, \"}\"),     replacement = paste0(\"\\\\raggedright\\\\arraybackslash}p{\", st_width_country, \"}\"),     fixed = TRUE   )   # midrule replacing hline   bk_youthpop <- gsub(bk_youthpop,     pattern = \"hline\",     replacement = \"midrule\", fixed = TRUE   )    # Sixth, display.   # pl_bk_asset_count <- bk_asset_count %>% as_image()   if (st_kableformat == \"html\") {     print(dim(bk_youthpop))   } else {     if (bl_tex_save) {       fileConn <- file(spn_tex_out)       writeLines(bk_youthpop, fileConn)       close(fileConn)       if (verbose) {         print(glue::glue(\"Latex saved: {spn_tex_out}\"))       }     }   } } #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> NULL bk_youthpop"},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_pop_teachers.html","id":"load-prepped-all-location-level-files","dir":"Articles","previous_headings":"Generate input file","what":"Load prepped all location level files","title":"Table: Global youth population and teachers","text":"Load file interpolated data.","code":"# Locaiton codes ppts_code_wrk <- ppts_country_code # We load in the global population data. df_ppts <- ppts_easia_weuro_world_pchg"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_pop_teachers.html","id":"run-prjcompppts-functions","dir":"Articles","previous_headings":"Generate input file","what":"Run PrjCompPPTS functions","title":"Table: Global youth population and teachers","text":"Run functions generate FLR, FPC, FEL files. Run FLR. Run FPC. Run FEL.","code":"# Generate PLR df_flr <- PrjCompPPTS::ff_ppts_lrce_flr(   df_ppts,   st_year_bins_type = \"1940t2020i01\",   ar_it_years = c(1960, 1980, 1990, 2000, 2010, 2020),   verbose = TRUE ) #> F-713479, S1 #> [1] 2000 2010 1960 1980 1990 2020 #> F-713479, S2 #> dim of youth wide file: 1616 #> dim of youth wide file: 7 #> F-713479, S2 #> [1] \"var_rat_y2t\" #> [1] \"var_lvl_youthpop\" #> [1] \"var_lvl_teacher\" #> dim FLR: 1616 #> dim FLR: 8 #> F-713479, S2 #> [1] \"var_rat_s2t\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_teacher\" #> dim FLR: 1616 #> dim FLR: 9 #> F-713479, S2 #> [1] \"var_rat_y2s\" #> [1] \"var_lvl_youthpop\" #> [1] \"var_lvl_school\" #> dim FLR: 1616 #> dim FLR: 10 #> F-713479, S2 #> [1] \"var_rat_s2s\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_school\" #> dim FLR: 1616 #> dim FLR: 11 #> F-713479, S3 #>  [1] \"location_code\"    \"location_level\"   \"year_bins\"        \"var_lvl_student\"  #>  [5] \"var_lvl_teacher\"  \"var_lvl_youthpop\" \"var_lvl_school\"   \"var_rat_y2t\"      #>  [9] \"var_rat_s2t\"      \"var_rat_y2s\"      \"var_rat_s2s\"      #> dim of youth wide ratio file: 1616 #> dim of youth wide ratio file: 11 # Generate FPC df_fpc <- PrjCompPPTS::ff_ppts_lrce_fpc(   df_flr,   ar_it_years_chg = c(1960, 1980, 2000, 2020),   ls_chg_years = list(     \"chg_80v60\" = c(1960, 1980),     \"chg_00v80\" = c(1980, 2000),     \"chg_20v00\" = c(2000, 2020),     \"chg_20v80\" = c(1980, 2020)   ), verbose = TRUE ) #> F-376864, S1 #> dim of youth wide ratio file: 6644 #> dim of youth wide ratio file: 6 #> F-376864, S2 #> dim of youth wide ratio file: 6644 #> dim of youth wide ratio file: 6 #> F-376864, S3 #> dim of youth wide ratio file: 2728 #> dim of youth wide ratio file: 8 #> F-376864, SD3 #> [1] \"chg_80v60\" #> [1] \"year1960\" #> [1] \"year1980\" #> dim FPC: 2728 #> dim FPC: 9 #> F-376864, SD3 #> [1] \"chg_00v80\" #> [1] \"year1980\" #> [1] \"year2000\" #> dim FPC: 2728 #> dim FPC: 10 #> F-376864, SD3 #> [1] \"chg_20v00\" #> [1] \"year2000\" #> [1] \"year2020\" #> dim FPC: 2728 #> dim FPC: 11 #> F-376864, SD3 #> [1] \"chg_20v80\" #> [1] \"year1980\" #> [1] \"year2020\" #> dim FPC: 2728 #> dim FPC: 12 #> F-376864, S4 #> dim FPC: 2728 #> dim FPC: 12 # Generate FEL df_fel <- PrjCompPPTS::ff_ppts_lrce_fel(   df_fpc,   verbose = TRUE ) #> F-307302, S1 #> dim df_fpc_base: 818 #> dim df_fpc_base: 7 #> F-307302, S2 #> dim df_fel_long: 2456 #> dim df_fel_long: 5 #> F-307302, S3 #> dim df_fel_wide: 1055 #> dim df_fel_wide: 7 #> F-307302, S3 #> [1] \"var_elas_y2t\" #> [1] \"var_chg_youthpop\" #> [1] \"var_chg_teacher\" #> dim FEL: 1055 #> dim FEL: 8 #> F-307302, S3 #> [1] \"var_elas_s2t\" #> [1] \"var_chg_student\" #> [1] \"var_chg_teacher\" #> dim FEL: 1055 #> dim FEL: 9 #> F-307302, S3 #> [1] \"var_elas_y2s\" #> [1] \"var_chg_youthpop\" #> [1] \"var_chg_school\" #> dim FEL: 1055 #> dim FEL: 10 #> F-307302, S3 #> [1] \"var_elas_s2s\" #> [1] \"var_chg_student\" #> [1] \"var_chg_school\" #> dim FEL: 1055 #> dim FEL: 11 #> F-307302, S4 #> dim df_fel_elas: 1055 #> dim df_fel_elas: 11 #> F-307302, S4 #> dim FEL: 517 #> dim FEL: 7"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_pop_teachers.html","id":"merge-fpc-and-fel-country-and-region","dir":"Articles","previous_headings":"Generate input file","what":"Merge FPC and FEL, country and region","title":"Table: Global youth population and teachers","text":"Now combine level change information FPC elasticity results FEL. LRCE file, level, ratio, change, elasticity. Finally, merge country key info FPC, country-level information. FPC regional information, variables. Combine region country.","code":"df_lrce <- df_fpc %>% left_join(   df_fel %>% mutate(vartype = \"rat\"),   by = (c(     \"location_code\" = \"location_code\",     \"location_level\" = \"location_level\",     \"variable\" = \"variable\",     \"vartype\" = \"vartype\"   )) ) print(glue::glue(\"dim df_lrce: {dim(df_lrce)}\")) #> dim df_lrce: 2728 #> dim df_lrce: 16 df_lrce_country <- df_lrce %>%   filter(location_level != \"multicountry\") %>%   left_join(     ppts_code_wrk %>%       select(         location_name, location_code,         location_region_group, location_region_group_code       ),     by = c(\"location_code\" = \"location_code\")   ) %>%   # mutate(location_name_full = paste0(location_name, \" (\", location_code, \")\")) %>%   mutate(location_name_full = paste0(location_name)) %>%   select(-location_name) %>%   select(location_name_full, location_region_group, everything()) %>%   arrange(location_region_group_code, location_name_full) ar_st_wb7 <- c(\"SSF\", \"MEA\", \"LCN\", \"NAC\", \"SAS\", \"ECS\", \"EAS\") df_lrce_region <- df_lrce %>%   filter(location_level == \"multicountry\") %>%   filter(location_code %in% ar_st_wb7) %>%   left_join(     ppts_code_wrk %>%       select(         location_name, location_code, location_code_adj,         location_region_group, location_region_group_code       ),     by = c(\"location_code\" = \"location_code\")   ) %>%   select(-location_code) %>%   rename(location_code = location_code_adj) %>%   # mutate(location_name_full = paste0(location_name, \" (\", location_code, \")\")) %>%   mutate(location_name_full = paste0(location_name)) %>%   select(-location_name) %>%   select(location_name_full, location_region_group, everything()) %>%   mutate(     location_region_group_code = \"0WORLD\",     location_region_group = \"Global regions\"   ) %>%   arrange(location_region_group_code, location_code) df_lrce_region_country <- bind_rows(   df_lrce_region,   df_lrce_country %>% filter(location_level == \"country\"), )"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_pop_teachers.html","id":"table-population-and-teachers","dir":"Articles","previous_headings":"","what":"Table population and teachers","title":"Table: Global youth population and teachers","text":"Now develop table population teacher ratio.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_pop_teachers.html","id":"prep-table-inputs","dir":"Articles","previous_headings":"Table population and teachers","what":"Prep table inputs","title":"Table: Global youth population and teachers","text":"Select prep Table 2. Combine national regional data together. First, select ratio elasticity. Second, ranks. Second, select percentage changes. Third, combine information together Fourth, select subset variables visualizations. Include following: var country var (3) children teacher ratio 1980, 2000, 2020 var (1) global ranking 2020 var (1) percentage change youth 1980 2020 var (1) percentage change teachers 1980 2020 var (1) teacher-population elasticity Fourth, count variables regional groups. Third, format variables replace NAs.","code":"# Select y2t ratio levels and elasticity tab2_y2t_rat_elas <- df_lrce_region_country %>%   filter(     vartype == \"rat\",     variable == \"y2t\"   ) %>%   select(     -vartype, -variable, -location_level, -location_code,     -year1960, -contains(\"chg\"), -elas_80v60   ) %>%   rename_at(vars(matches(\"elas_|year\")), ~ paste0(., \"_y2t\")) print(glue::glue(\"dim tab2_y2t_rat_elas: {dim(tab2_y2t_rat_elas)}\")) #> dim tab2_y2t_rat_elas: 197 #> dim tab2_y2t_rat_elas: 9 # Select y2t ratio levels and elasticity tab2_y2t_rat_rank <- df_lrce_region_country %>%   filter(     vartype == \"rank\",     variable == \"y2t\"   ) %>%   select(     -vartype, -variable, -location_level, -location_code,     -year1960, -contains(\"chg\"), -contains(\"elas\"),   ) %>%   rename_at(vars(matches(\"year\")), ~ paste0(., \"_y2t_rank\")) print(glue::glue(\"dim tab2_y2t_rat_rank: {dim(tab2_y2t_rat_rank)}\")) #> dim tab2_y2t_rat_rank: 197 #> dim tab2_y2t_rat_rank: 6 # Select percentage changes in youth tab2_youthstudentteacher_lvl <- df_lrce_region_country %>%   filter(     vartype == \"lvl\",     variable %in% c(\"youthpop\", \"student\", \"teacher\")   ) %>%   select(     -vartype, -location_level, -location_code,     -year1960,     -contains(\"year\"), -contains(\"elas_\"), -chg_80v60   ) %>%   pivot_wider(     id_cols = c(       \"location_name_full\",       \"location_region_group\",       \"location_region_group_code\"     ),     names_from = variable,     names_prefix = \"\",     names_sep = \"_\",     values_from = c(contains(\"chg_\"))   ) print(glue::glue(\"dim tab2_youthstudentteacher_lvl: {dim(tab2_youthstudentteacher_lvl)}\")) #> dim tab2_youthstudentteacher_lvl: 217 #> dim tab2_youthstudentteacher_lvl: 12 tab_2_global_pop_teacher <- tab2_youthstudentteacher_lvl %>%   left_join(     tab2_y2t_rat_elas,     by = c(       \"location_name_full\" = \"location_name_full\",       \"location_region_group\" = \"location_region_group\",       \"location_region_group_code\" = \"location_region_group_code\"     )   ) %>%   left_join(     tab2_y2t_rat_rank,     by = c(       \"location_name_full\" = \"location_name_full\",       \"location_region_group\" = \"location_region_group\",       \"location_region_group_code\" = \"location_region_group_code\"     )   ) # Select data tab_2_global_pop_teacher_v1 <- tab_2_global_pop_teacher %>%   select(     contains(\"location\"),     year1980_y2t, year2000_y2t, year2020_y2t,     chg_20v00_youthpop, chg_20v00_teacher, elas_20v00_y2t,     chg_20v80_youthpop, chg_20v80_teacher, elas_20v80_y2t   ) # drop no data rows tab_2_global_pop_teacher_v1 <- tab_2_global_pop_teacher_v1 %>%   mutate(     avg_stats = base::rowMeans(       dplyr::pick(matches(\"year|chg|elas\")),       na.rm = TRUE     )   ) %>%   drop_na(avg_stats) %>%   select(-avg_stats) df_region_counts <- tab_2_global_pop_teacher_v1 %>%   group_by(     location_region_group_code, location_region_group   ) %>%   summarize(region_count = n()) %>%   ungroup() %>%   mutate(region_count_start = cumsum(region_count) - region_count + 1) %>%   mutate(region_count_end = cumsum(region_count)) %>%   select(region_count_start, region_count_end, everything()) #> `summarise()` has grouped output by 'location_region_group_code'. You can #> override using the `.groups` argument. # Format variables tab_2_global_pop_teacher_v1 <- tab_2_global_pop_teacher_v1 %>%   select(-location_region_group, -location_region_group_code) %>%   mutate_at(     vars(contains(\"year\")),     list(~ paste0(       format(round(., 0), nsmall = 0, big.mark = \",\")     ))   ) %>%   mutate_at(     vars(contains(\"elas\")),     list(~ paste0(       format(round(., 2), nsmall = 0, big.mark = \",\")     ))   ) %>%   mutate_at(     vars(contains(\"chg\")),     list(~ paste0(       format(round(., 2) * 100,         nsmall = 0,         big.mark = \",\"       ),       \"%\"     ))   ) # Replace NAs tab_2_global_pop_teacher_v1 <- tab_2_global_pop_teacher_v1 %>%   mutate_at(vars(starts_with(\"chg\")), ~ str_replace(., \"NA%\", \"\")) %>%   mutate_at(vars(starts_with(\"year\")), ~ str_replace(., \"NA\", \"\")) %>%   mutate_at(vars(starts_with(\"elas\")), ~ str_replace(., \"NA\", \"\"))"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_pop_teachers.html","id":"generate-table","dir":"Articles","previous_headings":"Table population and teachers","what":"Generate table","title":"Table: Global youth population and teachers","text":"Now generate table. Global changes youth (Age 0-14) primary teachers","code":"ar_st_kableformat <- c(\"latex\", \"html\") for (st_kableformat in ar_st_kableformat) {   # Column names   ar_st_col_names <- c(     \"Country by region\",     \"1980\",     \"2000\",     \"2020\",     \"Youth\",     \"Teachers\",     \"$\\\\Delta$\\\\%T/$\\\\Delta$\\\\%Y\",     \"Youth\",     \"Teachers\",     \"$\\\\Delta$\\\\%T/$\\\\Delta$\\\\%Y\"   )   # Define column groups, grouping the names above   # =1/3/2 are number of columns group title covers   ar_st_col_groups_l1 <- c(     \" \" = 1,     \"Ratios\" = 3,     # \"Rank\" = 1,     \"\\\\% change\" = 2,     \"Elasticity\" = 1,     \"\\\\% change\" = 2,     \"Elasticity\" = 1   )   ar_st_col_groups_l2 <- c(     \" \" = 1,     \"Youth to teacher\" = 3,     \"2000 to 2020\" = 3,     \"1980 to 2020\" = 3   )    # Second, we construct main table, and add styling.   bk_youth_teacher_rela <- kbl(     tab_2_global_pop_teacher_v1 %>%       select(         location_name_full,         year1980_y2t, year2000_y2t, year2020_y2t,         chg_20v00_youthpop, chg_20v00_teacher, elas_20v00_y2t,         chg_20v80_youthpop, chg_20v80_teacher, elas_20v80_y2t       ),     format = st_kableformat,     label = \"main:tab:global:pop:teachers\",     # escape = F,     linesep = \"\",     booktabs = T,     longtable = T,     align = \"c\",     caption = \"Global changes in youth (Age 0-14) and primary teachers\",     col.names = ar_st_col_names   ) %>%     # see https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html#Bootstrap_table_classes     kable_styling(       bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),       full_width = F, position = \"left\"     )    # Third, we add in column groups.   bk_youth_teacher_rela <- bk_youth_teacher_rela %>%     add_header_above(ar_st_col_groups_l1) %>%     add_header_above(ar_st_col_groups_l2)    # Fourth, we add in row groups.   for (it_region in seq(1, dim(df_region_counts)[1])) {     # Reion full name info     st_loc <- as.character(df_region_counts[[it_region, \"location_region_group\"]])      # Regions start and end     it_region_count_start <- df_region_counts[[it_region, \"region_count_start\"]]     it_region_count_end <- df_region_counts[[it_region, \"region_count_end\"]]      # Add to table     bk_youth_teacher_rela <- bk_youth_teacher_rela %>%       pack_rows(         st_loc, it_region_count_start, it_region_count_end,         latex_gap_space = \"1em\",         latex_align = \"c\",         hline_after = TRUE       )   }    # Fifth, column formatting.   fl_width_country <- 3.4   st_width_country <- paste0(fl_width_country, \"cm\")   bk_youth_teacher_rela <- bk_youth_teacher_rela %>%     column_spec(1, width = st_width_country) %>%     column_spec(2:10, width = \"0.9cm\")    # Final adjustments   # Headings on all pages, note use `sub` to replace first midrule   st_headend <- paste0(     \"\\\\midrule\\\\endhead\\n\",     \"\\\\addlinespace[0.2em]\\\\hline\\\\addlinespace[0.2em]\\n\",     \"\\\\multicolumn{10}{r}{\\\\emph{Continued on next page}}\\\\\\\\\\n\",     \"\\\\endfoot\\\\endlastfoot\"   )   bk_youth_teacher_rela <- sub(bk_youth_teacher_rela,     pattern = \"\\\\midrule\", replacement = st_headend,     fixed = TRUE   )   # country-names left-align   bk_youth_teacher_rela <- gsub(bk_youth_teacher_rela,     pattern = paste0(\"\\\\centering\\\\arraybackslash}p{\", st_width_country, \"}\"),     replacement = paste0(\"\\\\raggedright\\\\arraybackslash}p{\", st_width_country, \"}\"),     fixed = TRUE   )   # midrule replacing hline   bk_youth_teacher_rela <- gsub(bk_youth_teacher_rela,     pattern = \"hline\",     replacement = \"midrule\", fixed = TRUE   )   # Backslash replace   bk_youth_teacher_rela <- gsub(bk_youth_teacher_rela,     pattern = \"\\\\textbackslash{}Delta\", replacement = \"\\\\Delta\", fixed = TRUE   )   bk_youth_teacher_rela <- gsub(bk_youth_teacher_rela,     pattern = \"\\\\textbackslash{}\", replacement = \"\", fixed = TRUE   )   bk_youth_teacher_rela <- gsub(bk_youth_teacher_rela,     pattern = \"\\\\$\", replacement = \"$\", fixed = TRUE   )   # bk_youth_teacher_rela <- gsub(bk_youth_teacher_rela,   #   pattern = \"\\\\%Y\",  replacement = \"%Y\", fixed = TRUE   # )   # bk_youth_teacher_rela <- gsub(bk_youth_teacher_rela,   #   pattern = \"\\\\% change\",  replacement = \"% change\", fixed = TRUE   # )    # Sixth, display.   # pl_bk_asset_count <- bk_asset_count %>% as_image()   if (st_kableformat == \"html\") {     print(dim(bk_youth_teacher_rela))   } else {     if (bl_tex_save) {       fileConn <- file(spn_tex_out)       writeLines(bk_youth_teacher_rela, fileConn)       close(fileConn)       if (verbose) {         print(glue::glue(\"Latex saved: {spn_tex_out}\"))       }     }   } } #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> NULL bk_youth_teacher_rela"},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_students.html","id":"load-prepped-all-location-level-files","dir":"Articles","previous_headings":"Generate input file","what":"Load prepped all location level files","title":"Table: Global students","text":"Load file interpolated data.","code":"# Locaiton codes ppts_code_wrk <- ppts_country_code # We load in the global population data. df_ppts <- ppts_easia_weuro_world_pchg"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_students.html","id":"run-prjcompppts-functions","dir":"Articles","previous_headings":"Generate input file","what":"Run PrjCompPPTS functions","title":"Table: Global students","text":"Run functions generate FLR, FPC, FEL files. Run FLR. Run FPC. Run FEL.","code":"# Generate PLR df_flr <- PrjCompPPTS::ff_ppts_lrce_flr(   df_ppts,   st_year_bins_type = \"1940t2020i01\",   ar_it_years = c(1960, 1980, 1990, 2000, 2010, 2020),   verbose = TRUE ) #> F-713479, S1 #> [1] 2000 2010 1960 1980 1990 2020 #> F-713479, S2 #> dim of youth wide file: 1616 #> dim of youth wide file: 7 #> F-713479, S2 #> [1] \"var_rat_y2t\" #> [1] \"var_lvl_youthpop\" #> [1] \"var_lvl_teacher\" #> dim FLR: 1616 #> dim FLR: 8 #> F-713479, S2 #> [1] \"var_rat_s2t\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_teacher\" #> dim FLR: 1616 #> dim FLR: 9 #> F-713479, S2 #> [1] \"var_rat_y2s\" #> [1] \"var_lvl_youthpop\" #> [1] \"var_lvl_school\" #> dim FLR: 1616 #> dim FLR: 10 #> F-713479, S2 #> [1] \"var_rat_s2s\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_school\" #> dim FLR: 1616 #> dim FLR: 11 #> F-713479, S3 #>  [1] \"location_code\"    \"location_level\"   \"year_bins\"        \"var_lvl_student\"  #>  [5] \"var_lvl_teacher\"  \"var_lvl_youthpop\" \"var_lvl_school\"   \"var_rat_y2t\"      #>  [9] \"var_rat_s2t\"      \"var_rat_y2s\"      \"var_rat_s2s\"      #> dim of youth wide ratio file: 1616 #> dim of youth wide ratio file: 11 # Generate FPC df_fpc <- PrjCompPPTS::ff_ppts_lrce_fpc(   df_flr,   ar_it_years_chg = c(1960, 1980, 2000, 2020),   ls_chg_years = list(     \"chg_80v60\" = c(1960, 1980),     \"chg_00v80\" = c(1980, 2000),     \"chg_20v00\" = c(2000, 2020),     \"chg_20v80\" = c(1980, 2020)   ), verbose = TRUE ) #> F-376864, S1 #> dim of youth wide ratio file: 6644 #> dim of youth wide ratio file: 6 #> F-376864, S2 #> dim of youth wide ratio file: 6644 #> dim of youth wide ratio file: 6 #> F-376864, S3 #> dim of youth wide ratio file: 2728 #> dim of youth wide ratio file: 8 #> F-376864, SD3 #> [1] \"chg_80v60\" #> [1] \"year1960\" #> [1] \"year1980\" #> dim FPC: 2728 #> dim FPC: 9 #> F-376864, SD3 #> [1] \"chg_00v80\" #> [1] \"year1980\" #> [1] \"year2000\" #> dim FPC: 2728 #> dim FPC: 10 #> F-376864, SD3 #> [1] \"chg_20v00\" #> [1] \"year2000\" #> [1] \"year2020\" #> dim FPC: 2728 #> dim FPC: 11 #> F-376864, SD3 #> [1] \"chg_20v80\" #> [1] \"year1980\" #> [1] \"year2020\" #> dim FPC: 2728 #> dim FPC: 12 #> F-376864, S4 #> dim FPC: 2728 #> dim FPC: 12 # Generate FEL df_fel <- PrjCompPPTS::ff_ppts_lrce_fel(   df_fpc,   verbose = TRUE ) #> F-307302, S1 #> dim df_fpc_base: 818 #> dim df_fpc_base: 7 #> F-307302, S2 #> dim df_fel_long: 2456 #> dim df_fel_long: 5 #> F-307302, S3 #> dim df_fel_wide: 1055 #> dim df_fel_wide: 7 #> F-307302, S3 #> [1] \"var_elas_y2t\" #> [1] \"var_chg_youthpop\" #> [1] \"var_chg_teacher\" #> dim FEL: 1055 #> dim FEL: 8 #> F-307302, S3 #> [1] \"var_elas_s2t\" #> [1] \"var_chg_student\" #> [1] \"var_chg_teacher\" #> dim FEL: 1055 #> dim FEL: 9 #> F-307302, S3 #> [1] \"var_elas_y2s\" #> [1] \"var_chg_youthpop\" #> [1] \"var_chg_school\" #> dim FEL: 1055 #> dim FEL: 10 #> F-307302, S3 #> [1] \"var_elas_s2s\" #> [1] \"var_chg_student\" #> [1] \"var_chg_school\" #> dim FEL: 1055 #> dim FEL: 11 #> F-307302, S4 #> dim df_fel_elas: 1055 #> dim df_fel_elas: 11 #> F-307302, S4 #> dim FEL: 517 #> dim FEL: 7"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_students.html","id":"merge-fpc-and-fel-country-and-region","dir":"Articles","previous_headings":"Generate input file","what":"Merge FPC and FEL, country and region","title":"Table: Global students","text":"Now combine level change information FPC elasticity results FEL. LRCE file, level, ratio, change, elasticity. Finally, merge country key info FPC, country-level information. FPC regional information, variables. Combine region country.","code":"df_lrce <- df_fpc %>% left_join(   df_fel %>% mutate(vartype = \"rat\"),   by = (c(     \"location_code\" = \"location_code\",     \"location_level\" = \"location_level\",     \"variable\" = \"variable\",     \"vartype\" = \"vartype\"   )) ) print(glue::glue(\"dim df_lrce: {dim(df_lrce)}\")) #> dim df_lrce: 2728 #> dim df_lrce: 16 df_lrce_country <- df_lrce %>%   filter(location_level != \"multicountry\") %>%   left_join(     ppts_code_wrk %>%       select(         location_name, location_code,         location_region_group, location_region_group_code       ),     by = c(\"location_code\" = \"location_code\")   ) %>%   # mutate(location_name_full = paste0(location_name, \" (\", location_code, \")\")) %>%   mutate(location_name_full = paste0(location_name)) %>%   select(-location_name) %>%   select(location_name_full, location_region_group, everything()) %>%   arrange(location_region_group_code, location_name_full) ar_st_wb7 <- c(\"SSF\", \"MEA\", \"LCN\", \"NAC\", \"SAS\", \"ECS\", \"EAS\") df_lrce_region <- df_lrce %>%   filter(location_level == \"multicountry\") %>%   filter(location_code %in% ar_st_wb7) %>%   left_join(     ppts_code_wrk %>%       select(         location_name, location_code, location_code_adj,         location_region_group, location_region_group_code       ),     by = c(\"location_code\" = \"location_code\")   ) %>%   select(-location_code) %>%   rename(location_code = location_code_adj) %>%   # mutate(location_name_full = paste0(location_name, \" (\", location_code, \")\")) %>%   mutate(location_name_full = paste0(location_name)) %>%   select(-location_name) %>%   select(location_name_full, location_region_group, everything()) %>%   mutate(     location_region_group_code = \"0WORLD\",     location_region_group = \"Global regions\"   ) %>%   arrange(location_region_group_code, location_code) df_lrce_region_country <- bind_rows(   df_lrce_region,   df_lrce_country %>% filter(location_level == \"country\"), )"},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_students.html","id":"prep-table-inputs","dir":"Articles","previous_headings":"Global Primary School Students Table","what":"Prep Table inputs","title":"Table: Global students","text":"Select prep Table 1. Combine national regional data together. Second, count variables regional groups. Third, format variables.","code":"# Select variables tab1aux_global_students <- df_lrce_region_country %>%   filter(     vartype == \"lvl\",     variable == \"student\"   ) %>%   select(     -vartype, -variable, -location_level, -location_code,     -chg_80v60, -contains(\"elas_\")   ) df_region_counts <- tab1aux_global_students %>%   group_by(     location_region_group_code, location_region_group   ) %>%   summarize(region_count = n()) %>%   ungroup() %>%   mutate(region_count_start = cumsum(region_count) - region_count + 1) %>%   mutate(region_count_end = cumsum(region_count)) %>%   select(region_count_start, region_count_end, everything()) #> `summarise()` has grouped output by 'location_region_group_code'. You can #> override using the `.groups` argument. # Format variables tab1aux_global_students <- tab1aux_global_students %>%   select(-location_region_group, -location_region_group_code) %>%   mutate_at(     vars(contains(\"year\")),     list(~ paste0(       format(round(. / 1000, 0), nsmall = 0, big.mark = \",\")     ))   ) %>%   mutate_at(     vars(contains(\"chg\")),     list(~ paste0(       format(round(., 2) * 100,         nsmall = 0,         big.mark = \",\"       ),       \"%\"     ))   ) # Replace NAs tab1aux_global_students <- tab1aux_global_students %>%   mutate_at(vars(starts_with(\"chg\")), ~ str_replace(., \"NA%\", \"\")) %>%   mutate_at(vars(starts_with(\"year\")), ~ str_replace(., \"NA\", \"\"))"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_students.html","id":"generate-table","dir":"Articles","previous_headings":"Global Primary School Students Table","what":"Generate table","title":"Table: Global students","text":"Now generate table. Global primary school students","code":"ar_st_kableformat <- c(\"latex\", \"html\") for (st_kableformat in ar_st_kableformat) {   # Column names   ar_st_col_names <- c(     \"Country by region\",     \"1980\",     \"2000\",     \"2020\",     # \"1980/1960\",     \"2000/1980\",     \"2020/2000\",     \"2020/1980\"   )   # Define column groups, grouping the names above   # =1/3/2 are number of columns group title covers   ar_st_col_groups <- c(     \" \" = 1,     \"Primary school students (1000s)\" = 3,     \"Primary students changes (%)\" = 3   )    # Second, we construct main table, and add styling.   bk_students <- kbl(     tab1aux_global_students %>%       select(         location_name_full,         year1980, year2000, year2020,         chg_00v80, chg_20v00, chg_20v80       ),     format = st_kableformat,     label = \"main:tab:global:students\",     # escape = F,     linesep = \"\",     booktabs = T,     longtable = T,     align = \"c\",     caption = \"Global primary school students\",     col.names = ar_st_col_names   ) %>%     # see https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html#Bootstrap_table_classes     kable_styling(       bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),       full_width = F, position = \"left\"     )    # Third, we add in column groups.   bk_students <- bk_students %>% add_header_above(ar_st_col_groups)    # Fourth, we add in row groups.   for (it_region in seq(1, dim(df_region_counts)[1])) {     # Reion full name info     st_loc <- as.character(df_region_counts[[it_region, \"location_region_group\"]])      # Regions start and end     it_region_count_start <- df_region_counts[[it_region, \"region_count_start\"]]     it_region_count_end <- df_region_counts[[it_region, \"region_count_end\"]]      # Add to table     bk_students <- bk_students %>%       pack_rows(         st_loc, it_region_count_start, it_region_count_end,         latex_gap_space = \"1em\",         latex_align = \"c\",         hline_after = TRUE       )   }    # Fifth, column formatting.   fl_width_country <- 3.4   st_width_country <- paste0(fl_width_country, \"cm\")   bk_students <- bk_students %>%     column_spec(1, width = st_width_country) %>%     column_spec(2:7, width = \"1.3cm\")    # Final adjustments   # Headings on all pages, note use `sub` to replace first midrule   st_headend <- paste0(     \"\\\\midrule\\\\endhead\\n\",     \"\\\\addlinespace[0.2em]\\\\hline\\\\addlinespace[0.2em]\\n\",     \"\\\\multicolumn{7}{r}{\\\\emph{Continued on next page}}\\\\\\\\\\n\",     \"\\\\endfoot\\\\endlastfoot\"   )   bk_students <- sub(bk_students,     pattern = \"\\\\midrule\", replacement = st_headend,     fixed = TRUE   )   # country-names left-align   bk_students <- gsub(bk_students,     pattern = paste0(\"\\\\centering\\\\arraybackslash}p{\", st_width_country, \"}\"),     replacement = paste0(\"\\\\raggedright\\\\arraybackslash}p{\", st_width_country, \"}\"),     fixed = TRUE   )   # midrule replacing hline   bk_students <- gsub(bk_students,     pattern = \"hline\",     replacement = \"midrule\", fixed = TRUE   )    # Sixth, display.   # pl_bk_asset_count <- bk_asset_count %>% as_image()   if (st_kableformat == \"html\") {     print(dim(bk_students))   } else {     if (bl_tex_save) {       fileConn <- file(spn_tex_out)       writeLines(bk_students, fileConn)       close(fileConn)       if (verbose) {         print(glue::glue(\"Latex saved: {spn_tex_out}\"))       }     }   } } #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> NULL bk_students"},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_students_teachers.html","id":"load-prepped-all-location-level-files","dir":"Articles","previous_headings":"Generate input file","what":"Load prepped all location level files","title":"Table: Global students and teachers","text":"Load file interpolated data.","code":"# Locaiton codes ppts_code_wrk <- ppts_country_code # We load in the global students data. df_ppts <- ppts_easia_weuro_world_pchg"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_students_teachers.html","id":"run-prjcompppts-functions","dir":"Articles","previous_headings":"Generate input file","what":"Run PrjCompPPTS functions","title":"Table: Global students and teachers","text":"Run functions generate FLR, FPC, FEL files. Run FLR. Run FPC. Run FEL.","code":"# Generate PLR df_flr <- PrjCompPPTS::ff_ppts_lrce_flr(   df_ppts,   st_year_bins_type = \"1940t2020i01\",   ar_it_years = c(1960, 1980, 1990, 2000, 2010, 2020),   verbose = TRUE ) #> F-713479, S1 #> [1] 2000 2010 1960 1980 1990 2020 #> F-713479, S2 #> dim of youth wide file: 1616 #> dim of youth wide file: 7 #> F-713479, S2 #> [1] \"var_rat_y2t\" #> [1] \"var_lvl_youthpop\" #> [1] \"var_lvl_teacher\" #> dim FLR: 1616 #> dim FLR: 8 #> F-713479, S2 #> [1] \"var_rat_s2t\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_teacher\" #> dim FLR: 1616 #> dim FLR: 9 #> F-713479, S2 #> [1] \"var_rat_y2s\" #> [1] \"var_lvl_youthpop\" #> [1] \"var_lvl_school\" #> dim FLR: 1616 #> dim FLR: 10 #> F-713479, S2 #> [1] \"var_rat_s2s\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_school\" #> dim FLR: 1616 #> dim FLR: 11 #> F-713479, S3 #>  [1] \"location_code\"    \"location_level\"   \"year_bins\"        \"var_lvl_student\"  #>  [5] \"var_lvl_teacher\"  \"var_lvl_youthpop\" \"var_lvl_school\"   \"var_rat_y2t\"      #>  [9] \"var_rat_s2t\"      \"var_rat_y2s\"      \"var_rat_s2s\"      #> dim of youth wide ratio file: 1616 #> dim of youth wide ratio file: 11 # Generate FPC df_fpc <- PrjCompPPTS::ff_ppts_lrce_fpc(   df_flr,   ar_it_years_chg = c(1960, 1980, 2000, 2020),   ls_chg_years = list(     \"chg_80v60\" = c(1960, 1980),     \"chg_00v80\" = c(1980, 2000),     \"chg_20v00\" = c(2000, 2020),     \"chg_20v80\" = c(1980, 2020)   ), verbose = TRUE ) #> F-376864, S1 #> dim of youth wide ratio file: 6644 #> dim of youth wide ratio file: 6 #> F-376864, S2 #> dim of youth wide ratio file: 6644 #> dim of youth wide ratio file: 6 #> F-376864, S3 #> dim of youth wide ratio file: 2728 #> dim of youth wide ratio file: 8 #> F-376864, SD3 #> [1] \"chg_80v60\" #> [1] \"year1960\" #> [1] \"year1980\" #> dim FPC: 2728 #> dim FPC: 9 #> F-376864, SD3 #> [1] \"chg_00v80\" #> [1] \"year1980\" #> [1] \"year2000\" #> dim FPC: 2728 #> dim FPC: 10 #> F-376864, SD3 #> [1] \"chg_20v00\" #> [1] \"year2000\" #> [1] \"year2020\" #> dim FPC: 2728 #> dim FPC: 11 #> F-376864, SD3 #> [1] \"chg_20v80\" #> [1] \"year1980\" #> [1] \"year2020\" #> dim FPC: 2728 #> dim FPC: 12 #> F-376864, S4 #> dim FPC: 2728 #> dim FPC: 12 # Generate FEL df_fel <- PrjCompPPTS::ff_ppts_lrce_fel(   df_fpc,   verbose = TRUE ) #> F-307302, S1 #> dim df_fpc_base: 818 #> dim df_fpc_base: 7 #> F-307302, S2 #> dim df_fel_long: 2456 #> dim df_fel_long: 5 #> F-307302, S3 #> dim df_fel_wide: 1055 #> dim df_fel_wide: 7 #> F-307302, S3 #> [1] \"var_elas_y2t\" #> [1] \"var_chg_youthpop\" #> [1] \"var_chg_teacher\" #> dim FEL: 1055 #> dim FEL: 8 #> F-307302, S3 #> [1] \"var_elas_s2t\" #> [1] \"var_chg_student\" #> [1] \"var_chg_teacher\" #> dim FEL: 1055 #> dim FEL: 9 #> F-307302, S3 #> [1] \"var_elas_y2s\" #> [1] \"var_chg_youthpop\" #> [1] \"var_chg_school\" #> dim FEL: 1055 #> dim FEL: 10 #> F-307302, S3 #> [1] \"var_elas_s2s\" #> [1] \"var_chg_student\" #> [1] \"var_chg_school\" #> dim FEL: 1055 #> dim FEL: 11 #> F-307302, S4 #> dim df_fel_elas: 1055 #> dim df_fel_elas: 11 #> F-307302, S4 #> dim FEL: 517 #> dim FEL: 7"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_students_teachers.html","id":"merge-fpc-and-fel-country-and-region","dir":"Articles","previous_headings":"Generate input file","what":"Merge FPC and FEL, country and region","title":"Table: Global students and teachers","text":"Now combine level change information FPC elasticity results FEL. LRCE file, level, ratio, change, elasticity. Finally, merge country key info FPC, country-level information. FPC regional information, variables. Combine region country.","code":"df_lrce <- df_fpc %>% left_join(   df_fel %>% mutate(vartype = \"rat\"),   by = (c(     \"location_code\" = \"location_code\",     \"location_level\" = \"location_level\",     \"variable\" = \"variable\",     \"vartype\" = \"vartype\"   )) ) print(glue::glue(\"dim df_lrce: {dim(df_lrce)}\")) #> dim df_lrce: 2728 #> dim df_lrce: 16 df_lrce_country <- df_lrce %>%   filter(location_level != \"multicountry\") %>%   left_join(     ppts_code_wrk %>%       select(         location_name, location_code,         location_region_group, location_region_group_code       ),     by = c(\"location_code\" = \"location_code\")   ) %>%   # mutate(location_name_full = paste0(location_name, \" (\", location_code, \")\")) %>%   mutate(location_name_full = paste0(location_name)) %>%   select(-location_name) %>%   select(location_name_full, location_region_group, everything()) %>%   arrange(location_region_group_code, location_name_full) ar_st_wb7 <- c(\"SSF\", \"MEA\", \"LCN\", \"NAC\", \"SAS\", \"ECS\", \"EAS\") df_lrce_region <- df_lrce %>%   filter(location_level == \"multicountry\") %>%   filter(location_code %in% ar_st_wb7) %>%   left_join(     ppts_code_wrk %>%       select(         location_name, location_code, location_code_adj,         location_region_group, location_region_group_code       ),     by = c(\"location_code\" = \"location_code\")   ) %>%   select(-location_code) %>%   rename(location_code = location_code_adj) %>%   # mutate(location_name_full = paste0(location_name, \" (\", location_code, \")\")) %>%   mutate(location_name_full = paste0(location_name)) %>%   select(-location_name) %>%   select(location_name_full, location_region_group, everything()) %>%   mutate(     location_region_group_code = \"0WORLD\",     location_region_group = \"Global regions\"   ) %>%   arrange(location_region_group_code, location_code) df_lrce_region_country <- bind_rows(   df_lrce_region,   df_lrce_country %>% filter(location_level == \"country\"), )"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_students_teachers.html","id":"table-students-and-teachers","dir":"Articles","previous_headings":"","what":"Table students and teachers","title":"Table: Global students and teachers","text":"Now develop table students teacher ratio.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_students_teachers.html","id":"prep-table-inputs","dir":"Articles","previous_headings":"Table students and teachers","what":"Prep table inputs","title":"Table: Global students and teachers","text":"Select prep Table 2. Combine national regional data together. First, select ratio elasticity. Second, ranks. Second, select percentage changes. Third, combine information together Fourth, select subset variables visualizations. Include following: var country var (3) children teacher ratio 1980, 2000, 2020 var (1) global ranking 2020 var (1) percentage change student 1980 2020 var (1) percentage change teachers 1980 2020 var (1) teacher-students elasticity Fourth, count variables regional groups. Third, format variables replace NAs.","code":"# Select s2t ratio levels and elasticity tab2_s2t_rat_elas <- df_lrce_region_country %>%   filter(     vartype == \"rat\",     variable == \"s2t\"   ) %>%   select(     -vartype, -variable, -location_level, -location_code,     -year1960, -contains(\"chg\"), -elas_80v60   ) %>%   rename_at(vars(matches(\"elas_|year\")), ~ paste0(., \"_s2t\")) print(glue::glue(\"dim tab2_s2t_rat_elas: {dim(tab2_s2t_rat_elas)}\")) #> dim tab2_s2t_rat_elas: 213 #> dim tab2_s2t_rat_elas: 9 # Select s2t ratio levels and elasticity tab2_s2t_rat_rank <- df_lrce_region_country %>%   filter(     vartype == \"rank\",     variable == \"s2t\"   ) %>%   select(     -vartype, -variable, -location_level, -location_code,     -year1960, -contains(\"chg\"), -contains(\"elas\"),   ) %>%   rename_at(vars(matches(\"year\")), ~ paste0(., \"_s2t_rank\")) print(glue::glue(\"dim tab2_s2t_rat_rank: {dim(tab2_s2t_rat_rank)}\")) #> dim tab2_s2t_rat_rank: 213 #> dim tab2_s2t_rat_rank: 6 # Select percentage changes in youth tab2_youthstudentteacher_lvl <- df_lrce_region_country %>%   filter(     vartype == \"lvl\",     variable %in% c(\"youthpop\", \"student\", \"teacher\")   ) %>%   select(     -vartype, -location_level, -location_code,     -year1960,     -contains(\"year\"), -contains(\"elas_\"), -chg_80v60   ) %>%   pivot_wider(     id_cols = c(       \"location_name_full\",       \"location_region_group\",       \"location_region_group_code\"     ),     names_from = variable,     names_prefix = \"\",     names_sep = \"_\",     values_from = c(contains(\"chg_\"))   ) print(glue::glue(\"dim tab2_youthstudentteacher_lvl: {dim(tab2_youthstudentteacher_lvl)}\")) #> dim tab2_youthstudentteacher_lvl: 217 #> dim tab2_youthstudentteacher_lvl: 12 tab_2_global_pop_teacher <- tab2_youthstudentteacher_lvl %>%   left_join(     tab2_s2t_rat_elas,     by = c(       \"location_name_full\" = \"location_name_full\",       \"location_region_group\" = \"location_region_group\",       \"location_region_group_code\" = \"location_region_group_code\"     )   ) %>%   left_join(     tab2_s2t_rat_rank,     by = c(       \"location_name_full\" = \"location_name_full\",       \"location_region_group\" = \"location_region_group\",       \"location_region_group_code\" = \"location_region_group_code\"     )   ) # Select data tab_2_global_student_teacher_v1 <- tab_2_global_pop_teacher %>%   select(     contains(\"location\"),     year1980_s2t, year2000_s2t, year2020_s2t,     chg_20v00_student, chg_20v00_teacher, elas_20v00_s2t,     chg_20v80_student, chg_20v80_teacher, elas_20v80_s2t   ) # drop no data rows tab_2_global_student_teacher_v1 <- tab_2_global_student_teacher_v1 %>%   mutate(     avg_stats = base::rowMeans(       dplyr::pick(matches(\"year|chg|elas\")),       na.rm = TRUE     )   ) %>%   drop_na(avg_stats) %>%   select(-avg_stats) df_region_counts <- tab_2_global_student_teacher_v1 %>%   group_by(     location_region_group_code, location_region_group   ) %>%   summarize(region_count = n()) %>%   ungroup() %>%   mutate(region_count_start = cumsum(region_count) - region_count + 1) %>%   mutate(region_count_end = cumsum(region_count)) %>%   select(region_count_start, region_count_end, everything()) #> `summarise()` has grouped output by 'location_region_group_code'. You can #> override using the `.groups` argument. # Format variables tab_2_global_student_teacher_v1 <- tab_2_global_student_teacher_v1 %>%   select(-location_region_group, -location_region_group_code) %>%   mutate_at(     vars(contains(\"year\")),     list(~ paste0(       format(round(., 0), nsmall = 0, big.mark = \",\")     ))   ) %>%   mutate_at(     vars(contains(\"elas\")),     list(~ paste0(       format(round(., 2), nsmall = 0, big.mark = \",\")     ))   ) %>%   mutate_at(     vars(contains(\"chg\")),     list(~ paste0(       format(round(., 2) * 100,         nsmall = 0,         big.mark = \",\"       ),       \"%\"     ))   ) # Replace NAs tab_2_global_student_teacher_v1 <- tab_2_global_student_teacher_v1 %>%   mutate_at(vars(starts_with(\"chg\")), ~ str_replace(., \"NA%\", \"\")) %>%   mutate_at(vars(starts_with(\"year\")), ~ str_replace(., \"NA\", \"\")) %>%   mutate_at(vars(starts_with(\"elas\")), ~ str_replace(., \"NA\", \"\"))"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_global_students_teachers.html","id":"generate-table","dir":"Articles","previous_headings":"Table students and teachers","what":"Generate table","title":"Table: Global students and teachers","text":"Now generate table. Global changes primary students teachers","code":"ar_st_kableformat <- c(\"latex\", \"html\") for (st_kableformat in ar_st_kableformat) {   # Column names   ar_st_col_names <- c(     \"Country by region\",     \"1980\",     \"2000\",     \"2020\",     \"Students\",     \"Teachers\",     \"$\\\\Delta$\\\\%T/$\\\\Delta$\\\\%Y\",     \"Students\",     \"Teachers\",     \"$\\\\Delta$\\\\%T/$\\\\Delta$\\\\%Y\"   )   # Define column groups, grouping the names above   # =1/3/2 are number of columns group title covers   ar_st_col_groups_l1 <- c(     \" \" = 1,     \"Ratios\" = 3,     # \"Rank\" = 1,     \"\\\\% change\" = 2,     \"Elasticity\" = 1,     \"\\\\% change\" = 2,     \"Elasticity\" = 1   )   ar_st_col_groups_l2 <- c(     \" \" = 1,     \"Student to teacher\" = 3,     \"2000 to 2020\" = 3,     \"1980 to 2020\" = 3   )    # Second, we construct main table, and add styling.   bk_student_teacher_rela <- kbl(     tab_2_global_student_teacher_v1 %>%       select(         location_name_full,         year1980_s2t, year2000_s2t, year2020_s2t,         chg_20v00_student, chg_20v00_teacher, elas_20v00_s2t,         chg_20v80_student, chg_20v80_teacher, elas_20v80_s2t       ),     format = st_kableformat,     label = \"main:tab:global:students:teachers\",     # escape = F,     linesep = \"\",     booktabs = T,     longtable = T,     align = \"c\",     caption = \"Global changes in primary students and teachers\",     col.names = ar_st_col_names   ) %>%     # see https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html#Bootstrap_table_classes     kable_styling(       bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),       full_width = F, position = \"left\"     )    # Third, we add in column groups.   bk_student_teacher_rela <- bk_student_teacher_rela %>%     add_header_above(ar_st_col_groups_l1) %>%     add_header_above(ar_st_col_groups_l2)    # Fourth, we add in row groups.   for (it_region in seq(1, dim(df_region_counts)[1])) {     # Reion full name info     st_loc <- as.character(df_region_counts[[it_region, \"location_region_group\"]])      # Regions start and end     it_region_count_start <- df_region_counts[[it_region, \"region_count_start\"]]     it_region_count_end <- df_region_counts[[it_region, \"region_count_end\"]]      # Add to table     bk_student_teacher_rela <- bk_student_teacher_rela %>%       pack_rows(         st_loc, it_region_count_start, it_region_count_end,         latex_gap_space = \"1em\",         latex_align = \"c\",         hline_after = TRUE       )   }    # Fifth, column formatting.   fl_width_country <- 3.4   st_width_country <- paste0(fl_width_country, \"cm\")   bk_student_teacher_rela <- bk_student_teacher_rela %>%     column_spec(1, width = st_width_country) %>%     column_spec(2:10, width = \"0.9cm\")    # Final adjustments   # Headings on all pages, note use `sub` to replace first midrule   st_headend <- paste0(     \"\\\\midrule\\\\endhead\\n\",     \"\\\\addlinespace[0.2em]\\\\hline\\\\addlinespace[0.2em]\\n\",     \"\\\\multicolumn{10}{r}{\\\\emph{Continued on next page}}\\\\\\\\\\n\",     \"\\\\endfoot\\\\endlastfoot\"   )   bk_student_teacher_rela <- sub(bk_student_teacher_rela,     pattern = \"\\\\midrule\", replacement = st_headend,     fixed = TRUE   )   # country-names left-align   bk_student_teacher_rela <- gsub(bk_student_teacher_rela,     pattern = paste0(\"\\\\centering\\\\arraybackslash}p{\", st_width_country, \"}\"),     replacement = paste0(\"\\\\raggedright\\\\arraybackslash}p{\", st_width_country, \"}\"),     fixed = TRUE   )   # midrule replacing hline   bk_student_teacher_rela <- gsub(bk_student_teacher_rela,     pattern = \"hline\",     replacement = \"midrule\", fixed = TRUE   )   # Backslash replace   bk_student_teacher_rela <- gsub(bk_student_teacher_rela,     pattern = \"\\\\textbackslash{}Delta\", replacement = \"\\\\Delta\", fixed = TRUE   )   bk_student_teacher_rela <- gsub(bk_student_teacher_rela,     pattern = \"\\\\textbackslash{}\", replacement = \"\", fixed = TRUE   )   bk_student_teacher_rela <- gsub(bk_student_teacher_rela,     pattern = \"\\\\$\", replacement = \"$\", fixed = TRUE   )   # bk_student_teacher_rela <- gsub(bk_student_teacher_rela,   #   pattern = \"\\\\%Y\",  replacement = \"%Y\", fixed = TRUE   # )   # bk_student_teacher_rela <- gsub(bk_student_teacher_rela,   #   pattern = \"\\\\% change\",  replacement = \"% change\", fixed = TRUE   # )    # Sixth, display.   # pl_bk_asset_count <- bk_asset_count %>% as_image()   if (st_kableformat == \"html\") {     print(dim(bk_student_teacher_rela))   } else {     if (bl_tex_save) {       fileConn <- file(spn_tex_out)       writeLines(bk_student_teacher_rela, fileConn)       close(fileConn)       if (verbose) {         print(glue::glue(\"Latex saved: {spn_tex_out}\"))       }     }   } } #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_region_count_start, it_region_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> NULL bk_student_teacher_rela"},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_korea_pop_teachers_schools.html","id":"load-prepped-all-location-level-files","dir":"Articles","previous_headings":"Generate input file","what":"Load prepped all location level files","title":"Table: Korea youth, students, teachers, and schools","text":"Load file interpolated data.","code":"# Locaiton codes ppts_code_wrk <- ppts_country_code # We load in the global population data. df_ppts <- ppts_easia_weuro_world_pchg # location level types df_ppts %>% distinct(location_level) #> # A tibble: 4 × 1 #>   location_level #>   <fct>          #> 1 country        #> 2 multicountry   #> 3 multiprovince  #> 4 province df_ppts_sel <- df_ppts %>%   filter(location_level %in% c(\"province\", \"multiprovince\"))  # Show all Korean locations df_ppts_sel %>% distinct(location_code) #> # A tibble: 19 × 1 #>    location_code #>    <fct>         #>  1 KOR_Metro     #>  2 KOR_NonMetro  #>  3 KOR_Busan     #>  4 KOR_Chungbuk  #>  5 KOR_Chungnam  #>  6 KOR_Daegu     #>  7 KOR_Daejeon   #>  8 KOR_Gangwon   #>  9 KOR_Gwangju   #> 10 KOR_Gyeong-gi #> 11 KOR_Gyeongbuk #> 12 KOR_Gyeongnam #> 13 KOR_Incheon   #> 14 KOR_Jeju      #> 15 KOR_Jeonbuk   #> 16 KOR_Jeonnam   #> 17 KOR_Sejong    #> 18 KOR_Seoul     #> 19 KOR_Ulsan df_ppts_sel %>% distinct(variable) #> # A tibble: 3 × 1 #>   variable #>   <fct>    #> 1 school   #> 2 student  #> 3 teacher  # Korean locations into three groups ls_korea <- list(   \"KOR_Metro\" = c(\"A1-Metro\", \"Location groups\"),   \"KOR_NonMetro\" = c(\"C1-Non-metro\", \"Location groups\"),   \"KOR_Gyeong-gi\" = c(\"A4-Gyeong-gi\", \"Capital\"),   \"KOR_Incheon\" = c(\"A3-Incheon\", \"Capital\"),   \"KOR_Seoul\" = c(\"A2-Seoul\", \"Capital\"),   \"KOR_Busan\" = c(\"B1-Busan\", \"Metropolitan cities\"),   \"KOR_Daegu\" = c(\"B2-Daegu\", \"Metropolitan cities\"),   \"KOR_Daejeon\" = c(\"B3-Daejeon\", \"Metropolitan cities\"),   \"KOR_Gwangju\" = c(\"B4-Gwangju\", \"Metropolitan cities\"),   \"KOR_Sejong\" = c(\"B5-Sejong\", \"Metropolitan cities\"),   \"KOR_Ulsan\" = c(\"B6-Ulsan\", \"Metropolitan cities\"),   \"KOR_Chungbuk\" = c(\"D1-Chungbuk\", \"Non-metropolitan cities\"),   \"KOR_Chungnam\" = c(\"D2-Chungnam\", \"Non-metropolitan cities\"),   \"KOR_Gyeongbuk\" = c(\"D3-Gyeongbuk\", \"Non-metropolitan cities\"),   \"KOR_Gyeongnam\" = c(\"D4-Gyeongnam\", \"Non-metropolitan cities\"),   \"KOR_Jeonnam\" = c(\"D5-Jeonnam\", \"Non-metropolitan cities\"),   \"KOR_Gangwon\" = c(\"E1-Gangwon\", \"Non-metropolitan cities\"),   \"KOR_Jeju\" = c(\"E2-Jeju\", \"Non-metropolitan cities\"),   \"KOR_Jeonbuk\" = c(\"E3-Jeonbuk\", \"Non-metropolitan cities\") )"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_korea_pop_teachers_schools.html","id":"run-prjcompppts-functions","dir":"Articles","previous_headings":"Generate input file","what":"Run PrjCompPPTS functions","title":"Table: Korea youth, students, teachers, and schools","text":"Run functions generate FLR, FPC, FEL files. Run FLR. Run FPC. Run FEL.","code":"# Generate PLR df_flr_korea <- PrjCompPPTS::ff_ppts_lrce_flr(   df_ppts_sel,   st_year_bins_type = \"1940t2020i01\",   ar_it_years = seq(1970, 2020, by = 10),   # c(1970, 1980, 1990, 2000, 2010, 2020),   ar_st_vars = c(\"student\", \"teacher\", \"school\"),   ls_rat_vars = list(     \"s2t\" = c(\"student\", \"teacher\"),     \"s2s\" = c(\"student\", \"school\")   ),   verbose = TRUE ) #> F-713479, S1 #> [1] 1970 1980 1990 2000 2010 2020 #> F-713479, S2 #> dim of youth wide file: 114 #> dim of youth wide file: 6 #> F-713479, S2 #> [1] \"var_rat_s2t\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_teacher\" #> dim FLR: 114 #> dim FLR: 7 #> F-713479, S2 #> [1] \"var_rat_s2s\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_school\" #> dim FLR: 114 #> dim FLR: 8 #> F-713479, S3 #> [1] \"location_code\"   \"location_level\"  \"year_bins\"       \"var_lvl_school\"  #> [5] \"var_lvl_student\" \"var_lvl_teacher\" \"var_rat_s2t\"     \"var_rat_s2s\"     #> dim of youth wide ratio file: 114 #> dim of youth wide ratio file: 8 df_flr_korea %>% distinct(year_bins) #> # A tibble: 6 × 1 #>   year_bins #>       <dbl> #> 1      1970 #> 2      1980 #> 3      1990 #> 4      2000 #> 5      2010 #> 6      2020 # Generate FPC df_fpc_korea <- PrjCompPPTS::ff_ppts_lrce_fpc(   df_flr_korea,   ar_it_years_chg = seq(1970, 2020, by = 10),   ls_chg_years = list(     \"chg_20v70\" = c(1970, 2020),     # \"chg_20v75\" = c(1975, 2020),     \"chg_20v80\" = c(1980, 2020),     # \"chg_20v85\" = c(1985, 2020),     \"chg_20v90\" = c(1990, 2020),     # \"chg_20v95\" = c(1995, 2020),     \"chg_20v00\" = c(2000, 2020),     # \"chg_20v05\" = c(2005, 2020),     \"chg_20v10\" = c(2010, 2020)     # \"chg_20v15\" = c(2015, 2020)   ), verbose = TRUE ) #> F-376864, S1 #> dim of youth wide ratio file: 570 #> dim of youth wide ratio file: 6 #> F-376864, S2 #> dim of youth wide ratio file: 570 #> dim of youth wide ratio file: 6 #> F-376864, S3 #> dim of youth wide ratio file: 190 #> dim of youth wide ratio file: 10 #> F-376864, SD3 #> [1] \"chg_20v70\" #> [1] \"year1970\" #> [1] \"year2020\" #> dim FPC: 190 #> dim FPC: 11 #> F-376864, SD3 #> [1] \"chg_20v80\" #> [1] \"year1980\" #> [1] \"year2020\" #> dim FPC: 190 #> dim FPC: 12 #> F-376864, SD3 #> [1] \"chg_20v90\" #> [1] \"year1990\" #> [1] \"year2020\" #> dim FPC: 190 #> dim FPC: 13 #> F-376864, SD3 #> [1] \"chg_20v00\" #> [1] \"year2000\" #> [1] \"year2020\" #> dim FPC: 190 #> dim FPC: 14 #> F-376864, SD3 #> [1] \"chg_20v10\" #> [1] \"year2010\" #> [1] \"year2020\" #> dim FPC: 190 #> dim FPC: 15 #> F-376864, S4 #> dim FPC: 190 #> dim FPC: 15 print(df_fpc_korea, n = 40) #> # A tibble: 190 × 15 #>    location_code location_level vartype variable  year1970  year1980  year1990 #>    <fct>         <fct>          <chr>   <chr>        <dbl>     <dbl>     <dbl> #>  1 KOR_Metro     multiprovince  lvl     school      1309      1525      1881   #>  2 KOR_Metro     multiprovince  lvl     student  2531380   3004561   3109104   #>  3 KOR_Metro     multiprovince  lvl     teacher    37375     51517     72501   #>  4 KOR_Metro     multiprovince  rat     s2t           67.7      58.3      42.9 #>  5 KOR_Metro     multiprovince  rat     s2s         1934.     1970.     1653.  #>  6 KOR_NonMetro  multiprovince  lvl     school      4652      4962      4454   #>  7 KOR_NonMetro  multiprovince  lvl     student  3217921   2653441   1759416   #>  8 KOR_NonMetro  multiprovince  lvl     teacher    63720     67547     64299   #>  9 KOR_NonMetro  multiprovince  rat     s2t           50.5      39.3      27.4 #> 10 KOR_NonMetro  multiprovince  rat     s2s          692.      535.      395.  #> 11 KOR_Busan     province       lvl     school        99       137       221   #> 12 KOR_Busan     province       lvl     student   287059    446162    457057   #> 13 KOR_Busan     province       lvl     teacher     4120      7420     10426   #> 14 KOR_Busan     province       rat     s2t           69.7      60.1      43.8 #> 15 KOR_Busan     province       rat     s2s         2900.     3257.     2068.  #> 16 KOR_Chungbuk  province       lvl     school       372       397       337   #> 17 KOR_Chungbuk  province       lvl     student   310348    222453    153273   #> 18 KOR_Chungbuk  province       lvl     teacher     6043      6237      5353   #> 19 KOR_Chungbuk  province       rat     s2t           51.4      35.7      28.6 #> 20 KOR_Chungbuk  province       rat     s2s          834.      560.      455.  #> 21 KOR_Chungnam  province       lvl     school       510       546       536   #> 22 KOR_Chungnam  province       lvl     student   349484    279723    204769   #> 23 KOR_Chungnam  province       lvl     teacher     7088      7427      7470   #> 24 KOR_Chungnam  province       rat     s2t           49.3      37.7      27.4 #> 25 KOR_Chungnam  province       rat     s2s          685.      512.      382.  #> 26 KOR_Daegu     province       lvl     school        81        86       118   #> 27 KOR_Daegu     province       lvl     student   282466    243379    255071   #> 28 KOR_Daegu     province       lvl     teacher     3884      4196      5692   #> 29 KOR_Daegu     province       rat     s2t           72.7      58.0      44.8 #> 30 KOR_Daegu     province       rat     s2s         3487.     2830.     2162.  #> 31 KOR_Daejeon   province       lvl     school        74        79        79   #> 32 KOR_Daejeon   province       lvl     student   191964    153645    120318   #> 33 KOR_Daejeon   province       lvl     teacher     2630      2756      2937   #> 34 KOR_Daejeon   province       rat     s2t           73.0      55.7      41.0 #> 35 KOR_Daejeon   province       rat     s2s         2594.     1945.     1523.  #> 36 KOR_Gangwon   province       lvl     school       607       618       499   #> 37 KOR_Gangwon   province       lvl     student   370844    292446    188114   #> 38 KOR_Gangwon   province       lvl     teacher     7100      7514      7371   #> 39 KOR_Gangwon   province       rat     s2t           52.2      38.9      25.5 #> 40 KOR_Gangwon   province       rat     s2s          611.      473.      377.  #> # ℹ 150 more rows #> # ℹ 8 more variables: year2000 <dbl>, year2010 <dbl>, year2020 <dbl>, #> #   chg_20v70 <dbl>, chg_20v80 <dbl>, chg_20v90 <dbl>, chg_20v00 <dbl>, #> #   chg_20v10 <dbl> # Generate FEL df_fel_korea <- PrjCompPPTS::ff_ppts_lrce_fel(   df_fpc_korea,   ls_rat_vars = list(     # \"y2t\" = c(\"youthpop\", \"teacher\"),     \"s2t\" = c(\"student\", \"teacher\"),     # \"y2s\" = c(\"youthpop\", \"school\"),     \"s2s\" = c(\"student\", \"school\")   ),   verbose = TRUE ) #> F-307302, S1 #> dim df_fpc_base: 57 #> dim df_fpc_base: 8 #> F-307302, S2 #> dim df_fel_long: 285 #> dim df_fel_long: 5 #> F-307302, S3 #> dim df_fel_wide: 95 #> dim df_fel_wide: 6 #> F-307302, S3 #> [1] \"var_elas_s2t\" #> [1] \"var_chg_student\" #> [1] \"var_chg_teacher\" #> dim FEL: 95 #> dim FEL: 7 #> F-307302, S3 #> [1] \"var_elas_s2s\" #> [1] \"var_chg_student\" #> [1] \"var_chg_school\" #> dim FEL: 95 #> dim FEL: 8 #> F-307302, S4 #> dim df_fel_elas: 95 #> dim df_fel_elas: 8 #> F-307302, S4 #> dim FEL: 38 #> dim FEL: 8 print(df_fel_korea, n = 40) #> # A tibble: 38 × 8 #>    location_code location_level variable elas_20v70 elas_20v80 elas_20v90 #>    <fct>         <fct>          <chr>         <dbl>      <dbl>      <dbl> #>  1 KOR_Metro     multiprovince  s2t         -0.114     -0.272     -0.573  #>  2 KOR_Metro     multiprovince  s2s         -0.185     -0.352     -0.586  #>  3 KOR_NonMetro  multiprovince  s2t        -19.0       34.8      -17.8    #>  4 KOR_NonMetro  multiprovince  s2s          2.04       1.70       1.58   #>  5 KOR_Busan     province       s2t         -0.318     -1.78      24.9    #>  6 KOR_Busan     province       s2s         -0.225     -0.538     -1.77   #>  7 KOR_Chungbuk  province       s2t         -6.41      -7.86      -1.73   #>  8 KOR_Chungbuk  province       s2s          2.37       1.76       1.90   #>  9 KOR_Chungnam  province       s2t         -2.14      -2.31      -1.72   #> 10 KOR_Chungnam  province       s2s          3.35       2.29       1.76   #> 11 KOR_Daegu     province       s2t         -0.438     -0.442     -0.920  #> 12 KOR_Daegu     province       s2s         -0.308     -0.296     -0.547  #> 13 KOR_Daejeon   province       s2t         -0.451     -0.404     -0.319  #> 14 KOR_Daejeon   province       s2s         -0.584     -0.550     -0.385  #> 15 KOR_Gangwon   province       s2t         12.3        6.42       6.13   #> 16 KOR_Gangwon   province       s2s          1.87       1.71       2.00   #> 17 KOR_Gwangju   province       s2t         -0.371     -0.367     -0.406  #> 18 KOR_Gwangju   province       s2s         -0.260     -0.251     -0.412  #> 19 KOR_Gyeong-gi province       s2t          0.137      0.145      0.0895 #> 20 KOR_Gyeong-gi province       s2s          0.557      0.536      0.180  #> 21 KOR_Gyeongbuk province       s2t          7.31       4.28       4.19   #> 22 KOR_Gyeongbuk province       s2s          1.65       1.47       1.27   #> 23 KOR_Gyeongnam province       s2t         -0.977     -0.889     -1.09   #> 24 KOR_Gyeongnam province       s2s          1.79       1.34       1.37   #> 25 KOR_Incheon   province       s2t          0.0381     0.0203    -0.201  #> 26 KOR_Incheon   province       s2s          0.0375     0.0167    -0.169  #> 27 KOR_Jeju      province       s2t         -0.283     -0.563     -0.456  #> 28 KOR_Jeju      province       s2s         -7.95      53.3       15.9    #> 29 KOR_Jeonbuk   province       s2t          6.48       4.74      34.4    #> 30 KOR_Jeonbuk   province       s2s          3.39       2.51       2.51   #> 31 KOR_Jeonnam   province       s2t          2.56       2.15       2.36   #> 32 KOR_Jeonnam   province       s2s          1.66       1.51       1.43   #> 33 KOR_Sejong    province       s2t         -0.0306     0.0651     0.404  #> 34 KOR_Sejong    province       s2s         -0.145      0.347      2.09   #> 35 KOR_Seoul     province       s2t         -0.274     -1.09      -5.05   #> 36 KOR_Seoul     province       s2s         -0.241     -0.598     -2.06   #> 37 KOR_Ulsan     province       s2t         -1.03      -0.963     -1.22   #> 38 KOR_Ulsan     province       s2s         -4.25      -8.69      -2.43   #> # ℹ 2 more variables: elas_20v00 <dbl>, elas_20v10 <dbl>"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_korea_pop_teachers_schools.html","id":"merge-fpc-and-fel-country-and-group","dir":"Articles","previous_headings":"Generate input file","what":"Merge FPC and FEL, country and group","title":"Table: Korea youth, students, teachers, and schools","text":"Now combine level change information FPC elasticity results FEL. LRCE file, level, ratio, change, elasticity. Finally, merge country key info FPC, country-level information.","code":"df_lrce_korea <- df_fpc_korea %>% left_join(   df_fel_korea %>% mutate(vartype = \"rat\"),   by = (c(     \"location_code\" = \"location_code\",     \"location_level\" = \"location_level\",     \"variable\" = \"variable\",     \"vartype\" = \"vartype\"   )) ) print(glue::glue(\"dim df_lrce_korea: {dim(df_lrce_korea)}\")) #> dim df_lrce_korea: 190 #> dim df_lrce_korea: 20 # Create empty columns df_lrce_korea <- df_lrce_korea %>%   mutate(location_name = \"\", location_region_group = \"\") # Add content to dataframe it_len_ls_korea <- length(ls_korea) ar_st_locs <- names(ls_korea) for (it_loc in seq(1, it_len_ls_korea)) {   # Get strings   st_location_code <- ar_st_locs[it_loc]   ar_st_location_display <- ls_korea[[it_loc]]   st_loc_name_disp <- ar_st_location_display[[1]]   st_loc_group <- ar_st_location_display[[2]]   # Add values   df_lrce_korea <- df_lrce_korea %>%     mutate(       location_name = case_when(         location_code == st_location_code ~ st_loc_name_disp,         TRUE ~ location_name       ),       location_region_group = case_when(         location_code == st_location_code ~ st_loc_group,         TRUE ~ location_region_group       )     ) } # reselect vars df_lrce_korea <- df_lrce_korea %>%   select(location_code, location_level, location_name, location_region_group, everything())"},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_korea_pop_teachers_schools.html","id":"prep-table-inputs","dir":"Articles","previous_headings":"Global Population Table","what":"Prep Table inputs","title":"Table: Korea youth, students, teachers, and schools","text":"First, select level percentage changes year year four variables. Also get ratio elasticities. Second, reshape time variables table wide long. Third, combine long files, convert countries columns, reshape wide. Fourth, organize columns, generate four subsets. Fifth, format type variables separately. Sixth, combine four stats , now formatting done. Finally, count group, generate labeling string","code":"# level df_lvl_korea <- df_lrce_korea %>%   filter(vartype == \"lvl\") %>%   select(     location_code, location_level, location_name, location_region_group,     variable, contains(\"year\")   ) # change df_chg_korea <- df_lrce_korea %>%   filter(vartype == \"lvl\") %>%   select(     location_code, location_level, location_name, location_region_group,     variable, contains(\"chg\")   ) # ratio df_rat_korea <- df_lrce_korea %>%   filter(vartype == \"rat\") %>%   select(     location_code, location_level, location_name, location_region_group,     variable, contains(\"year\")   ) # elasticity df_elas_korea <- df_lrce_korea %>%   filter(vartype == \"rat\") %>%   select(     location_code, location_level, location_name, location_region_group,     variable, contains(\"elas\")   ) # level file df_lvl_korea_long <- df_lvl_korea %>%   pivot_longer(     cols = starts_with(\"year\"),     names_to = c(\"yearset\"),     names_pattern = paste0(\"year(.*)\"),     values_to = \"stats\"   ) %>%   mutate(type = \"1lvl\") # change file df_chg_korea_long <- df_chg_korea %>%   pivot_longer(     cols = starts_with(\"chg\"),     names_to = c(\"yearset\"),     names_pattern = paste0(\"chg_(.*)\"),     values_to = \"stats\"   ) %>%   mutate(type = \"2chg\") # ratio file df_rat_korea_long <- df_rat_korea %>%   pivot_longer(     cols = starts_with(\"year\"),     names_to = c(\"yearset\"),     names_pattern = paste0(\"year(.*)\"),     values_to = \"stats\"   ) %>%   mutate(type = \"3rat\") # elasticity file df_elas_korea_long <- df_elas_korea %>%   pivot_longer(     cols = starts_with(\"elas\"),     names_to = c(\"yearset\"),     names_pattern = paste0(\"elas_(.*)\"),     values_to = \"stats\"   ) %>%   mutate(type = \"4elas\") # combine all long files df_korea_long_jnt <- bind_rows(   df_lvl_korea_long,   df_chg_korea_long,   df_rat_korea_long,   df_elas_korea_long ) # reshape long to wide df_korea_wide <- df_korea_long_jnt %>%   arrange(variable, yearset, location_name) %>%   pivot_wider(     id_cols = c(\"type\", \"variable\", \"yearset\"),     names_from = location_name,     names_prefix = \"j_\",     values_from = stats   ) # Select variables tab3_korea <- df_korea_wide %>%   select(     type, variable, yearset, everything()   ) # Four variables tab3_korea_lvl <- tab3_korea %>% filter(type == \"1lvl\") tab3_korea_chg <- tab3_korea %>% filter(type == \"2chg\") tab3_korea_rat <- tab3_korea %>% filter(type == \"3rat\") tab3_korea_elas <- tab3_korea %>% filter(type == \"4elas\") # Format variables, level in millions tab3_korea_lvl_school <- tab3_korea_lvl %>%   filter(variable == \"school\") %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(., 0),         nsmall = 0, big.mark = \",\"       )     ))   ) tab3_korea_lvl_teacher <- tab3_korea_lvl %>%   filter(variable == \"teacher\") %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(. / 1000, 1),         nsmall = 0, big.mark = \",\"       )     ))   ) tab3_korea_lvl_student <- tab3_korea_lvl %>%   filter(variable == \"student\") %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(. / 1000, 0),         nsmall = 0, big.mark = \",\"       )     ))   ) # Change in percent tab3_korea_chg <- tab3_korea_chg %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(., 2) * 100,         nsmall = 0,         big.mark = \",\"       ),       \"%\"     ))   ) # Change in ratio tab3_korea_rat <- tab3_korea_rat %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(., 0), nsmall = 0, big.mark = \",\")     ))   ) # Change in ratio tab3_korea_elas <- tab3_korea_elas %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(., 2), nsmall = 0, big.mark = \",\")     ))   ) # combine tab3_korea_jnt <- bind_rows(   tab3_korea_lvl_school,   tab3_korea_lvl_teacher,   tab3_korea_lvl_student,   tab3_korea_chg,   tab3_korea_rat,   # tab3_korea_elas ) # replace variable names for sorting tab3_korea_jnt <- tab3_korea_jnt %>%   mutate(variable_sort = case_when(     variable == \"school\" ~ \"1school\",     variable == \"teacher\" ~ \"2teacher\",     variable == \"student\" ~ \"3student\",     variable == \"s2s\" ~ \"1s2s\",     variable == \"s2t\" ~ \"3s2t\",   )) # Year sorting tab3_korea_jnt <- tab3_korea_jnt %>%   mutate(yearset = case_when(     yearset == \"20v00\" ~ \"2020 vs 2000\",     yearset == \"20v10\" ~ \"2020 vs 2010\",     yearset == \"20v60\" ~ \"2020 vs 1960\",     yearset == \"20v70\" ~ \"2020 vs 1970\",     yearset == \"20v80\" ~ \"2020 vs 1980\",     yearset == \"20v90\" ~ \"2020 vs 1990\",     TRUE ~ yearset   )) # replace NAs tab3_korea_jnt <- tab3_korea_jnt %>%   mutate_at(vars(starts_with(\"j_\")), ~ str_replace(., \"NA%\", \"\")) %>%   mutate_at(vars(starts_with(\"j_\")), ~ str_replace(., \"NA\", \"\"))  print(tab3_korea_jnt, n = 200) #> # A tibble: 45 × 23 #>    type  variable yearset      `j_A1-Metro` `j_A2-Seoul` `j_A3-Incheon` #>    <chr> <chr>    <chr>        <chr>        <chr>        <chr>          #>  1 1lvl  school   1970         \"1,309\"      \"206\"        \" 50\"          #>  2 1lvl  school   1980         \"1,525\"      \"291\"        \" 55\"          #>  3 1lvl  school   1990         \"1,881\"      \"463\"        \"103\"          #>  4 1lvl  school   2000         \"2,312\"      \"532\"        \"174\"          #>  5 1lvl  school   2010         \"2,893\"      \"587\"        \"226\"          #>  6 1lvl  school   2020         \"3,164\"      \"607\"        \"253\"          #>  7 1lvl  teacher  1970         \" 37.4\"      \"10.6\"       \" 2.0\"         #>  8 1lvl  teacher  1980         \" 51.5\"      \"17.9\"       \" 2.5\"         #>  9 1lvl  teacher  1990         \" 72.5\"      \"25.4\"       \" 4.5\"         #> 10 1lvl  teacher  2000         \" 86.7\"      \"25.3\"       \" 7.2\"         #> 11 1lvl  teacher  2010         \"114.8\"      \"29.3\"       \" 9.5\"         #> 12 1lvl  teacher  2020         \"123.1\"      \"28.6\"       \"10.1\"         #> 13 1lvl  student  1970         \"2,531\"      \"  770\"      \"136\"          #> 14 1lvl  student  1980         \"3,005\"      \"1,169\"      \"148\"          #> 15 1lvl  student  1990         \"3,109\"      \"1,142\"      \"208\"          #> 16 1lvl  student  2000         \"2,773\"      \"  759\"      \"246\"          #> 17 1lvl  student  2010         \"2,277\"      \"  566\"      \"183\"          #> 18 1lvl  student  2020         \"1,867\"      \"  410\"      \"157\"          #> 19 2chg  school   2020 vs 2000 \" 37%\"       \" 14%\"       \" 45%\"         #> 20 2chg  school   2020 vs 2010 \"  9%\"       \"  3%\"       \" 12%\"         #> 21 2chg  school   2020 vs 1970 \"142%\"       \"195%\"       \"406%\"         #> 22 2chg  school   2020 vs 1980 \"107%\"       \"109%\"       \"360%\"         #> 23 2chg  school   2020 vs 1990 \" 68%\"       \" 31%\"       \"146%\"         #> 24 2chg  student  2020 vs 2000 \"-33%\"       \"-46%\"       \"-36%\"         #> 25 2chg  student  2020 vs 2010 \"-18%\"       \"-28%\"       \"-14%\"         #> 26 2chg  student  2020 vs 1970 \"-26%\"       \"-47%\"       \" 15%\"         #> 27 2chg  student  2020 vs 1980 \"-38%\"       \"-65%\"       \"  6%\"         #> 28 2chg  student  2020 vs 1990 \"-40%\"       \"-64%\"       \"-25%\"         #> 29 2chg  teacher  2020 vs 2000 \" 42%\"       \" 13%\"       \" 41%\"         #> 30 2chg  teacher  2020 vs 2010 \"  7%\"       \" -2%\"       \"  6%\"         #> 31 2chg  teacher  2020 vs 1970 \"229%\"       \"171%\"       \"400%\"         #> 32 2chg  teacher  2020 vs 1980 \"139%\"       \" 60%\"       \"295%\"         #> 33 2chg  teacher  2020 vs 1990 \" 70%\"       \" 13%\"       \"123%\"         #> 34 3rat  s2s      1970         \"1,934\"      \"3,739\"      \"2,724\"        #> 35 3rat  s2s      1980         \"1,970\"      \"4,016\"      \"2,692\"        #> 36 3rat  s2s      1990         \"1,653\"      \"2,466\"      \"2,022\"        #> 37 3rat  s2s      2000         \"1,199\"      \"1,428\"      \"1,412\"        #> 38 3rat  s2s      2010         \"  787\"      \"  964\"      \"  811\"        #> 39 3rat  s2s      2020         \"  590\"      \"  675\"      \"  620\"        #> 40 3rat  s2t      1970         \"   68\"      \"   73\"      \"   68\"        #> 41 3rat  s2t      1980         \"   58\"      \"   65\"      \"   58\"        #> 42 3rat  s2t      1990         \"   43\"      \"   45\"      \"   46\"        #> 43 3rat  s2t      2000         \"   32\"      \"   30\"      \"   34\"        #> 44 3rat  s2t      2010         \"   20\"      \"   19\"      \"   19\"        #> 45 3rat  s2t      2020         \"   15\"      \"   14\"      \"   16\"        #> # ℹ 17 more variables: `j_A4-Gyeong-gi` <chr>, `j_B1-Busan` <chr>, #> #   `j_B2-Daegu` <chr>, `j_B3-Daejeon` <chr>, `j_B4-Gwangju` <chr>, #> #   `j_B5-Sejong` <chr>, `j_B6-Ulsan` <chr>, `j_C1-Non-metro` <chr>, #> #   `j_D1-Chungbuk` <chr>, `j_D2-Chungnam` <chr>, `j_D3-Gyeongbuk` <chr>, #> #   `j_D4-Gyeongnam` <chr>, `j_D5-Jeonnam` <chr>, `j_E1-Gangwon` <chr>, #> #   `j_E2-Jeju` <chr>, `j_E3-Jeonbuk` <chr>, variable_sort <chr> # Group and arrange tab3_korea_jnt <- tab3_korea_jnt %>%   arrange(     type, variable_sort, yearset,   ) # get counts df_typevar_counts <- tab3_korea_jnt %>%   group_by(     type, variable_sort, variable,   ) %>%   summarize(group_count = n()) %>%   ungroup() %>%   mutate(group_count_start = cumsum(group_count) - group_count + 1) %>%   mutate(group_count_end = cumsum(group_count)) %>%   select(group_count_start, group_count_end, everything()) #> `summarise()` has grouped output by 'type', 'variable_sort'. You can override #> using the `.groups` argument. # Generate group names df_typevar_counts <- df_typevar_counts %>%   mutate(type_lab_supra = case_when(     type == \"1lvl\" ~ \"Levels\",     type == \"2chg\" ~ \"Percentage changes over time\",     type == \"3rat\" ~ \"Ratios\",     type == \"4elas\" ~ \"Elasticities\"   )) %>%   mutate(type_lab = case_when(     type == \"1lvl\" ~ \"Number of\",     type == \"2chg\" ~ \"Percentage change in\",     type == \"3rat\" ~ \"Ratio\",     type == \"4elas\" ~ \"Elasticity\"   )) %>%   mutate(variable_lab = case_when(     (type == \"1lvl\" & variable == \"school\") ~ \"schools\",     (type == \"1lvl\" & variable == \"teacher\") ~ \"teachers (1000s)\",     (type == \"1lvl\" & variable == \"student\") ~ \"students (1000s)\",     (type == \"2chg\" & variable == \"school\") ~ \"schools\",     (type == \"2chg\" & variable == \"teacher\") ~ \"teachers\",     (type == \"2chg\" & variable == \"student\") ~ \"students\",     (type == \"2chg\" & variable == \"youthpop\") ~ \"youth 0-14\",     (type == \"3rat\" & variable == \"s2s\") ~ \"Student/School\",     (type == \"3rat\" & variable == \"s2t\") ~ \"Student/Teacher\",     (type == \"4elas\" & variable == \"s2s\") ~ \"$\\\\Delta$\\\\%Student/$\\\\Delta$\\\\%School\",     (type == \"4elas\" & variable == \"s2t\") ~ \"$\\\\Delta$\\\\%Student/$\\\\Delta$\\\\%Teacher\"   )) %>%   unite(row_name, type_lab:variable_lab, sep = \" \") # print print(df_typevar_counts, n = 100) #> # A tibble: 8 × 8 #>   group_count_start group_count_end type  variable_sort variable group_count #>               <dbl>           <int> <chr> <chr>         <chr>          <int> #> 1                 1               6 1lvl  1school       school             6 #> 2                 7              12 1lvl  2teacher      teacher            6 #> 3                13              18 1lvl  3student      student            6 #> 4                19              23 2chg  1school       school             5 #> 5                24              28 2chg  2teacher      teacher            5 #> 6                29              33 2chg  3student      student            5 #> 7                34              39 3rat  1s2s          s2s                6 #> 8                40              45 3rat  3s2t          s2t                6 #> # ℹ 2 more variables: type_lab_supra <chr>, row_name <chr>"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_korea_pop_teachers_schools.html","id":"generate-table","dir":"Articles","previous_headings":"Global Population Table","what":"Generate table","title":"Table: Korea youth, students, teachers, and schools","text":"Now generate table. Korea: Schools, Teachers, Students","code":"ar_st_kableformat <- c(\"latex\", \"html\") for (st_kableformat in ar_st_kableformat) {   # j_China, j_Japan, j_Korea, j_Taiwan,   # j_Austria, j_Germany, j_France, j_Netherlands, j_Switzerland   # Column names   ar_st_colnames <- names(df_korea_wide)   ar_st_colnames_js <- ar_st_colnames[grepl(\"j_\", ar_st_colnames)]   ar_st_clean <- stringr::str_replace(ar_st_colnames_js, \"j_[[:alnum:]]+-\", \"\")   ar_st_clean <- stringr::str_replace(ar_st_clean, \"nam\", \"-nam\")   ar_st_clean <- stringr::str_replace(ar_st_clean, \"buk\", \"-buk\")   ar_st_clean <- stringr::str_replace(ar_st_clean, \"won\", \"-won\")   ar_st_clean <- stringr::str_replace(ar_st_clean, \"Non-metro\", \"All\")   ar_st_clean <- stringr::str_replace(ar_st_clean, \"Metro\", \"All\")   ar_st_col_names <- c(     \"Years\",     ar_st_clean   )   # Define column groups, grouping the names above   # =1/3/2 are number of columns group title covers   ar_st_col_groups_l2 <- c(     \" \" = 1,     \"All\" = 1,     \"Capital cities\" = 3,     \"Metropolitian cities\" = 6,     \"All\" = 1,     \"Provinces\" = 5,     \"Special provinces\" = 3   )   ar_st_col_groups_l1 <- c(     \" \" = 1,     \"Capital and metropolitan areas\" = 10,     \"Non-metropolitan areas\" = 9   )    # select and sort   tab3_korea_jnt_kbl <- tab3_korea_jnt %>%     select(       -type, -variable, -variable_sort,       yearset, one_of(ar_st_colnames_js)     )    # Second, we construct main table, and add styling.   bk_korea <- kbl(     tab3_korea_jnt_kbl,     format = st_kableformat,     label = \"main:tab:korea:pop:teachers:schools\",     # escape = F,     linesep = \"\",     booktabs = T,     longtable = T,     align = \"c\",     caption = \"Korea: Schools, Teachers, and Students\",     col.names = ar_st_col_names   ) %>%     # see https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html#Bootstrap_table_classes     kable_styling(       bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),       full_width = F, position = \"left\"     )    # Third, we add in column groups.   bk_korea <- bk_korea %>%     add_header_above(ar_st_col_groups_l2) %>%     add_header_above(ar_st_col_groups_l1)    # Fourth, we add in row groups.   st_supra_grp_cur <- \"\"   it_supra_grp_ctr <- 0   for (it_group in seq(1, dim(df_typevar_counts)[1])) {     # supra group variable     st_supra_grp <- as.character(df_typevar_counts[[it_group, \"type_lab_supra\"]])     # Reion full name info     st_loc <- as.character(df_typevar_counts[[it_group, \"row_name\"]])      # groups start and end     it_group_count_start <- df_typevar_counts[[it_group, \"group_count_start\"]]     it_group_count_end <- df_typevar_counts[[it_group, \"group_count_end\"]]      if (st_supra_grp != st_supra_grp_cur) {       it_supra_grp_ctr <- it_supra_grp_ctr + 1       st_supra_grp_cur <- st_supra_grp       bl_hline_before <- FALSE       if (it_supra_grp_ctr >= 2) {         bl_hline_before <- TRUE       }       # Heading group stats type       st_supra_text <- paste0(st_supra_grp_cur)       bk_korea <- bk_korea %>%         pack_rows(           st_supra_text, it_group_count_start, it_group_count_start,           latex_gap_space = \"0.0em\",           indent = FALSE,           latex_align = \"c\",           hline_after = TRUE,           hline_before = bl_hline_before         )     }     # Add to table     bk_korea <- bk_korea %>%       pack_rows(         st_loc, it_group_count_start, it_group_count_end,         latex_gap_space = \"0.75em\",         latex_align = \"l\",         hline_after = FALSE       )   }    # Fifth, column formatting.   fl_width_country <- 1.9   st_width_country <- paste0(fl_width_country, \"cm\")   bk_korea <- bk_korea %>%     column_spec(1, width = st_width_country) %>%     column_spec(2:dim(tab3_korea_jnt_kbl)[2], width = \"0.75cm\")    # Final adjustments   # Headings on all pages, note use `sub` to replace first midrule   st_headend <- paste0(     \"\\\\midrule\\\\endhead\\n\",     \"\\\\addlinespace[0.2em]\\\\hline\\\\addlinespace[0.2em]\\n\",     \"\\\\multicolumn{\", dim(tab3_korea_jnt_kbl)[2], \"}{r}{\\\\emph{Continued on next page}}\\\\\\\\\\n\",     \"\\\\endfoot\\\\endlastfoot\"   )   bk_korea <- sub(bk_korea,     pattern = \"\\\\midrule\", replacement = st_headend,     fixed = TRUE   )   # country-names left-align   bk_korea <- gsub(bk_korea,     pattern = paste0(\"\\\\centering\\\\arraybackslash}p{\", st_width_country, \"}\"),     replacement = paste0(\"\\\\raggedright\\\\arraybackslash}p{\", st_width_country, \"}\"),     fixed = TRUE   )   # midrule replacing hline   bk_korea <- gsub(bk_korea,     pattern = \"hline\",     replacement = \"midrule\", fixed = TRUE   )    # Sixth, display.   # pl_bk_asset_count <- bk_asset_count %>% as_image()   # bk_korea   # Save tex to file.   if (st_kableformat == \"html\") {     print(dim(bk_korea))   } else {     if (bl_tex_save) {       fileConn <- file(spn_tex_out)       writeLines(bk_korea, fileConn)       close(fileConn)       if (verbose) {         print(glue::glue(\"F-945386, S1\"))         print(glue::glue(\"Latex saved: {spn_tex_out}\"))       }     }   } } #> Warning in pack_rows(., st_supra_text, it_group_count_start, it_group_count_start, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_supra_text, it_group_count_start, it_group_count_start, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_supra_text, it_group_count_start, it_group_count_start, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> NULL bk_korea"},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_weea_pop_teachers_schools.html","id":"load-prepped-all-location-level-files","dir":"Articles","previous_headings":"Generate input file","what":"Load prepped all location level files","title":"Table: Western Europe East Asia youth, students, teachers, and schools","text":"Load file interpolated data.","code":"# Locaiton codes ppts_code_wrk <- ppts_country_code # We load in the global population data. df_ppts <- ppts_easia_weuro_world_pchg"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_weea_pop_teachers_schools.html","id":"run-prjcompppts-functions","dir":"Articles","previous_headings":"Generate input file","what":"Run PrjCompPPTS functions","title":"Table: Western Europe East Asia youth, students, teachers, and schools","text":"Run functions generate FLR, FPC, FEL files. Run FLR. Run FPC. Run FEL.","code":"# country list ar_st_country_names <- c(   \"CHN\", \"TWN\", \"JPN\", \"KOR\",   \"AUT\", \"DEU\", \"FRA\", \"NLD\", \"CHE\" ) df_ppts_sel <- df_ppts %>%   filter(location_code %in% ar_st_country_names) # Generate PLR df_flr_weea <- PrjCompPPTS::ff_ppts_lrce_flr(   df_ppts_sel,   st_year_bins_type = \"1940t2020i01\",   ar_it_years = c(     1960, 1970, 1980, 1990, 2000, 2010, 2020   ),   verbose = TRUE ) #> F-713479, S1 #> [1] 1960 1970 1980 1990 2000 2010 2020 #> F-713479, S2 #> dim of youth wide file: 52 #> dim of youth wide file: 7 #> F-713479, S2 #> [1] \"var_rat_y2t\" #> [1] \"var_lvl_youthpop\" #> [1] \"var_lvl_teacher\" #> dim FLR: 52 #> dim FLR: 8 #> F-713479, S2 #> [1] \"var_rat_s2t\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_teacher\" #> dim FLR: 52 #> dim FLR: 9 #> F-713479, S2 #> [1] \"var_rat_y2s\" #> [1] \"var_lvl_youthpop\" #> [1] \"var_lvl_school\" #> dim FLR: 52 #> dim FLR: 10 #> F-713479, S2 #> [1] \"var_rat_s2s\" #> [1] \"var_lvl_student\" #> [1] \"var_lvl_school\" #> dim FLR: 52 #> dim FLR: 11 #> F-713479, S3 #>  [1] \"location_code\"    \"location_level\"   \"year_bins\"        \"var_lvl_school\"   #>  [5] \"var_lvl_student\"  \"var_lvl_teacher\"  \"var_lvl_youthpop\" \"var_rat_y2t\"      #>  [9] \"var_rat_s2t\"      \"var_rat_y2s\"      \"var_rat_s2s\"      #> dim of youth wide ratio file: 52 #> dim of youth wide ratio file: 11 # Generate FPC df_fpc_weea <- PrjCompPPTS::ff_ppts_lrce_fpc(   df_flr_weea,   ar_it_years_chg = c(1960, 1970, 1980, 1990, 2000, 2010, 2020),   ls_chg_years = list(     \"chg_20v60\" = c(1960, 2020),     \"chg_20v70\" = c(1970, 2020),     \"chg_20v80\" = c(1980, 2020),     \"chg_20v90\" = c(1990, 2020),     \"chg_20v00\" = c(2000, 2020),     \"chg_20v10\" = c(2010, 2020)   ), verbose = TRUE ) #> F-376864, S1 #> dim of youth wide ratio file: 395 #> dim of youth wide ratio file: 6 #> F-376864, S2 #> dim of youth wide ratio file: 395 #> dim of youth wide ratio file: 6 #> F-376864, S3 #> dim of youth wide ratio file: 144 #> dim of youth wide ratio file: 11 #> F-376864, SD3 #> [1] \"chg_20v60\" #> [1] \"year1960\" #> [1] \"year2020\" #> dim FPC: 144 #> dim FPC: 12 #> F-376864, SD3 #> [1] \"chg_20v70\" #> [1] \"year1970\" #> [1] \"year2020\" #> dim FPC: 144 #> dim FPC: 13 #> F-376864, SD3 #> [1] \"chg_20v80\" #> [1] \"year1980\" #> [1] \"year2020\" #> dim FPC: 144 #> dim FPC: 14 #> F-376864, SD3 #> [1] \"chg_20v90\" #> [1] \"year1990\" #> [1] \"year2020\" #> dim FPC: 144 #> dim FPC: 15 #> F-376864, SD3 #> [1] \"chg_20v00\" #> [1] \"year2000\" #> [1] \"year2020\" #> dim FPC: 144 #> dim FPC: 16 #> F-376864, SD3 #> [1] \"chg_20v10\" #> [1] \"year2010\" #> [1] \"year2020\" #> dim FPC: 144 #> dim FPC: 17 #> F-376864, S4 #> dim FPC: 144 #> dim FPC: 17 print(df_fpc_weea, n = 40) #> # A tibble: 144 × 17 #>    location_code location_level vartype variable    year1960   year1970 year1980 #>    <fct>         <fct>          <chr>   <chr>          <dbl>      <dbl>    <dbl> #>  1 AUT           country        lvl     school        4393       3.97e3   3.45e3 #>  2 AUT           country        lvl     student     516110       5.96e5   4.01e5 #>  3 AUT           country        lvl     teacher      21499       2.48e4   2.75e4 #>  4 AUT           country        lvl     youthpop   1566864       1.84e6   1.55e6 #>  5 AUT           country        rat     y2t             72.9     7.40e1   5.63e1 #>  6 AUT           country        rat     s2t             24.0     2.40e1   1.46e1 #>  7 AUT           country        rat     y2s            357.      4.62e2   4.49e2 #>  8 AUT           country        rat     s2s            117.      1.50e2   1.16e2 #>  9 CHE           country        lvl     school          NA      NA       NA      #> 10 CHE           country        lvl     student     573052.      5.32e5   4.40e5 #> 11 CHE           country        lvl     teacher      17449.      2.09e4   2.52e4 #> 12 CHE           country        lvl     youthpop   1315049.      1.37e6   1.28e6 #> 13 CHE           country        rat     y2t             75.4     6.53e1   5.07e1 #> 14 CHE           country        rat     s2t             32.8     2.54e1   1.75e1 #> 15 CHE           country        rat     y2s             NA      NA       NA      #> 16 CHE           country        rat     s2s             NA      NA       NA      #> 17 CHN           country        lvl     school      726484       9.61e5   9.17e5 #> 18 CHN           country        lvl     student   93791000       1.05e8   1.46e8 #> 19 CHN           country        lvl     teacher    2693000       3.61e6   5.50e6 #> 20 CHN           country        lvl     youthpop 265641893       3.31e8   3.53e8 #> 21 CHN           country        rat     y2t             98.6     9.15e1   6.41e1 #> 22 CHN           country        rat     s2t             34.8     2.91e1   2.66e1 #> 23 CHN           country        rat     y2s            366.      3.44e2   3.84e2 #> 24 CHN           country        rat     s2s            129.      1.10e2   1.59e2 #> 25 DEU           country        lvl     school          NA      NA       NA      #> 26 DEU           country        lvl     teacher         NA      NA       NA      #> 27 DEU           country        lvl     youthpop        NA      NA       NA      #> 28 DEU           country        rat     y2t             NA      NA       NA      #> 29 DEU           country        rat     y2s             NA      NA       NA      #> 30 DEU           country        lvl     student         NA      NA       NA      #> 31 DEU           country        rat     s2t             NA      NA       NA      #> 32 DEU           country        rat     s2s             NA      NA       NA      #> 33 FRA           country        lvl     school          NA      NA        6.07e4 #> 34 FRA           country        lvl     student         NA      NA        6.13e6 #> 35 FRA           country        lvl     teacher         NA      NA        2.92e5 #> 36 FRA           country        lvl     youthpop        NA      NA        1.24e7 #> 37 FRA           country        rat     y2t             NA      NA        4.24e1 #> 38 FRA           country        rat     s2t             NA      NA        2.10e1 #> 39 FRA           country        rat     y2s             NA      NA        2.04e2 #> 40 FRA           country        rat     s2s             NA      NA        1.01e2 #> # ℹ 104 more rows #> # ℹ 10 more variables: year1990 <dbl>, year2000 <dbl>, year2010 <dbl>, #> #   year2020 <dbl>, chg_20v60 <dbl>, chg_20v70 <dbl>, chg_20v80 <dbl>, #> #   chg_20v90 <dbl>, chg_20v00 <dbl>, chg_20v10 <dbl> # Generate FEL df_fel_weea <- PrjCompPPTS::ff_ppts_lrce_fel(   df_fpc_weea,   verbose = TRUE ) #> F-307302, S1 #> dim df_fpc_base: 36 #> dim df_fpc_base: 9 #> F-307302, S2 #> dim df_fel_long: 165 #> dim df_fel_long: 5 #> F-307302, S3 #> dim df_fel_wide: 43 #> dim df_fel_wide: 7 #> F-307302, S3 #> [1] \"var_elas_y2t\" #> [1] \"var_chg_youthpop\" #> [1] \"var_chg_teacher\" #> dim FEL: 43 #> dim FEL: 8 #> F-307302, S3 #> [1] \"var_elas_s2t\" #> [1] \"var_chg_student\" #> [1] \"var_chg_teacher\" #> dim FEL: 43 #> dim FEL: 9 #> F-307302, S3 #> [1] \"var_elas_y2s\" #> [1] \"var_chg_youthpop\" #> [1] \"var_chg_school\" #> dim FEL: 43 #> dim FEL: 10 #> F-307302, S3 #> [1] \"var_elas_s2s\" #> [1] \"var_chg_student\" #> [1] \"var_chg_school\" #> dim FEL: 43 #> dim FEL: 11 #> F-307302, S4 #> dim df_fel_elas: 43 #> dim df_fel_elas: 11 #> F-307302, S4 #> dim FEL: 36 #> dim FEL: 9 print(df_fel_weea, n = 40) #> # A tibble: 36 × 9 #>    location_code location_level variable elas_20v60 elas_20v70 elas_20v80 #>    <fct>         <fct>          <chr>         <dbl>      <dbl>      <dbl> #>  1 AUT           country        y2t        -0.245     -0.596     -0.480   #>  2 AUT           country        s2t        -0.445     -0.829     -0.378   #>  3 AUT           country        y2s         0.573      1.24       1.35    #>  4 AUT           country        s2s         1.04       1.73       1.06    #>  5 CHE           country        y2t        -0.00822   -0.0340     0.00839 #>  6 CHE           country        s2t        -0.0349    -0.00148    0.174   #>  7 CHE           country        y2s        NA         NA         NA       #>  8 CHE           country        s2s        NA         NA         NA       #>  9 CHN           country        y2t        -0.0427    -0.313     -1.71    #> 10 CHN           country        s2t         0.103      0.0240    -1.57    #> 11 CHN           country        y2s         0.0757     0.292      0.352   #> 12 CHN           country        s2s        -0.183     -0.0224     0.322   #> 13 DEU           country        y2t        NA         NA         NA       #> 14 DEU           country        y2s        NA         NA         NA       #> 15 DEU           country        s2t        NA         NA         NA       #> 16 DEU           country        s2s        NA         NA         NA       #> 17 FRA           country        y2t        NA         NA         -0.378   #> 18 FRA           country        s2t        NA         NA         -1.13    #> 19 FRA           country        y2s        NA         NA          0.149   #> 20 FRA           country        s2s        NA         NA          0.443   #> 21 JPN           country        y2t        -2.59      -2.50       4.45    #> 22 JPN           country        s2t        -2.91      -2.27       4.82    #> 23 JPN           country        y2s         1.63       1.75       1.99    #> 24 JPN           country        s2s         1.83       1.58       2.15    #> 25 KOR           country        y2t        NA         -0.594     -0.842   #> 26 KOR           country        s2t        NA         -0.609     -0.888   #> 27 KOR           country        y2s        NA        -19.4        8.77    #> 28 KOR           country        s2s        NA        -19.9        9.26    #> 29 NLD           country        y2s        NA         NA         NA       #> 30 NLD           country        s2s        NA         NA         NA       #> 31 NLD           country        y2t        NA         NA         NA       #> 32 NLD           country        s2t        NA         NA         NA       #> 33 TWN           country        y2t        NA         NA         -1.20    #> 34 TWN           country        s2t        NA         NA         -1.18    #> 35 TWN           country        y2s        NA         NA         -5.78    #> 36 TWN           country        s2s        NA         NA         -5.68    #> # ℹ 3 more variables: elas_20v90 <dbl>, elas_20v00 <dbl>, elas_20v10 <dbl>"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_weea_pop_teachers_schools.html","id":"merge-fpc-and-fel-country-and-group","dir":"Articles","previous_headings":"Generate input file","what":"Merge FPC and FEL, country and group","title":"Table: Western Europe East Asia youth, students, teachers, and schools","text":"Now combine level change information FPC elasticity results FEL. LRCE file, level, ratio, change, elasticity. Finally, merge country key info FPC, country-level information.","code":"df_lrce_weea <- df_fpc_weea %>% left_join(   df_fel_weea %>% mutate(vartype = \"rat\"),   by = (c(     \"location_code\" = \"location_code\",     \"location_level\" = \"location_level\",     \"variable\" = \"variable\",     \"vartype\" = \"vartype\"   )) ) print(glue::glue(\"dim df_lrce_weea: {dim(df_lrce_weea)}\")) #> dim df_lrce_weea: 144 #> dim df_lrce_weea: 23 df_lrce_weea <- df_lrce_weea %>%   left_join(     ppts_code_wrk %>%       select(         location_name, location_code,         location_region_group, location_region_group_code       ),     by = c(\"location_code\" = \"location_code\")   ) %>%   # mutate(location_name_full = paste0(location_name, \" (\", location_code, \")\")) %>%   mutate(location_name_full = paste0(location_name)) %>%   select(-location_name) %>%   select(location_name_full, location_region_group, everything()) %>%   arrange(location_region_group_code, location_name_full)"},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_weea_pop_teachers_schools.html","id":"prep-table-inputs","dir":"Articles","previous_headings":"Global Population Table","what":"Prep Table inputs","title":"Table: Western Europe East Asia youth, students, teachers, and schools","text":"First, select level percentage changes year year four variables. Also get ratio elasticities. Second, reshape time variables table wide long. Third, combine long files, convert countries columns, reshape wide. Fourth, organize columns, generate four subsets. Fifth, format type variables separately. Sixth, combine four stats , now formatting done. Finally, count group, generate labeling string","code":"# level df_lvl_weea <- df_lrce_weea %>%   filter(vartype == \"lvl\") %>%   select(location_name_full, variable, contains(\"year\")) # change df_chg_weea <- df_lrce_weea %>%   filter(vartype == \"lvl\") %>%   select(location_name_full, variable, contains(\"chg\")) # ratio df_rat_weea <- df_lrce_weea %>%   filter(vartype == \"rat\") %>%   select(location_name_full, variable, contains(\"year\")) # elasticity df_elas_weea <- df_lrce_weea %>%   filter(vartype == \"rat\") %>%   select(location_name_full, variable, contains(\"elas\")) # level file df_lvl_weea_long <- df_lvl_weea %>%   pivot_longer(     cols = starts_with(\"year\"),     names_to = c(\"yearset\"),     names_pattern = paste0(\"year(.*)\"),     values_to = \"stats\"   ) %>%   mutate(type = \"1lvl\") # change file df_chg_weea_long <- df_chg_weea %>%   pivot_longer(     cols = starts_with(\"chg\"),     names_to = c(\"yearset\"),     names_pattern = paste0(\"chg_(.*)\"),     values_to = \"stats\"   ) %>%   mutate(type = \"2chg\") # ratio file df_rat_weea_long <- df_rat_weea %>%   pivot_longer(     cols = starts_with(\"year\"),     names_to = c(\"yearset\"),     names_pattern = paste0(\"year(.*)\"),     values_to = \"stats\"   ) %>%   mutate(type = \"3rat\") # elasticity file df_elas_weea_long <- df_elas_weea %>%   pivot_longer(     cols = starts_with(\"elas\"),     names_to = c(\"yearset\"),     names_pattern = paste0(\"elas_(.*)\"),     values_to = \"stats\"   ) %>%   mutate(type = \"4elas\") # combine all long files df_weea_long_jnt <- bind_rows(   df_lvl_weea_long,   df_chg_weea_long,   df_rat_weea_long,   df_elas_weea_long ) # country name modification df_weea_long_jnt <- df_weea_long_jnt %>%   mutate(     location_name_full =       ifelse(location_name_full == \"Korea, Rep.\", \"Korea\", location_name_full)   ) # reshape long to wide df_weea_wide <- df_weea_long_jnt %>%   pivot_wider(     id_cols = c(\"type\", \"variable\", \"yearset\"),     names_from = location_name_full,     names_prefix = \"j_\",     values_from = stats   ) # Select variables tab3_weea <- df_weea_wide %>%   select(     type, variable, yearset,     j_China, j_Japan, j_Korea, j_Taiwan,     j_Austria, j_Germany, j_France, j_Netherlands, j_Switzerland   ) # Four variables tab3_weea_lvl <- tab3_weea %>% filter(type == \"1lvl\") tab3_weea_chg <- tab3_weea %>% filter(type == \"2chg\") tab3_weea_rat <- tab3_weea %>% filter(type == \"3rat\") tab3_weea_elas <- tab3_weea %>% filter(type == \"4elas\") # Format variables, level in millions tab3_weea_lvl_school <- tab3_weea_lvl %>%   filter(variable == \"school\") %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(. / 1000, 1),         nsmall = 0, big.mark = \",\"       )     ))   ) tab3_weea_lvl_teacher <- tab3_weea_lvl %>%   filter(variable == \"teacher\") %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(. / 1000, 1),         nsmall = 0, big.mark = \",\"       )     ))   ) tab3_weea_lvl_youth <- tab3_weea_lvl %>%   filter(variable == \"youthpop\") %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(. / 1000000, 1),         nsmall = 0, big.mark = \",\"       )     ))   ) tab3_weea_lvl_student <- tab3_weea_lvl %>%   filter(variable == \"student\") %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(. / 1000000, 1),         nsmall = 0, big.mark = \",\"       )     ))   ) # Change in percent tab3_weea_chg <- tab3_weea_chg %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(., 2) * 100,         nsmall = 0,         big.mark = \",\"       ),       \"%\"     ))   ) # Change in ratio tab3_weea_rat <- tab3_weea_rat %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(., 0), nsmall = 0, big.mark = \",\")     ))   ) # Change in ratio tab3_weea_elas <- tab3_weea_elas %>%   mutate_at(     vars(contains(\"j_\")),     list(~ paste0(       format(round(., 2), nsmall = 0, big.mark = \",\")     ))   ) # combine tab3_weea_jnt <- bind_rows(   tab3_weea_lvl_school,   tab3_weea_lvl_teacher,   tab3_weea_lvl_youth,   tab3_weea_lvl_student,   tab3_weea_chg,   tab3_weea_rat,   tab3_weea_elas ) # replace variable names for sorting tab3_weea_jnt <- tab3_weea_jnt %>%   mutate(variable_sort = case_when(     variable == \"school\" ~ \"1school\",     variable == \"teacher\" ~ \"2teacher\",     variable == \"student\" ~ \"3student\",     variable == \"youthpop\" ~ \"4youthpop\",     variable == \"s2s\" ~ \"1s2s\",     variable == \"y2s\" ~ \"2y2s\",     variable == \"s2t\" ~ \"3s2t\",     variable == \"y2t\" ~ \"4y2t\"   )) # Year sorting tab3_weea_jnt <- tab3_weea_jnt %>%   mutate(yearset = case_when(     yearset == \"20v00\" ~ \"2020 vs 2000\",     yearset == \"20v10\" ~ \"2020 vs 2010\",     yearset == \"20v60\" ~ \"2020 vs 1960\",     yearset == \"20v70\" ~ \"2020 vs 1970\",     yearset == \"20v80\" ~ \"2020 vs 1980\",     yearset == \"20v90\" ~ \"2020 vs 1990\",     TRUE ~ yearset   )) # replace NAs tab3_weea_jnt <- tab3_weea_jnt %>%   mutate_at(vars(starts_with(\"j_\")), ~ str_replace(., \"NA%\", \"\")) %>%   mutate_at(vars(starts_with(\"j_\")), ~ str_replace(., \"NA\", \"\"))  print(tab3_weea_jnt, n = 200) #> # A tibble: 104 × 13 #>     type  variable yearset  j_China j_Japan j_Korea j_Taiwan j_Austria j_Germany #>     <chr> <chr>    <chr>    <chr>   <chr>   <chr>   <chr>    <chr>     <chr>     #>   1 1lvl  school   1960     \"726.5\" \"26.9\"  \" \"     \" \"      \"4.4\"     \"  \"      #>   2 1lvl  school   1970     \"961.1\" \"24.8\"  \"6.0\"   \" \"      \"4.0\"     \"  \"      #>   3 1lvl  school   1980     \"917.3\" \"24.9\"  \"6.5\"   \"2.4\"    \"3.5\"     \"  \"      #>   4 1lvl  school   1990     \"766.1\" \"24.8\"  \"6.3\"   \"2.5\"    \"3.4\"     \"18.0\"    #>   5 1lvl  school   2000     \"553.6\" \"24.1\"  \"5.3\"   \"2.6\"    \"3.4\"     \"17.3\"    #>   6 1lvl  school   2010     \"257.4\" \"22.0\"  \"5.9\"   \"2.7\"    \"3.2\"     \"16.3\"    #>   7 1lvl  school   2020     \"158.0\" \"19.5\"  \"6.1\"   \"2.6\"    \"3.0\"     \"15.4\"    #>   8 1lvl  teacher  1960     \"2,693… \"360.7\" \"   \"   \"   \"    \"21.5\"    \"   \"     #>   9 1lvl  teacher  1970     \"3,612… \"367.9\" \"101.1\" \"   \"    \"24.8\"    \"   \"     #>  10 1lvl  teacher  1980     \"5,499… \"468.0\" \"119.1\" \" 69.1\"  \"27.5\"    \"   \"     #>  11 1lvl  teacher  1990     \"5,582… \"444.2\" \"136.8\" \" 82.6\"  \"29.4\"    \"181.0\"   #>  12 1lvl  teacher  2000     \"5,860… \"407.6\" \"140.0\" \"101.6\"  \"33.9\"    \"215.4\"   #>  13 1lvl  teacher  2010     \"5,617… \"419.8\" \"176.8\" \" 99.6\"  \"32.6\"    \"228.4\"   #>  14 1lvl  teacher  2020     \"6,434… \"422.6\" \"189.3\" \" 97.0\"  \"37.3\"    \"237.8\"   #>  15 1lvl  youthpop 1960     \"265.6\" \"28.2\"  \"  \"    \" \"      \"1.6\"     \"  \"      #>  16 1lvl  youthpop 1970     \"330.7\" \"24.9\"  \"13.5\"  \" \"      \"1.8\"     \"  \"      #>  17 1lvl  youthpop 1980     \"352.6\" \"27.5\"  \"12.9\"  \"5.7\"    \"1.5\"     \"  \"      #>  18 1lvl  youthpop 1990     \"324.5\" \"22.8\"  \"10.9\"  \"5.5\"    \"1.3\"     \"12.8\"    #>  19 1lvl  youthpop 2000     \"313.0\" \"18.8\"  \" 9.7\"  \"4.7\"    \"1.3\"     \"12.9\"    #>  20 1lvl  youthpop 2010     \"249.6\" \"17.1\"  \" 8.0\"  \"3.6\"    \"1.2\"     \"11.1\"    #>  21 1lvl  youthpop 2020     \"249.9\" \"15.7\"  \" 6.5\"  \"3.0\"    \"1.3\"     \"11.6\"    #>  22 1lvl  student  1960     \" 93.8\" \"12.6\"  \" \"     \" \"      \"0.5\"     \" \"       #>  23 1lvl  student  1970     \"105.3\" \" 9.5\"  \"5.7\"   \" \"      \"0.6\"     \" \"       #>  24 1lvl  student  1980     \"146.3\" \"11.8\"  \"5.7\"   \"2.2\"    \"0.4\"     \" \"       #>  25 1lvl  student  1990     \"122.4\" \" 9.4\"  \"4.9\"   \"2.4\"    \"0.4\"     \" \"       #>  26 1lvl  student  2000     \"130.1\" \" 7.4\"  \"4.0\"   \"1.9\"    \"0.4\"     \"3.4\"     #>  27 1lvl  student  2010     \" 99.4\" \" 7.0\"  \"3.3\"   \"1.5\"    \"0.3\"     \"2.8\"     #>  28 1lvl  student  2020     \"107.3\" \" 6.3\"  \"2.7\"   \"1.2\"    \"0.3\"     \"2.8\"     #>  29 2chg  school   2020 vs… \"-78%\"  \"-27%\"  \" \"     \" \"      \"-31%\"    \" \"       #>  30 2chg  school   2020 vs… \"-84%\"  \"-21%\"  \"  3%\"  \" \"      \"-24%\"    \" \"       #>  31 2chg  school   2020 vs… \"-83%\"  \"-22%\"  \" -6%\"  \"  8%\"   \"-13%\"    \" \"       #>  32 2chg  school   2020 vs… \"-79%\"  \"-21%\"  \" -3%\"  \"  6%\"   \"-11%\"    \"-14%\"    #>  33 2chg  school   2020 vs… \"-71%\"  \"-19%\"  \" 16%\"  \"  1%\"   \"-10%\"    \"-11%\"    #>  34 2chg  school   2020 vs… \"-39%\"  \"-11%\"  \"  5%\"  \" -1%\"   \" -5%\"    \" -5%\"    #>  35 2chg  student  2020 vs… \" 14%\"  \"-50%\"  \" \"     \" \"      \"-33%\"    \" \"       #>  36 2chg  student  2020 vs… \"  2%\"  \"-34%\"  \"-53%\"  \" \"      \"-42%\"    \" \"       #>  37 2chg  student  2020 vs… \"-27%\"  \"-47%\"  \"-52%\"  \"-47%\"   \"-13%\"    \" \"       #>  38 2chg  student  2020 vs… \"-12%\"  \"-33%\"  \"-45%\"  \"-50%\"   \" -7%\"    \" \"       #>  39 2chg  student  2020 vs… \"-18%\"  \"-14%\"  \"-33%\"  \"-39%\"   \"-12%\"    \"-15%\"    #>  40 2chg  student  2020 vs… \"  8%\"  \"-10%\"  \"-18%\"  \"-23%\"   \"  6%\"    \"  0%\"    #>  41 2chg  teacher  2020 vs… \"139%\"  \" 17%\"  \" \"     \" \"      \" 73%\"    \" \"       #>  42 2chg  teacher  2020 vs… \" 78%\"  \" 15%\"  \" 87%\"  \" \"      \" 50%\"    \" \"       #>  43 2chg  teacher  2020 vs… \" 17%\"  \"-10%\"  \" 59%\"  \" 40%\"   \" 35%\"    \" \"       #>  44 2chg  teacher  2020 vs… \" 15%\"  \" -5%\"  \" 38%\"  \" 17%\"   \" 27%\"    \" 31%\"    #>  45 2chg  teacher  2020 vs… \" 10%\"  \"  4%\"  \" 35%\"  \" -5%\"   \" 10%\"    \" 10%\"    #>  46 2chg  teacher  2020 vs… \" 15%\"  \"  1%\"  \"  7%\"  \" -3%\"   \" 14%\"    \"  4%\"    #>  47 2chg  youthpop 2020 vs… \" -6%\"  \"-44%\"  \" \"     \" \"      \"-18%\"    \" \"       #>  48 2chg  youthpop 2020 vs… \"-24%\"  \"-37%\"  \"-52%\"  \" \"      \"-30%\"    \" \"       #>  49 2chg  youthpop 2020 vs… \"-29%\"  \"-43%\"  \"-50%\"  \"-48%\"   \"-17%\"    \" \"       #>  50 2chg  youthpop 2020 vs… \"-23%\"  \"-31%\"  \"-40%\"  \"-46%\"   \" -1%\"    \" -9%\"    #>  51 2chg  youthpop 2020 vs… \"-20%\"  \"-16%\"  \"-33%\"  \"-37%\"   \" -5%\"    \"-10%\"    #>  52 2chg  youthpop 2020 vs… \"  0%\"  \" -8%\"  \"-19%\"  \"-18%\"   \"  4%\"    \"  5%\"    #>  53 3rat  y2t      1960     \"   99\" \"   78\" \"   \"   \"   \"    \" 73\"     \" \"       #>  54 3rat  y2t      1970     \"   92\" \"   68\" \"  134\" \"   \"    \" 74\"     \" \"       #>  55 3rat  y2t      1980     \"   64\" \"   59\" \"  108\" \"   83\"  \" 56\"     \" \"       #>  56 3rat  y2t      1990     \"   58\" \"   51\" \"   80\" \"   67\"  \" 44\"     \" 71\"     #>  57 3rat  y2t      2000     \"   53\" \"   46\" \"   69\" \"   46\"  \" 40\"     \" 60\"     #>  58 3rat  y2t      2010     \"   44\" \"   41\" \"   45\" \"   36\"  \" 38\"     \" 49\"     #>  59 3rat  y2t      2020     \"   39\" \"   37\" \"   34\" \"   31\"  \" 34\"     \" 49\"     #>  60 3rat  s2t      1960     \"   35\" \"   35\" \"   \"   \"   \"    \" 24\"     \" \"       #>  61 3rat  s2t      1970     \"   29\" \"   26\" \"   57\" \"   \"    \" 24\"     \" \"       #>  62 3rat  s2t      1980     \"   27\" \"   25\" \"   48\" \"   32\"  \" 15\"     \" \"       #>  63 3rat  s2t      1990     \"   22\" \"   21\" \"   36\" \"   29\"  \" 13\"     \" \"       #>  64 3rat  s2t      2000     \"   22\" \"   18\" \"   29\" \"   19\"  \" 12\"     \" 16\"     #>  65 3rat  s2t      2010     \"   18\" \"   17\" \"   19\" \"   15\"  \" 10\"     \" 12\"     #>  66 3rat  s2t      2020     \"   17\" \"   15\" \"   14\" \"   12\"  \"  9\"     \" 12\"     #>  67 3rat  y2s      1960     \"  366\" \"1,050\" \"   \"   \"   \"    \"357\"     \" \"       #>  68 3rat  y2s      1970     \"  344\" \"1,006\" \"2,265\" \"   \"    \"462\"     \" \"       #>  69 3rat  y2s      1980     \"  384\" \"1,104\" \"1,990\" \"2,364\"  \"449\"     \" \"       #>  70 3rat  y2s      1990     \"  424\" \"  919\" \"1,721\" \"2,222\"  \"384\"     \"709\"     #>  71 3rat  y2s      2000     \"  565\" \"  778\" \"1,840\" \"1,809\"  \"401\"     \"746\"     #>  72 3rat  y2s      2010     \"  970\" \"  777\" \"1,363\" \"1,362\"  \"388\"     \"681\"     #>  73 3rat  y2s      2020     \"1,582\" \"  802\" \"1,062\" \"1,126\"  \"426\"     \"751\"     #>  74 3rat  s2s      1960     \"  129\" \"  469\" \"   \"   \"   \"    \"117\"     \" \"       #>  75 3rat  s2s      1970     \"  110\" \"  383\" \"  964\" \"   \"    \"150\"     \" \"       #>  76 3rat  s2s      1980     \"  159\" \"  474\" \"  872\" \"  920\"  \"116\"     \" \"       #>  77 3rat  s2s      1990     \"  160\" \"  378\" \"  769\" \"  947\"  \"110\"     \" \"       #>  78 3rat  s2s      2000     \"  235\" \"  306\" \"  763\" \"  741\"  \"117\"     \"194\"     #>  79 3rat  s2s      2010     \"  386\" \"  318\" \"  564\" \"  571\"  \"103\"     \"174\"     #>  80 3rat  s2s      2020     \"  679\" \"  323\" \"  440\" \"  446\"  \"115\"     \"184\"     #>  81 4elas y2t      2020 vs… \"-0.04\" \" -2.5… \"    \"  \"    \"   \"-0.24\"   \"   \"     #>  82 4elas y2t      2020 vs… \"-0.31\" \" -2.5… \" -0.5… \"    \"   \"-0.60\"   \"   \"     #>  83 4elas y2t      2020 vs… \"-1.71\" \"  4.4… \" -0.8… \" -1.20\" \"-0.48\"   \"   \"     #>  84 4elas y2t      2020 vs… \"-1.51\" \"  6.4… \" -1.0… \" -2.66\" \"-0.04\"   \"-0.29\"   #>  85 4elas y2t      2020 vs… \"-2.06\" \" -4.4… \" -0.9… \"  8.14\" \"-0.46\"   \"-0.96\"   #>  86 4elas y2t      2020 vs… \" 0.01\" \"-12.7… \" -2.6… \"  6.99\" \" 0.31\"   \" 1.12\"   #>  87 4elas s2t      2020 vs… \" 0.10\" \" -2.9… \"    \"  \"    \"   \"-0.44\"   \"   \"     #>  88 4elas s2t      2020 vs… \" 0.02\" \" -2.2… \" -0.6… \"    \"   \"-0.83\"   \"   \"     #>  89 4elas s2t      2020 vs… \"-1.57\" \"  4.8… \" -0.8… \" -1.18\" \"-0.38\"   \"   \"     #>  90 4elas s2t      2020 vs… \"-0.81\" \"  6.7… \" -1.1… \" -2.88\" \"-0.24\"   \"   \"     #>  91 4elas s2t      2020 vs… \"-1.79\" \" -3.9… \" -0.9… \"  8.60\" \"-1.15\"   \"-1.47\"   #>  92 4elas s2t      2020 vs… \" 0.54\" \"-14.9… \" -2.5… \"  8.73\" \" 0.42\"   \" 0.04\"   #>  93 4elas y2s      2020 vs… \" 0.08\" \"  1.6… \"    \"  \"    \"   \" 0.57\"   \"   \"     #>  94 4elas y2s      2020 vs… \" 0.29\" \"  1.7… \"-19.4… \"    \"   \" 1.24\"   \"   \"     #>  95 4elas y2s      2020 vs… \" 0.35\" \"  1.9… \"  8.7… \" -5.78\" \" 1.35\"   \"   \"     #>  96 4elas y2s      2020 vs… \" 0.29\" \"  1.4… \" 11.9… \" -8.01\" \" 0.10\"   \" 0.64\"   #>  97 4elas y2s      2020 vs… \" 0.28\" \"  0.8… \" -2.0… \"-31.02\" \" 0.45\"   \" 0.94\"   #>  98 4elas y2s      2020 vs… \" 0.00\" \"  0.7… \" -4.0… \" 16.17\" \"-0.89\"   \"-0.89\"   #>  99 4elas s2s      2020 vs… \"-0.18\" \"  1.8… \"    \"  \"    \"   \" 1.04\"   \"   \"     #> 100 4elas s2s      2020 vs… \"-0.02\" \"  1.5… \"-19.9… \"    \"   \" 1.73\"   \"   \"     #> 101 4elas s2s      2020 vs… \" 0.32\" \"  2.1… \"  9.2… \" -5.68\" \" 1.06\"   \"   \"     #> 102 4elas s2s      2020 vs… \" 0.16\" \"  1.5… \" 13.1… \" -8.66\" \" 0.60\"   \"   \"     #> 103 4elas s2s      2020 vs… \" 0.25\" \"  0.7… \" -2.0… \"-32.75\" \" 1.14\"   \" 1.44\"   #> 104 4elas s2s      2020 vs… \"-0.20\" \"  0.8… \" -4.0… \" 20.19\" \"-1.22\"   \"-0.03\"   #> # ℹ 4 more variables: j_France <chr>, j_Netherlands <chr>, j_Switzerland <chr>, #> #   variable_sort <chr> # Group and arrange tab3_weea_jnt <- tab3_weea_jnt %>%   arrange(     type, variable_sort, yearset,   ) # get counts df_typevar_counts <- tab3_weea_jnt %>%   group_by(     type, variable_sort, variable,   ) %>%   summarize(group_count = n()) %>%   ungroup() %>%   mutate(group_count_start = cumsum(group_count) - group_count + 1) %>%   mutate(group_count_end = cumsum(group_count)) %>%   select(group_count_start, group_count_end, everything()) #> `summarise()` has grouped output by 'type', 'variable_sort'. You can override #> using the `.groups` argument. # Generate group names df_typevar_counts <- df_typevar_counts %>%   mutate(type_lab = case_when(     type == \"1lvl\" ~ \"Number of\",     type == \"2chg\" ~ \"Percentage change in\",     type == \"3rat\" ~ \"Ratio\",     type == \"4elas\" ~ \"Elasticity\"   )) %>%   mutate(variable_lab = case_when(     (type == \"1lvl\" & variable == \"school\") ~ \"schools (1000s)\",     (type == \"1lvl\" & variable == \"teacher\") ~ \"teachers (1000s)\",     (type == \"1lvl\" & variable == \"student\") ~ \"students (mil.)\",     (type == \"1lvl\" & variable == \"youthpop\") ~ \"youth 0-14 (mil.)\",     (type == \"2chg\" & variable == \"school\") ~ \"schools\",     (type == \"2chg\" & variable == \"teacher\") ~ \"teachers\",     (type == \"2chg\" & variable == \"student\") ~ \"students\",     (type == \"2chg\" & variable == \"youthpop\") ~ \"youth 0-14\",     (type == \"3rat\" & variable == \"s2s\") ~ \"Student/School\",     (type == \"3rat\" & variable == \"y2s\") ~ \"Youth/School\",     (type == \"3rat\" & variable == \"s2t\") ~ \"Student/Teacher\",     (type == \"3rat\" & variable == \"y2t\") ~ \"Youth/Teacher\",     (type == \"4elas\" & variable == \"s2s\") ~ \"$\\\\Delta$\\\\%Student/$\\\\Delta$\\\\%School\",     (type == \"4elas\" & variable == \"y2s\") ~ \"$\\\\Delta$\\\\%Youth/$\\\\Delta$\\\\%School\",     (type == \"4elas\" & variable == \"s2t\") ~ \"$\\\\Delta$\\\\%Student/$\\\\Delta$\\\\%Teacher\",     (type == \"4elas\" & variable == \"y2t\") ~ \"$\\\\Delta$\\\\%Youth/$\\\\Delta$\\\\%Teacher\"   )) %>%   unite(row_name, type_lab:variable_lab, sep = \" \") # print print(df_typevar_counts, n = 100) #> # A tibble: 16 × 7 #>    group_count_start group_count_end type  variable_sort variable group_count #>                <dbl>           <int> <chr> <chr>         <chr>          <int> #>  1                 1               7 1lvl  1school       school             7 #>  2                 8              14 1lvl  2teacher      teacher            7 #>  3                15              21 1lvl  3student      student            7 #>  4                22              28 1lvl  4youthpop     youthpop           7 #>  5                29              34 2chg  1school       school             6 #>  6                35              40 2chg  2teacher      teacher            6 #>  7                41              46 2chg  3student      student            6 #>  8                47              52 2chg  4youthpop     youthpop           6 #>  9                53              59 3rat  1s2s          s2s                7 #> 10                60              66 3rat  2y2s          y2s                7 #> 11                67              73 3rat  3s2t          s2t                7 #> 12                74              80 3rat  4y2t          y2t                7 #> 13                81              86 4elas 1s2s          s2s                6 #> 14                87              92 4elas 2y2s          y2s                6 #> 15                93              98 4elas 3s2t          s2t                6 #> 16                99             104 4elas 4y2t          y2t                6 #> # ℹ 1 more variable: row_name <chr>"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/articles/ffv_tab_weea_pop_teachers_schools.html","id":"generate-table","dir":"Articles","previous_headings":"Global Population Table","what":"Generate table","title":"Table: Western Europe East Asia youth, students, teachers, and schools","text":"Now generate table. East Asia Western Europe: Schools, Teachers, Students, Youth","code":"ar_st_kableformat <- c(\"latex\", \"html\") for (st_kableformat in ar_st_kableformat) {   # j_China, j_Japan, j_Korea, j_Taiwan,   # j_Austria, j_Germany, j_France, j_Netherlands, j_Switzerland   # Column names   ar_st_col_names <- c(     \"Years\",     \"China\",     \"Japan\",     \"Korea\",     \"Taiwan\",     \"Austria\",     \"Germany\",     \"France\",     \"Netherlands\",     \"Switzerland\"   )   # Define column groups, grouping the names above   # =1/3/2 are number of columns group title covers   ar_st_col_groups <- c(     \" \" = 1,     \"East Asia\" = 4,     \"Western Europe\" = 5   )    # Second, we construct main table, and add styling.   bk_weea <- kbl(     tab3_weea_jnt %>%       select(-type, -variable, -variable_sort),     format = st_kableformat,     label = \"main:tab:weaa:pop:teachers:schools\",     # escape = F,     linesep = \"\",     booktabs = T,     longtable = T,     align = \"c\",     caption = \"East Asia and Western Europe: Schools, Teachers, Students, and Youth\",     col.names = ar_st_col_names   ) %>%     # see https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html#Bootstrap_table_classes     kable_styling(       bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),       full_width = F, position = \"left\"     )    # Third, we add in column groups.   bk_weea <- bk_weea %>% add_header_above(ar_st_col_groups)    # Fourth, we add in row groups.   for (it_group in seq(1, dim(df_typevar_counts)[1])) {     # Reion full name info     st_loc <- as.character(df_typevar_counts[[it_group, \"row_name\"]])      # groups start and end     it_group_count_start <- df_typevar_counts[[it_group, \"group_count_start\"]]     it_group_count_end <- df_typevar_counts[[it_group, \"group_count_end\"]]      # Add to table     bk_weea <- bk_weea %>%       pack_rows(         st_loc, it_group_count_start, it_group_count_end,         latex_gap_space = \"1em\",         latex_align = \"c\",         hline_after = TRUE       )   }    # Fifth, column formatting.   fl_width_country <- 1.5   st_width_country <- paste0(fl_width_country, \"cm\")   bk_weea <- bk_weea %>%     column_spec(1, width = st_width_country) %>%     column_spec(2:10, width = \"1.0cm\")    # Final adjustments   # Headings on all pages, note use `sub` to replace first midrule   st_headend <- paste0(     \"\\\\midrule\\\\endhead\\n\",     \"\\\\addlinespace[0.2em]\\\\hline\\\\addlinespace[0.2em]\\n\",     \"\\\\multicolumn{10}{r}{\\\\emph{Continued on next page}}\\\\\\\\\\n\",     \"\\\\endfoot\\\\endlastfoot\"   )   bk_weea <- sub(bk_weea,     pattern = \"\\\\midrule\", replacement = st_headend,     fixed = TRUE   )   # country-names left-align   bk_weea <- gsub(bk_weea,     pattern = paste0(\"\\\\centering\\\\arraybackslash}p{\", st_width_country, \"}\"),     replacement = paste0(\"\\\\raggedright\\\\arraybackslash}p{\", st_width_country, \"}\"),     fixed = TRUE   )   # midrule replacing hline   bk_weea <- gsub(bk_weea,     pattern = \"hline\",     replacement = \"midrule\", fixed = TRUE   )    # Sixth, display.   # pl_bk_asset_count <- bk_asset_count %>% as_image()   if (st_kableformat == \"html\") {     print(dim(bk_weea))   } else {     if (bl_tex_save) {       fileConn <- file(spn_tex_out)       writeLines(bk_weea, fileConn)       close(fileConn)       if (verbose) {         print(glue::glue(\"F-945386, S1\"))         print(glue::glue(\"Latex saved: {spn_tex_out}\"))       }     }   } } #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> Warning in pack_rows(., st_loc, it_group_count_start, it_group_count_end, : latex_align parameter is not used in HTML Mode, #>                                     use label_row_css instead. #> NULL bk_weea"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emily Hannum. Author. Jeonghyeok Kim. Author. Fan Wang. Author, maintainer.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hannum E, Kim J, Wang F (2024). PrjCompPPTS: Population Growth Demographic Scarcity: Emerging Challenges Global Primary Education Provision Twenty-first Century. R package version 1.1.0, https://fanwangecon.github.io/PrjCompPPTS/, https://github.com/FanWangEcon/PrjCompPPTS.","code":"@Manual{,   title = {PrjCompPPTS: From Population Growth to Demographic Scarcity: Emerging Challenges to Global Primary Education Provision in the Twenty-first Century},   author = {Emily Hannum and Jeonghyeok Kim and Fan Wang},   year = {2024},   note = {R package version 1.1.0,     https://fanwangecon.github.io/PrjCompPPTS/},   url = {https://github.com/FanWangEcon/PrjCompPPTS}, }"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/index.html","id":"raw-data-cleaning-and-aggregation","dir":"","previous_headings":"","what":"Raw data cleaning and aggregation","title":"From Population Growth to Demographic Scarcity: Emerging Challenges to Global Primary Education Provision in the Twenty-first Century","text":"First, data-raw contains raw input data gathered international national statistical agencies. Raw global data data country stored separate subfolders. Please see online Appendix paper additional information sources country-specific administrative data. Second, stata-script/01_Data_cleaning.cleans aggregates raw input files generates data-raw/ppts_easia_weuro_world_raw.csv. Third, data-raw/ppts_easia_weuro_world.R generates data skeleton potential country-year pairings merges aggregated raw input files produce finalized raw aggregated file ppts_easia_weuro_world.rda, also stored ppts_easia_weuro_world.csv. data set documented : reference/ppts_easia_weuro_world.html.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/index.html","id":"interpolation-and-computing-statistics-of-changes","dir":"","previous_headings":"","what":"Interpolation and computing statistics of changes","title":"From Population Growth to Demographic Scarcity: Emerging Challenges to Global Primary Education Provision in the Twenty-first Century","text":"First, develop functions data interpolation: R/ffp_ppts_interp.R. gaps population, students, teacher, school data measurements, use rate change closest dates data linearly interpolate missing values. Second, implement interpolation routine, along also close-boundary extrapolation routine, vignette ffv_gen_percent_changes global dataset child population, students, teachers, schools. generates output file ppts_easia_weuro_world_pchg.rda. Third, output file ppts_easia_weuro_world_elas_interp1.rda includes percentage changes elasticities different spans year bins, generated vignette articles/ffv_gen_elasticities.html. also three functions compute levels, ratios, changes, elasticities sequentially. tested vignette: articles/ffv_dev_child_teacher_ratio.html. three functions : Function generate ratios reference/ff_ppts_lrce_flr.html Function compute percentages changes across time: reference/ff_ppts_lrce_fpc.html Function generate elasticities: reference/ff_ppts_lrce_fel.html","code":""},{"path":[]},{"path":"https://fanwangecon.github.io/PrjCompPPTS/index.html","id":"visual-comparisons-of-changes-and-trends","dir":"","previous_headings":"Data analysis and visualization","what":"Visual comparisons of changes and trends","title":"From Population Growth to Demographic Scarcity: Emerging Challenges to Global Primary Education Provision in the Twenty-first Century","text":"following scripts generate visualizations paper: stata-script/02_Global_youth_population_trends.stata-script/03_Global_education_responses.stata-script/04_East_Asia_Western_Europe_education_responses.stata-script/05_Korea_education_responses.resulting figures stored res-fig folder.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/index.html","id":"tabulations","dir":"","previous_headings":"Data analysis and visualization","what":"Tabulations","title":"From Population Growth to Demographic Scarcity: Emerging Challenges to Global Primary Education Provision in the Twenty-first Century","text":"following vignettes generate tables contained appendix paper: Table: Global youth population Table: Global youth population teachers Table: Western Europe East Asia youth, students, teachers, schools Table: Korea youth, students, teachers, schools Due limited space paper document, also present website additional statistics tables included paper PDF: Table: Global students Table: Global students teachers Table: Compare Raw Interpolated Global Panel: table, show country, share data points interpolated extrapolated based administrative data.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_interp_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Linearly interpolate missing data in-between dates with observed data — ff_ppts_interp_linear","title":"Linearly interpolate missing data in-between dates with observed data — ff_ppts_interp_linear","text":"file, df_data, grouping variables ar_svr_group data variable svr_data (e.g., population), measured sequential svr_date (e.g., year, month) dates. nonconsecutive gaps svr_data measurements, missing values dates. use rate change closest dates data linearly interpolate svr_data dates missing values. output stored variable svr_interp.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_interp_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linearly interpolate missing data in-between dates with observed data — ff_ppts_interp_linear","text":"","code":"ff_ppts_interp_linear(   df_data,   ar_svr_group = c(\"location\", \"variable\"),   svr_data = c(\"population\"),   svr_date = c(\"year\"),   svr_interp = c(\"population_interp1\"),   verbose = FALSE )"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_interp_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linearly interpolate missing data in-between dates with observed data — ff_ppts_interp_linear","text":"df_data data frame various time-series/panel missing data ar_svr_group array grouping variable names, panel groups svr_data string variable name data variable svr_date string variable name date variable svr_interp string variable name variable interpolated values verbose Boolean print details","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_interp_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linearly interpolate missing data in-between dates with observed data — ff_ppts_interp_linear","text":"dataset interpolated values","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_interp_linear.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linearly interpolate missing data in-between dates with observed data — ff_ppts_interp_linear","text":"PrjThaiHFID-issue-16","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_interp_linear.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Linearly interpolate missing data in-between dates with observed data — ff_ppts_interp_linear","text":"Fan Wang, http://fanwangecon.github.io","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate FEL file — ff_ppts_lrce_fel","title":"Generate FEL file — ff_ppts_lrce_fel","text":"Generate elasticities","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate FEL file — ff_ppts_lrce_fel","text":"","code":"ff_ppts_lrce_fel(   df_fpc,   ls_rat_vars = list(y2t = c(\"youthpop\", \"teacher\"), s2t = c(\"student\", \"teacher\"), y2s =     c(\"youthpop\", \"school\"), s2s = c(\"student\", \"school\")),   verbose = FALSE )"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate FEL file — ff_ppts_lrce_fel","text":"df_fpc Dataframe input, output PrjCompPPTS::ff_ppts_lrce_fpc PrjThaiHFID-issue-1. verbose Boolean print details","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate FEL file — ff_ppts_lrce_fel","text":"dataset ratios, levels, percentage changes, elasticities.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate FEL file — ff_ppts_lrce_fel","text":"PrjThaiHFID-issue-7, Step 3","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate FEL file — ff_ppts_lrce_fel","text":"Fan Wang, http://fanwangecon.github.io","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_flr.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate FLR file — ff_ppts_lrce_flr","title":"Generate FLR file — ff_ppts_lrce_flr","text":"Generate ratios","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_flr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate FLR file — ff_ppts_lrce_flr","text":"","code":"ff_ppts_lrce_flr(   df_ppts,   st_year_bins_type = \"1940t2020i01\",   ar_it_years = c(1960, 1980, 1990, 2000, 2010, 2020),   ar_st_vars = c(\"youthpop\", \"student\", \"teacher\", \"school\"),   ls_rat_vars = list(y2t = c(\"youthpop\", \"teacher\"), s2t = c(\"student\", \"teacher\"), y2s =     c(\"youthpop\", \"school\"), s2s = c(\"student\", \"school\")),   verbose = FALSE )"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_flr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate FLR file — ff_ppts_lrce_flr","text":"df_ppts Dataframe input. st_year_bins_type String category string ar_it_years Array Integers subset year bins select ar_st_vars Array Strings variables selected df_ppts, variables used string lists ls_rat_vars need included. ls_rat_vars List Array array numerator denominator variables ratios computed list contains new ratio name suffix verbose Boolean print details","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_flr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate FLR file — ff_ppts_lrce_flr","text":"dataset ratios levels.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_flr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate FLR file — ff_ppts_lrce_flr","text":"PrjThaiHFID-issue-7, Step 1","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_flr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate FLR file — ff_ppts_lrce_flr","text":"Fan Wang, http://fanwangecon.github.io","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fpc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate FPC file — ff_ppts_lrce_fpc","title":"Generate FPC file — ff_ppts_lrce_fpc","text":"Compute percentages changes across time","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fpc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate FPC file — ff_ppts_lrce_fpc","text":"","code":"ff_ppts_lrce_fpc(   df_flr,   ar_it_years_chg = c(1960, 1980, 2000, 2020),   ls_chg_years = list(chg_80v60 = c(1960, 1980), chg_00v80 = c(1980, 2000), chg_20v00 =     c(2000, 2020), chg_20v80 = c(1980, 2020)),   verbose = FALSE )"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fpc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate FPC file — ff_ppts_lrce_fpc","text":"df_flr Dataframe input, output PrjCompPPTS::ff_ppts_lrce_flr ar_it_years_chg Array integer, years select computing changes verbose Boolean print details ls_chg_year List Array array start end date list contains new variable names","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fpc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate FPC file — ff_ppts_lrce_fpc","text":"dataset ratios, levels, percentage changes.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fpc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generate FPC file — ff_ppts_lrce_fpc","text":"PrjThaiHFID-issue-7, Step 2","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_lrce_fpc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate FPC file — ff_ppts_lrce_fpc","text":"Fan Wang, http://fanwangecon.github.io","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_pchg.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute per-period (e.g., annualized) percentage changes — ff_ppts_pchg","title":"Compute per-period (e.g., annualized) percentage changes — ff_ppts_pchg","text":"file, df_data, grouping variables ar_svr_group data variable svr_data (e.g., population), measured sequential svr_date (e.g., year, month) dates. might non-consecutive gaps svr_data measurements, missing values dates. compute per-period changes, annualized date variable yearly, dates data available.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_pchg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute per-period (e.g., annualized) percentage changes — ff_ppts_pchg","text":"","code":"ff_ppts_pchg(   df_data,   ar_svr_group = c(\"location\", \"variable\"),   svr_data = c(\"population\"),   svr_date = c(\"year\"),   svr_pchg = c(\"population_pchg_yr\"),   verbose = FALSE )"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_pchg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute per-period (e.g., annualized) percentage changes — ff_ppts_pchg","text":"df_data data frame various time-series/panel missing data ar_svr_group array grouping variable names, panel groups svr_data string variable name data variable svr_date string variable name date variable svr_pchg string variable name variable storing per-period percentage change (e.g., annualized changes) verbose Boolean print details","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_pchg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute per-period (e.g., annualized) percentage changes — ff_ppts_pchg","text":"dataset interpolated values","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_pchg.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute per-period (e.g., annualized) percentage changes — ff_ppts_pchg","text":"PrjThaiHFID-issue-17","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ff_ppts_pchg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute per-period (e.g., annualized) percentage changes — ff_ppts_pchg","text":"Fan Wang, http://fanwangecon.github.io","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_country_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Country, region, and subcountry code and names — ppts_country_code","title":"Country, region, and subcountry code and names — ppts_country_code","text":"Country, region, subcountry code names","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_country_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Country, region, and subcountry code and names — ppts_country_code","text":"","code":"ppts_country_code"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_country_code.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Country, region, and subcountry code and names — ppts_country_code","text":"data frame 266 rows 7 variables: location_name Location full name location_code Short string code country regions location_region_group World bank seven regions location_income_group World bank country income groups location_wblend_group World bank lending category location_region_group_code 3 Let. WB 7 region + digit sorter location_code_adj Allow region country region sort","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_country_code.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Country, region, and subcountry code and names — ppts_country_code","text":"World bank","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_country_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Country, region, and subcountry code and names — ppts_country_code","text":"","code":"data(ppts_country_code) summary(ppts_country_code) #>  location_name      location_code      #>  Length:266         Length:266         #>  Class :character   Class :character   #>  Mode  :character   Mode  :character   #>                                        #>                                        #>                                        #>                                        #>                       location_region_group location_income_group #>  Europe & Central Asia (ECS)     :58        Length:266            #>  Sub-Saharan Africa (SSF)        :48        Class :character      #>  Latin America & Caribbean (LCN) :42        Mode  :character      #>  East Asia & Pacific (EAS)       :38                              #>  Middle East & North Africa (MEA):21                              #>  (Other)                         :11                              #>  NA's                            :48                              #>  location_wblend_group location_region_group_code location_code_adj  #>  Length:266            Length:266                 Length:266         #>  Class :character      Class :character           Class :character   #>  Mode  :character      Mode  :character           Mode  :character   #>                                                                      #>                                                                      #>                                                                      #>                                                                      print(ppts_country_code) #> # A tibble: 266 × 7 #>    location_name       location_code location_region_group location_income_group #>    <chr>               <chr>         <fct>                 <chr>                 #>  1 Aruba               ABW           Latin America & Cari… High income           #>  2 Afghanistan         AFG           South Asia (SAS)      Low income            #>  3 Angola              AGO           Sub-Saharan Africa (… Lower middle income   #>  4 Albania             ALB           Europe & Central Asi… Upper middle income   #>  5 Andorra             AND           Europe & Central Asi… High income           #>  6 United Arab Emirat… ARE           Middle East & North … High income           #>  7 Argentina           ARG           Latin America & Cari… Upper middle income   #>  8 Armenia             ARM           Europe & Central Asi… Upper middle income   #>  9 American Samoa      ASM           East Asia & Pacific … High income           #> 10 Antigua and Barbuda ATG           Latin America & Cari… High income           #> # ℹ 256 more rows #> # ℹ 3 more variables: location_wblend_group <chr>, #> #   location_region_group_code <chr>, location_code_adj <chr>"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world.html","id":null,"dir":"Reference","previous_headings":"","what":"Panel data on school age population, students, teachers, and schools — ppts_easia_weuro_world","title":"Panel data on school age population, students, teachers, and schools — ppts_easia_weuro_world","text":"Annual data available different time frames across countries. Data school age population teachers available globally. Data school age population, teachers schools available Western European Eastern Asian countries.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Panel data on school age population, students, teachers, and schools — ppts_easia_weuro_world","text":"","code":"ppts_easia_weuro_world"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Panel data on school age population, students, teachers, and schools — ppts_easia_weuro_world","text":"data frame 9 rows 5 variables: Country Country name countrycode Three letter country code countrycode Values equal nationwide, urban non-urban Korea stats_youthpop Youth population age 0 15 stats_student Number students primary school stats_teacher Number teachers primary school stats_school Number primary schools stats_gdp Annual GDP stats_enroll_ratio Primary school enrollment ratio","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Panel data on school age population, students, teachers, and schools — ppts_easia_weuro_world","text":"See online appendix B Hannum, Kim, Wang (2024).","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Panel data on school age population, students, teachers, and schools — ppts_easia_weuro_world","text":"Aggregate national countries except case Korea. Korea, within country data aggregated compare metropolitan non-metropolitan areas well province-specific data.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Panel data on school age population, students, teachers, and schools — ppts_easia_weuro_world","text":"","code":"data(ppts_easia_weuro_world) summary(ppts_easia_weuro_world) #>                      location_name   location_code         location_level  #>  Switzerland                :  157   CHE    :  157   country      :13529   #>  Austria                    :   98   AUT    :   98   multicountry : 3100   #>  Japan                      :   75   JPN    :   75   multiprovince:  114   #>  China                      :   73   CHN    :   73   province     :  969   #>  Afghanistan                :   62   ABW    :   62                         #>  Africa Eastern and Southern:   62   AFE    :   62                         #>  (Other)                    :17185   (Other):17185                         #>       year      stats_youthpop      stats_student       stats_teacher      #>  Min.   :1864   Min.   :1.272e+04   Min.   :     1008   Min.   :      40   #>  1st Qu.:1975   1st Qu.:7.113e+05   1st Qu.:   180278   1st Qu.:    7402   #>  Median :1991   Median :2.704e+06   Median :   814673   Median :   35938   #>  Mean   :1990   Mean   :7.559e+07   Mean   : 28134713   Mean   : 1210151   #>  3rd Qu.:2006   3rd Qu.:1.745e+07   3rd Qu.:  5809414   3rd Qu.:  340705   #>  Max.   :2022   Max.   :1.977e+09   Max.   :742831104   Max.   :32652932   #>                 NA's   :3067        NA's   :6165        NA's   :7885       #>   stats_school         stats_gdp      stats_enroll_ratio #>  Min.   :     22.0   Min.   :   144   Min.   :  3.00     #>  1st Qu.:    184.2   1st Qu.:  1277   1st Qu.: 93.00     #>  Median :    559.0   Median :  3424   Median :101.00     #>  Mean   :  34613.1   Mean   : 10500   Mean   : 97.21     #>  3rd Qu.:   3521.5   3rd Qu.: 11308   3rd Qu.:107.00     #>  Max.   :1681939.0   Max.   :181709   Max.   :222.00     #>  NA's   :16190       NA's   :5585     NA's   :7392       print(ppts_easia_weuro_world) #> # A tibble: 17,712 × 10 #>    location_name location_code location_level  year stats_youthpop stats_student #>    <fct>         <fct>         <fct>          <dbl>          <dbl>         <dbl> #>  1 Aruba         ABW           country         1960          23769            NA #>  2 Aruba         ABW           country         1961          24035            NA #>  3 Aruba         ABW           country         1962          24139            NA #>  4 Aruba         ABW           country         1963          24091            NA #>  5 Aruba         ABW           country         1964          23924            NA #>  6 Aruba         ABW           country         1965          23683            NA #>  7 Aruba         ABW           country         1966          23479            NA #>  8 Aruba         ABW           country         1967          23160            NA #>  9 Aruba         ABW           country         1968          22773            NA #> 10 Aruba         ABW           country         1969          22398            NA #> # ℹ 17,702 more rows #> # ℹ 4 more variables: stats_teacher <dbl>, stats_school <dbl>, stats_gdp <dbl>, #> #   stats_enroll_ratio <dbl>"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_elas_interp1.html","id":null,"dir":"Reference","previous_headings":"","what":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_interp1","title":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_interp1","text":"Compute elasticities different numerator denominator combinations, using non-interpolated data.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_elas_interp1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_interp1","text":"","code":"ppts_easia_weuro_world_elas_interp1"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_elas_interp1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_interp1","text":"data frame: location_code Short string code country regions location_level Country, regional sub-country variable Statistical variable year_bins_type type year binning year_bins Year bins given year binning pchg_interp1 Percentage change start end bin associated variable (denominator), interpolation extrapolation value_interp1 Level values variables, interpolation extrapolation variable_numerator variable, whose percentage change computed, numerator pchg_interp1_numerator pchg variable_numerator variable, interpolation extrapolation elasticity_interp1 pchg_interp1_numerator pchg_interp1 compute elasticities different windows possible variable variable_numerator variable combinations.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_elas_interp1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_interp1","text":"World bank, national statistics websites W. Europe E. Asia countries","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_elas_interp1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_interp1","text":"","code":"data(ppts_easia_weuro_world_elas_interp1) summary(ppts_easia_weuro_world_elas_interp1) #>  location_code          location_level      variable          year_bins_type  #>  AUT    :   915   country      :96940   gdp     :29475   1920t2020i05:60015   #>  CHN    :   780   multicountry :24760   school  : 3430   1920t2020i10:31805   #>  JPN    :   780   multiprovince:  750   student :31845   1920t2020i20:17180   #>  CHE    :   690   province     : 6375   teacher :30290   1925t2015i15:19825   #>  KOR    :   625                         youthpop:33785   1940t2020i01:    0   #>  BGD    :   530                                                               #>  (Other):124505                                                               #>   year_bins          pchg_interp1      value_interp1       variable_numerator #>  Length:128825      Min.   :  -0.873   Min.   :2.200e+01   Length:128825      #>  Class :character   1st Qu.:  -0.009   1st Qu.:6.844e+03   Class :character   #>  Mode  :character   Median :   0.105   Median :1.120e+05   Mode  :character   #>                     Mean   :   0.305   Mean   :2.617e+07                      #>                     3rd Qu.:   0.278   3rd Qu.:2.234e+06                      #>                     Max.   :1663.739   Max.   :1.977e+09                      #>                     NA's   :20750                                             #>  pchg_interp1_numerator elasticity_interp1 #>  Min.   :  -0.87        Min.   :-Inf       #>  1st Qu.:  -0.01        1st Qu.:0.07       #>  Median :   0.11        Median :1.00       #>  Mean   :   0.31        Mean   : NaN       #>  3rd Qu.:   0.28        3rd Qu.:1.00       #>  Max.   :1663.74        Max.   : Inf       #>  NA's   :47082          NA's   :50369      print(ppts_easia_weuro_world_elas_interp1) #> # A tibble: 128,825 × 10 #>    location_code location_level variable year_bins_type year_bins pchg_interp1 #>    <fct>         <fct>          <fct>    <fct>          <chr>            <dbl> #>  1 ABW           country        gdp      1920t2020i05   1981-1985        1.25  #>  2 ABW           country        gdp      1920t2020i05   1981-1985        1.25  #>  3 ABW           country        gdp      1920t2020i05   1981-1985        1.25  #>  4 ABW           country        gdp      1920t2020i05   1981-1985        1.25  #>  5 ABW           country        gdp      1920t2020i05   1981-1985        1.25  #>  6 ABW           country        gdp      1920t2020i05   1986-1990        0.903 #>  7 ABW           country        gdp      1920t2020i05   1986-1990        0.903 #>  8 ABW           country        gdp      1920t2020i05   1986-1990        0.903 #>  9 ABW           country        gdp      1920t2020i05   1986-1990        0.903 #> 10 ABW           country        gdp      1920t2020i05   1986-1990        0.903 #> # ℹ 128,815 more rows #> # ℹ 4 more variables: value_interp1 <dbl>, variable_numerator <chr>, #> #   pchg_interp1_numerator <dbl>, elasticity_interp1 <dbl>"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_elas_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_raw","title":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_raw","text":"Compute elasticities different numerator denominator combinations, using non-interpolated data.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_elas_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_raw","text":"","code":"ppts_easia_weuro_world_elas_raw"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_elas_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_raw","text":"data frame: location_code Short string code country regions location_level Country, regional sub-country variable variable associated value, also variable, whose percentage change computed, denominator year_bins_type type year binning, 1 year, 10 years, 20 years, etc. year_bins Year bins given year binning, labels different years, decades, bi-decades, etc. pchg Percentage change start end bin associated variable (denominator) value Level values variables variable_numerator variable, whose percentage change computed, numerator pchg_numerator pchg variable_numerator variable elasticity pchg_numerator pchg compute elasticities different windows possible variable variable_numerator variable combinations.","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_elas_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_raw","text":"World bank, national statistics websites W. Europe E. Asia countries","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_elas_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Elasticities across all potential variable pairs and for different time frames, non-interpolated — ppts_easia_weuro_world_elas_raw","text":"","code":"data(ppts_easia_weuro_world_elas_raw) summary(ppts_easia_weuro_world_elas_raw) #>  location_code          location_level      variable          year_bins_type  #>  AUT    :   915   country      :96940   gdp     :29475   1920t2020i05:60015   #>  CHN    :   780   multicountry :24760   school  : 3430   1920t2020i10:31805   #>  JPN    :   780   multiprovince:  750   student :31845   1920t2020i20:17180   #>  CHE    :   690   province     : 6375   teacher :30290   1925t2015i15:19825   #>  KOR    :   625                         youthpop:33785   1940t2020i01:    0   #>  BGD    :   530                                                               #>  (Other):124505                                                               #>   year_bins              pchg           value           variable_numerator #>  Length:128825      Min.   :-0.71   Min.   :2.200e+01   Length:128825      #>  Class :character   1st Qu.:-0.01   1st Qu.:7.013e+03   Class :character   #>  Mode  :character   Median : 0.10   Median :1.436e+05   Mode  :character   #>                     Mean   : 0.17   Mean   :2.937e+07                      #>                     3rd Qu.: 0.25   3rd Qu.:2.715e+06                      #>                     Max.   : 9.76   Max.   :1.977e+09                      #>                     NA's   :47830   NA's   :19255                          #>  pchg_numerator    elasticity    #>  Min.   :-0.71   Min.   :-Inf    #>  1st Qu.:-0.01   1st Qu.:0.08    #>  Median : 0.10   Median :1.00    #>  Mean   : 0.17   Mean   : NaN    #>  3rd Qu.: 0.25   3rd Qu.:1.00    #>  Max.   : 9.76   Max.   : Inf    #>  NA's   :67378   NA's   :79417   print(ppts_easia_weuro_world_elas_raw) #> # A tibble: 128,825 × 10 #>    location_code location_level variable year_bins_type year_bins  pchg value #>    <fct>         <fct>          <fct>    <fct>          <chr>     <dbl> <dbl> #>  1 ABW           country        gdp      1920t2020i05   1981-1985    NA    NA #>  2 ABW           country        gdp      1920t2020i05   1981-1985    NA    NA #>  3 ABW           country        gdp      1920t2020i05   1981-1985    NA    NA #>  4 ABW           country        gdp      1920t2020i05   1981-1985    NA    NA #>  5 ABW           country        gdp      1920t2020i05   1981-1985    NA    NA #>  6 ABW           country        gdp      1920t2020i05   1986-1990    NA 27884 #>  7 ABW           country        gdp      1920t2020i05   1986-1990    NA 27884 #>  8 ABW           country        gdp      1920t2020i05   1986-1990    NA 27884 #>  9 ABW           country        gdp      1920t2020i05   1986-1990    NA 27884 #> 10 ABW           country        gdp      1920t2020i05   1986-1990    NA 27884 #> # ℹ 128,815 more rows #> # ℹ 3 more variables: variable_numerator <chr>, pchg_numerator <dbl>, #> #   elasticity <dbl>"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_pchg.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolated and extrapolated levels and changes panel across time bins — ppts_easia_weuro_world_pchg","title":"Interpolated and extrapolated levels and changes panel across time bins — ppts_easia_weuro_world_pchg","text":"Panel data school age population, students, teachers, schools, levels changes, interpolated extrapolated","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_pchg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolated and extrapolated levels and changes panel across time bins — ppts_easia_weuro_world_pchg","text":"","code":"ppts_easia_weuro_world_pchg"},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_pchg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Interpolated and extrapolated levels and changes panel across time bins — ppts_easia_weuro_world_pchg","text":"data frame 266 rows 7 variables: location_code Short string code country regions location_level Country, regional sub-country variable Statistical variable year_bins_type type year binning, 1 year, 10 years, 20 years, etc. year_bins Year bins given year binning, labels different years, decades, bi-decades, etc. value Level start end bin value_interp1 value interpolation extrapolation pchg Percentage change start end bin pchg_interp1 pchg interpolation extrapolation","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_pchg.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Interpolated and extrapolated levels and changes panel across time bins — ppts_easia_weuro_world_pchg","text":"articles/ffv_gen_percent_changes, See online appendix C Hannum, Kim, Wang (2024).","code":""},{"path":"https://fanwangecon.github.io/PrjCompPPTS/reference/ppts_easia_weuro_world_pchg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolated and extrapolated levels and changes panel across time bins — ppts_easia_weuro_world_pchg","text":"","code":"data(ppts_easia_weuro_world_pchg) summary(ppts_easia_weuro_world_pchg) #>  location_code         location_level      variable          year_bins_type  #>  AUT    :  609   country      :62172   gdp     :18763   1920t2020i05:12003   #>  JPN    :  507   multicountry :15896   school  : 2222   1920t2020i10: 6361   #>  CHN    :  504   multiprovince:  486   student :20673   1920t2020i20: 3436   #>  CHE    :  463   province     : 4131   teacher :19549   1925t2015i15: 3965   #>  KOR    :  405                         youthpop:21478   1940t2020i01:56920   #>  BGD    :  340                                                               #>  (Other):79857                                                               #>   year_bins              pchg         pchg_interp1          value           #>  Length:82685       Min.   :-0.715   Min.   :  -0.873   Min.   :2.200e+01   #>  Class :character   1st Qu.:-0.004   1st Qu.:  -0.004   1st Qu.:7.412e+03   #>  Mode  :character   Median : 0.018   Median :   0.020   Median :1.505e+05   #>                     Mean   : 0.055   Mean   :   0.097   Mean   :2.921e+07   #>                     3rd Qu.: 0.050   3rd Qu.:   0.057   3rd Qu.:2.729e+06   #>                     Max.   : 9.758   Max.   :1663.739   Max.   :1.977e+09   #>                     NA's   :19120    NA's   :4155       NA's   :11215       #>  value_interp1       #>  Min.   :2.000e+00   #>  1st Qu.:6.790e+03   #>  Median :1.125e+05   #>  Mean   :2.600e+07   #>  3rd Qu.:2.213e+06   #>  Max.   :1.977e+09   #>                      print(ppts_easia_weuro_world_pchg) #> # A tibble: 82,685 × 9 #>    location_code location_level variable year_bins_type year_bins    pchg #>    <fct>         <fct>          <fct>    <fct>          <chr>       <dbl> #>  1 ABW           country        gdp      1920t2020i05   1981-1985 NA      #>  2 ABW           country        gdp      1920t2020i05   1986-1990 NA      #>  3 ABW           country        gdp      1920t2020i05   1991-1995  0.0532 #>  4 ABW           country        gdp      1920t2020i05   1996-2000  0.0640 #>  5 ABW           country        gdp      1920t2020i05   2001-2005 -0.0504 #>  6 ABW           country        gdp      1920t2020i05   2006-2010 -0.129  #>  7 ABW           country        gdp      1920t2020i05   2011-2015  0.0982 #>  8 ABW           country        gdp      1920t2020i05   2016-2020 NA      #>  9 ABW           country        student  1920t2020i05   1991-1995 NA      #> 10 ABW           country        student  1920t2020i05   1996-2000 NA      #> # ℹ 82,675 more rows #> # ℹ 3 more variables: pchg_interp1 <dbl>, value <dbl>, value_interp1 <dbl>"}]
